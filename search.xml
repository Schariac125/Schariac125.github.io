<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>New Start——两个月速通代码随想录</title>
      <link href="/2025/10/07/New%20Start%E2%80%94%E2%80%94%E4%B8%A4%E4%B8%AA%E6%9C%88%E9%80%9F%E9%80%9A%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/"/>
      <url>/2025/10/07/New%20Start%E2%80%94%E2%80%94%E4%B8%A4%E4%B8%AA%E6%9C%88%E9%80%9F%E9%80%9A%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="New-Start——两个月速通代码随想录"><a href="#New-Start——两个月速通代码随想录" class="headerlink" title="New Start——两个月速通代码随想录"></a>New Start——两个月速通代码随想录</h1><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>  代码随想录的训练应该紧接在PAT乙级之后，这一套题目可以很迅速的帮助复习以及查缺补漏一些算法，难度适中，题目选取是优秀，有代表性的，名副其实。</p><p>  不过这个文档纯属是我个人笔记了，不看也无所谓，直接看原作者写的就好。</p><h2 id="数组："><a href="#数组：" class="headerlink" title="数组："></a>数组：</h2><h3 id="二分查找"><a href="#二分查找" class="headerlink" title="二分查找"></a>二分查找</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">search</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; a, <span class="type">int</span> t)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n=a.<span class="built_in">size</span>();</span><br><span class="line">        set&lt;<span class="type">int</span>&gt; s;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> it:a)&#123;</span><br><span class="line">            s.<span class="built_in">insert</span>(it);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (s.<span class="built_in">find</span>(t)==s.<span class="built_in">end</span>())&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="type">int</span> l=<span class="number">0</span>,r=n<span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">while</span> (l&lt;=r)&#123;</span><br><span class="line">                <span class="type">int</span> mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">                <span class="keyword">if</span> (a[mid]==t)&#123;</span><br><span class="line">                    <span class="keyword">return</span> mid;</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(a[mid]&gt;t)&#123;</span><br><span class="line">                    r=mid<span class="number">-1</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    l=mid<span class="number">+1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="搜索插入位置"><a href="#搜索插入位置" class="headerlink" title="搜索插入位置"></a>搜索插入位置</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">searchInsert</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; a, <span class="type">int</span> t)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n=a.<span class="built_in">size</span>();</span><br><span class="line">        set&lt;<span class="type">int</span>&gt; s;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> it:a)&#123;</span><br><span class="line">            s.<span class="built_in">insert</span>(it);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (s.<span class="built_in">find</span>(t)==s.<span class="built_in">end</span>())&#123;</span><br><span class="line">            <span class="keyword">if</span> (t&lt;a[<span class="number">0</span>])&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (t&gt;a[n<span class="number">-1</span>])&#123;</span><br><span class="line">                <span class="keyword">return</span> n;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (a[i]&gt;t&amp;&amp;a[i<span class="number">-1</span>]&lt;t)&#123;</span><br><span class="line">                    <span class="keyword">return</span> i;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="type">int</span> l=<span class="number">0</span>,r=n<span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">while</span> (l&lt;=r)&#123;</span><br><span class="line">                <span class="type">int</span> mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">                <span class="keyword">if</span> (a[mid]==t)&#123;</span><br><span class="line">                    <span class="keyword">return</span> mid;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (a[mid]&gt;t)&#123;</span><br><span class="line">                    r=mid<span class="number">-1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (a[mid]&lt;t)&#123;</span><br><span class="line">                    l=mid<span class="number">+1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>感觉有点像拿内存换时间的感觉？</p><h3 id="在排序数组中查找元素的第一个和最后一个位置"><a href="#在排序数组中查找元素的第一个和最后一个位置" class="headerlink" title="在排序数组中查找元素的第一个和最后一个位置"></a>在排序数组中查找元素的第一个和最后一个位置</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">searchRange</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; a, <span class="type">int</span> t)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n=a.<span class="built_in">size</span>();</span><br><span class="line">        set&lt;<span class="type">int</span>&gt; s;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> it:a)&#123;</span><br><span class="line">            s.<span class="built_in">insert</span>(it);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (s.<span class="built_in">empty</span>()||s.<span class="built_in">find</span>(t)==s.<span class="built_in">end</span>())&#123;</span><br><span class="line">            <span class="keyword">return</span> &#123;<span class="number">-1</span>,<span class="number">-1</span>&#125;;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="type">int</span> ansl=<span class="number">0</span>,ansr=<span class="number">0</span>;</span><br><span class="line">            <span class="type">int</span> l=<span class="number">0</span>,r=n<span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">while</span> (l&lt;=r)&#123;</span><br><span class="line">                <span class="type">int</span> mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">                <span class="keyword">if</span> (a[mid]&gt;t)&#123;</span><br><span class="line">                    r=mid<span class="number">-1</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    l=mid<span class="number">+1</span>;</span><br><span class="line">                    ansr=l;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            l=<span class="number">0</span>,r=n<span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">while</span> (l&lt;=r)&#123;</span><br><span class="line">                <span class="type">int</span> mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">                <span class="keyword">if</span> (a[mid]&gt;=t)&#123;</span><br><span class="line">                    r=mid<span class="number">-1</span>;</span><br><span class="line">                    ansl=r;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    l=mid<span class="number">+1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> &#123;ansl<span class="number">+1</span>,ansr<span class="number">-1</span>&#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="number">-1</span>,<span class="number">-1</span>&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="不使用内置函数的算术平方根查找"><a href="#不使用内置函数的算术平方根查找" class="headerlink" title="不使用内置函数的算术平方根查找"></a>不使用内置函数的算术平方根查找</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">mySqrt</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> l=<span class="number">1</span>,r=x;</span><br><span class="line">        <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (l&lt;=r)&#123;</span><br><span class="line">            <span class="type">int</span> mid=l+(r-l)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span> ((<span class="type">long</span> <span class="type">long</span>)mid*mid&lt;=x)&#123;</span><br><span class="line">                ans=mid;</span><br><span class="line">                l=mid<span class="number">+1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                r=mid<span class="number">-1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="不使用内置函数的完全平方数判断"><a href="#不使用内置函数的完全平方数判断" class="headerlink" title="不使用内置函数的完全平方数判断"></a>不使用内置函数的完全平方数判断</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">isPerfectSquare</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> l=<span class="number">1</span>,r=x;</span><br><span class="line">        <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (l&lt;=r)&#123;</span><br><span class="line">            <span class="type">int</span> mid=l+(r-l)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span> ((<span class="type">long</span> <span class="type">long</span>)mid*mid&lt;=x)&#123;</span><br><span class="line">                ans=mid;</span><br><span class="line">                l=mid<span class="number">+1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                r=mid<span class="number">-1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ((<span class="type">long</span> <span class="type">long</span>)ans*ans==x)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>其实这个我感觉比起上一题而言只是多了一个if和else的判断。</p><h3 id="不使用额外空间的移除数组元素法"><a href="#不使用额外空间的移除数组元素法" class="headerlink" title="不使用额外空间的移除数组元素法"></a>不使用额外空间的移除数组元素法</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">removeElement</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; a, <span class="type">int</span> v)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n=a.<span class="built_in">size</span>();</span><br><span class="line">        <span class="type">int</span> fastidx=<span class="number">0</span>,slowidx=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (fastidx&lt;n&amp;&amp;slowidx&lt;n)&#123;</span><br><span class="line">            <span class="keyword">if</span> (a[fastidx]!=v)&#123;</span><br><span class="line">                a[slowidx++]=a[fastidx];</span><br><span class="line">            &#125;</span><br><span class="line">            fastidx++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> slowidx;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>快慢指针法，当快指针遇到了要移除的元素直接跳过，不用移除的元素移到慢指针的下一位。</p><h3 id="不使用额外空间的移除数组重复元素法"><a href="#不使用额外空间的移除数组重复元素法" class="headerlink" title="不使用额外空间的移除数组重复元素法"></a>不使用额外空间的移除数组重复元素法</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">removeDuplicates</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; a)</span> </span>&#123;</span><br><span class="line">        unordered_map&lt;<span class="type">int</span>,<span class="type">int</span>&gt; m;</span><br><span class="line">        <span class="type">int</span> n=a.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            m[a[i]]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> slowidx=<span class="number">0</span>,fastidx=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (slowidx&lt;n&amp;&amp;fastidx&lt;n)&#123;</span><br><span class="line">            <span class="keyword">if</span> (m[a[fastidx]]==<span class="number">1</span>)&#123;</span><br><span class="line">                a[slowidx++]=a[fastidx];</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(m[a[fastidx]]&gt;<span class="number">1</span>)&#123;</span><br><span class="line">                m[a[fastidx]]--;</span><br><span class="line">            &#125;</span><br><span class="line">            fastidx++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> slowidx;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="不使用额外空间的移除0法"><a href="#不使用额外空间的移除0法" class="headerlink" title="不使用额外空间的移除0法"></a>不使用额外空间的移除0法</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">moveZeroes</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; a)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n=a.<span class="built_in">size</span>();</span><br><span class="line">        <span class="type">int</span> slowidx=<span class="number">0</span>,fastidx=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (slowidx&lt;n&amp;&amp;fastidx&lt;n)&#123;</span><br><span class="line">            <span class="keyword">if</span> (a[fastidx]!=<span class="number">0</span>)&#123;</span><br><span class="line">                a[slowidx++]=a[fastidx];</span><br><span class="line">            &#125;</span><br><span class="line">            fastidx++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (slowidx&lt;n)&#123;</span><br><span class="line">            a[slowidx++]=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="字符串的比较方法（lk844）"><a href="#字符串的比较方法（lk844）" class="headerlink" title="字符串的比较方法（lk844）"></a>字符串的比较方法（lk844）</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">backspaceCompare</span><span class="params">(string S, string T)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">build</span>(S) == <span class="built_in">build</span>(T);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">string <span class="title">build</span><span class="params">(string str)</span> </span>&#123;</span><br><span class="line">        string ret;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">char</span> ch : str) &#123;</span><br><span class="line">            <span class="keyword">if</span> (ch != <span class="string">&#x27;#&#x27;</span>) &#123;</span><br><span class="line">                ret.<span class="built_in">push_back</span>(ch);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!ret.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">                ret.<span class="built_in">pop_back</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">var backspaceCompare = <span class="built_in">function</span>(S, T) &#123;</span><br><span class="line">    let i = S.length - <span class="number">1</span>,</span><br><span class="line">        j = T.length - <span class="number">1</span>,</span><br><span class="line">        skipS = <span class="number">0</span>,</span><br><span class="line">        skipT = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 大循环</span></span><br><span class="line">    <span class="keyword">while</span>(i &gt;= <span class="number">0</span> || j &gt;= <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="comment">// S 循环</span></span><br><span class="line">        <span class="keyword">while</span>(i &gt;= <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(S[i] === <span class="string">&#x27;#&#x27;</span>)&#123;</span><br><span class="line">                skipS++;</span><br><span class="line">                i--;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(skipS &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                skipS--;</span><br><span class="line">                i--;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// T 循环</span></span><br><span class="line">        <span class="keyword">while</span>(j &gt;= <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(T[j] === <span class="string">&#x27;#&#x27;</span>)&#123;</span><br><span class="line">                skipT++;</span><br><span class="line">                j--;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(skipT &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                skipT--;</span><br><span class="line">                j--;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(S[i] !== T[j]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        i--;</span><br><span class="line">        j--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="数组的平方"><a href="#数组的平方" class="headerlink" title="数组的平方"></a>数组的平方</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">sortedSquares</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; a)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n=a.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            a[i]=a[i]*a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">sort</span>(a.<span class="built_in">begin</span>(),a.<span class="built_in">end</span>());</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="长度最小的子数组"><a href="#长度最小的子数组" class="headerlink" title="长度最小的子数组"></a>长度最小的子数组</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">minSubArrayLen</span><span class="params">(<span class="type">int</span> t, vector&lt;<span class="type">int</span>&gt;&amp; a)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n=a.<span class="built_in">size</span>();</span><br><span class="line">        <span class="type">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> minn=n;</span><br><span class="line">        <span class="type">int</span> sum=a[i];</span><br><span class="line">        <span class="keyword">while</span> (i&lt;n&amp;&amp;j&lt;n)&#123;</span><br><span class="line">            <span class="keyword">if</span> (sum&lt;t)&#123;</span><br><span class="line">                j++;</span><br><span class="line">                <span class="keyword">if</span> (j&lt;n) sum+=a[j];</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                minn=<span class="built_in">min</span>(minn,j-i<span class="number">+1</span>);</span><br><span class="line">                sum-=a[i];</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (sum&lt;t&amp;&amp;i==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> minn;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="水果成篮（lk904）"><a href="#水果成篮（lk904）" class="headerlink" title="水果成篮（lk904）"></a>水果成篮（lk904）</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">totalFruit</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; f)</span> </span>&#123;</span><br><span class="line">        unordered_map&lt;<span class="type">int</span>,<span class="type">int</span>&gt; cnt;</span><br><span class="line">        <span class="type">int</span> n=f.<span class="built_in">size</span>();</span><br><span class="line">        <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> left=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> right=<span class="number">0</span>; right&lt;n; right++)&#123;</span><br><span class="line">            cnt[f[right]]++;</span><br><span class="line">            <span class="keyword">while</span> (cnt.<span class="built_in">size</span>()&gt;<span class="number">2</span>)&#123;</span><br><span class="line">                cnt[f[left]]--;</span><br><span class="line">                <span class="keyword">if</span> (cnt[f[left]]==<span class="number">0</span>) cnt.<span class="built_in">erase</span>(f[left]);</span><br><span class="line">                left++;</span><br><span class="line">            &#125;</span><br><span class="line">            ans=<span class="built_in">max</span>(ans, right-left<span class="number">+1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="字串覆盖（lk76）"><a href="#字串覆盖（lk76）" class="headerlink" title="字串覆盖（lk76）"></a>字串覆盖（lk76）</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">string <span class="title">minWindow</span><span class="params">(string s, string t)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n1 = s.<span class="built_in">size</span>();</span><br><span class="line">        <span class="type">int</span> n2 = t.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span> (n1 &lt; n2) <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">        unordered_map&lt;<span class="type">char</span>,<span class="type">int</span>&gt; h1;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> c : t) h1[c]++;</span><br><span class="line"></span><br><span class="line">        unordered_map&lt;<span class="type">char</span>,<span class="type">int</span>&gt; h2;</span><br><span class="line">        <span class="type">int</span> left = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> match = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> minlen = INT_MAX;</span><br><span class="line">        <span class="type">int</span> start = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> right = <span class="number">0</span>; right &lt; n1; right++) &#123;</span><br><span class="line">            <span class="type">char</span> c = s[right];</span><br><span class="line">            <span class="keyword">if</span> (h<span class="number">1.</span><span class="built_in">count</span>(c)) &#123;</span><br><span class="line">                h2[c]++;</span><br><span class="line">                <span class="keyword">if</span> (h2[c] == h1[c]) match++;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (match == (<span class="type">int</span>)h<span class="number">1.</span><span class="built_in">size</span>()) &#123;</span><br><span class="line">                <span class="keyword">if</span> (right - left + <span class="number">1</span> &lt; minlen) &#123;</span><br><span class="line">                    minlen = right - left + <span class="number">1</span>;</span><br><span class="line">                    start = left;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="type">char</span> d = s[left];</span><br><span class="line">                <span class="keyword">if</span> (h<span class="number">1.</span><span class="built_in">count</span>(d)) &#123;</span><br><span class="line">                    h2[d]--;</span><br><span class="line">                    <span class="keyword">if</span> (h2[d] &lt; h1[d]) match--;</span><br><span class="line">                &#125;</span><br><span class="line">                left++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> minlen == INT_MAX ? <span class="string">&quot;&quot;</span> : s.<span class="built_in">substr</span>(start, minlen);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="螺旋矩阵（lk59）"><a href="#螺旋矩阵（lk59）" class="headerlink" title="螺旋矩阵（lk59）"></a>螺旋矩阵（lk59）</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">generateMatrix</span>(<span class="type">int</span> n) &#123;</span><br><span class="line">        <span class="type">int</span> top=<span class="number">0</span>,bottom=n<span class="number">-1</span>,left=<span class="number">0</span>,right=n<span class="number">-1</span>;</span><br><span class="line">        <span class="type">int</span> cur=<span class="number">1</span>;</span><br><span class="line">        vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">m</span>(n,<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(n));</span><br><span class="line">        <span class="keyword">while</span> (top&lt;=bottom&amp;&amp;left&lt;=right)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i=left;i&lt;=right;i++)&#123;</span><br><span class="line">                m[top][i]=cur;</span><br><span class="line">                cur++;</span><br><span class="line">            &#125;</span><br><span class="line">            top++;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i=top;i&lt;=bottom;i++)&#123;</span><br><span class="line">                m[i][right]=cur;</span><br><span class="line">                cur++;</span><br><span class="line">            &#125;</span><br><span class="line">            right--;</span><br><span class="line">            <span class="keyword">if</span> (top&lt;=bottom)&#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> i=right;i&gt;=left;i--)&#123;</span><br><span class="line">                    m[bottom][i]=cur;</span><br><span class="line">                    cur++;</span><br><span class="line">                &#125;</span><br><span class="line">                bottom--;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (left&lt;=right)&#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> i=bottom;i&gt;=top;i--)&#123;</span><br><span class="line">                    m[i][left]=cur;</span><br><span class="line">                    cur++;</span><br><span class="line">                &#125;</span><br><span class="line">                left++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> m;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="链表理论"><a href="#链表理论" class="headerlink" title="链表理论"></a>链表理论</h2><h3 id="删除链表中的元素"><a href="#删除链表中的元素" class="headerlink" title="删除链表中的元素"></a>删除链表中的元素</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * struct ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode *next;</span></span><br><span class="line"><span class="comment"> *     ListNode() : val(0), next(nullptr) &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) : val(x), next(nullptr) &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x, ListNode *next) : val(x), next(next) &#123;&#125;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">removeElements</span><span class="params">(ListNode* head, <span class="type">int</span> val)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (head!=<span class="literal">NULL</span>&amp;&amp;head-&gt;val==val)&#123;</span><br><span class="line">            ListNode *temp=head;</span><br><span class="line">            head=head-&gt;next;</span><br><span class="line">            <span class="keyword">delete</span> temp;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ListNode* cur=head;</span><br><span class="line">        <span class="keyword">while</span> (cur!=<span class="literal">NULL</span>&amp;&amp;cur-&gt;next!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span> (cur-&gt;next-&gt;val==val)&#123;</span><br><span class="line">                ListNode *temp=cur-&gt;next;</span><br><span class="line">                cur-&gt;next=cur-&gt;next-&gt;next;</span><br><span class="line">                <span class="keyword">delete</span> temp;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                cur=cur-&gt;next;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="设计链表（lk707）"><a href="#设计链表（lk707）" class="headerlink" title="设计链表（lk707）"></a>设计链表（lk707）</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyLinkedList</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">// 定义链表节点结构体</span></span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">LinkedNode</span> &#123;</span><br><span class="line">        <span class="type">int</span> val;</span><br><span class="line">        LinkedNode* next;</span><br><span class="line">        <span class="built_in">LinkedNode</span>(<span class="type">int</span> val):<span class="built_in">val</span>(val), <span class="built_in">next</span>(<span class="literal">nullptr</span>)&#123;&#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化链表</span></span><br><span class="line">    <span class="built_in">MyLinkedList</span>() &#123;</span><br><span class="line">        _dummyHead = <span class="keyword">new</span> <span class="built_in">LinkedNode</span>(<span class="number">0</span>); <span class="comment">// 这里定义的头结点 是一个虚拟头结点，而不是真正的链表头结点</span></span><br><span class="line">        _size = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取到第index个节点数值，如果index是非法数值直接返回-1， 注意index是从0开始的，第0个节点就是头结点</span></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">get</span><span class="params">(<span class="type">int</span> index)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (index &gt; (_size - <span class="number">1</span>) || index &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        LinkedNode* cur = _dummyHead-&gt;next;</span><br><span class="line">        <span class="keyword">while</span>(index--)&#123; <span class="comment">// 如果--index 就会陷入死循环</span></span><br><span class="line">            cur = cur-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cur-&gt;val;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在链表最前面插入一个节点，插入完成后，新插入的节点为链表的新的头结点</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">addAtHead</span><span class="params">(<span class="type">int</span> val)</span> </span>&#123;</span><br><span class="line">        LinkedNode* newNode = <span class="keyword">new</span> <span class="built_in">LinkedNode</span>(val);</span><br><span class="line">        newNode-&gt;next = _dummyHead-&gt;next;</span><br><span class="line">        _dummyHead-&gt;next = newNode;</span><br><span class="line">        _size++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在链表最后面添加一个节点</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">addAtTail</span><span class="params">(<span class="type">int</span> val)</span> </span>&#123;</span><br><span class="line">        LinkedNode* newNode = <span class="keyword">new</span> <span class="built_in">LinkedNode</span>(val);</span><br><span class="line">        LinkedNode* cur = _dummyHead;</span><br><span class="line">        <span class="keyword">while</span>(cur-&gt;next != <span class="literal">nullptr</span>)&#123;</span><br><span class="line">            cur = cur-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        cur-&gt;next = newNode;</span><br><span class="line">        _size++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在第index个节点之前插入一个新节点，例如index为0，那么新插入的节点为链表的新头节点。</span></span><br><span class="line">    <span class="comment">// 如果index 等于链表的长度，则说明是新插入的节点为链表的尾结点</span></span><br><span class="line">    <span class="comment">// 如果index大于链表的长度，则返回空</span></span><br><span class="line">    <span class="comment">// 如果index小于0，则在头部插入节点</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">addAtIndex</span><span class="params">(<span class="type">int</span> index, <span class="type">int</span> val)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(index &gt; _size) <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">if</span>(index &lt; <span class="number">0</span>) index = <span class="number">0</span>;        </span><br><span class="line">        LinkedNode* newNode = <span class="keyword">new</span> <span class="built_in">LinkedNode</span>(val);</span><br><span class="line">        LinkedNode* cur = _dummyHead;</span><br><span class="line">        <span class="keyword">while</span>(index--) &#123;</span><br><span class="line">            cur = cur-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        newNode-&gt;next = cur-&gt;next;</span><br><span class="line">        cur-&gt;next = newNode;</span><br><span class="line">        _size++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 删除第index个节点，如果index 大于等于链表的长度，直接return，注意index是从0开始的</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">deleteAtIndex</span><span class="params">(<span class="type">int</span> index)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (index &gt;= _size || index &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        LinkedNode* cur = _dummyHead;</span><br><span class="line">        <span class="keyword">while</span>(index--) &#123;</span><br><span class="line">            cur = cur -&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        LinkedNode* tmp = cur-&gt;next;</span><br><span class="line">        cur-&gt;next = cur-&gt;next-&gt;next;</span><br><span class="line">        <span class="keyword">delete</span> tmp;</span><br><span class="line">        <span class="comment">//delete命令指示释放了tmp指针原本所指的那部分内存，</span></span><br><span class="line">        <span class="comment">//被delete后的指针tmp的值（地址）并非就是NULL，而是随机值。也就是被delete后，</span></span><br><span class="line">        <span class="comment">//如果不再加上一句tmp=nullptr,tmp会成为乱指的野指针</span></span><br><span class="line">        <span class="comment">//如果之后的程序不小心使用了tmp，会指向难以预想的内存空间</span></span><br><span class="line">        tmp=<span class="literal">nullptr</span>;</span><br><span class="line">        _size--;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 打印链表</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">printLinkedList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        LinkedNode* cur = _dummyHead;</span><br><span class="line">        <span class="keyword">while</span> (cur-&gt;next != <span class="literal">nullptr</span>) &#123;</span><br><span class="line">            cout &lt;&lt; cur-&gt;next-&gt;val &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">            cur = cur-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="type">int</span> _size;</span><br><span class="line">    LinkedNode* _dummyHead;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="翻转链表（lk206）"><a href="#翻转链表（lk206）" class="headerlink" title="翻转链表（lk206）"></a>翻转链表（lk206）</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * struct ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode *next;</span></span><br><span class="line"><span class="comment"> *     ListNode() : val(0), next(nullptr) &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) : val(x), next(nullptr) &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x, ListNode *next) : val(x), next(next) &#123;&#125;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">reverseList</span><span class="params">(ListNode* head)</span> </span>&#123;</span><br><span class="line">        ListNode *temp;</span><br><span class="line">        ListNode *cur=head;</span><br><span class="line">        ListNode *pre=<span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">while</span> (cur!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">            temp=cur-&gt;next;</span><br><span class="line">            cur-&gt;next=pre;</span><br><span class="line">            pre=cur;</span><br><span class="line">            cur=temp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> pre;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>不得不说，这个确实是有小巧思在身上的。</p><h3 id="两两交换链表中的结点（lk24）"><a href="#两两交换链表中的结点（lk24）" class="headerlink" title="两两交换链表中的结点（lk24）"></a>两两交换链表中的结点（lk24）</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * struct ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode *next;</span></span><br><span class="line"><span class="comment"> *     ListNode() : val(0), next(nullptr) &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) : val(x), next(nullptr) &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x, ListNode *next) : val(x), next(next) &#123;&#125;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">swapPairs</span><span class="params">(ListNode* head)</span> </span>&#123;</span><br><span class="line">        ListNode *dummyhead=<span class="keyword">new</span> <span class="built_in">ListNode</span>(<span class="number">0</span>);</span><br><span class="line">        dummyhead-&gt;next=head;</span><br><span class="line">        ListNode *cur=dummyhead;</span><br><span class="line">        <span class="keyword">while</span> (cur-&gt;next!=<span class="literal">NULL</span>&amp;&amp;cur-&gt;next-&gt;next!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">            ListNode *temp1=cur-&gt;next;</span><br><span class="line">            ListNode *temp2=cur-&gt;next-&gt;next-&gt;next;</span><br><span class="line">            cur-&gt;next=cur-&gt;next-&gt;next;</span><br><span class="line">            cur-&gt;next-&gt;next=temp1;</span><br><span class="line">            cur-&gt;next-&gt;next-&gt;next=temp2;</span><br><span class="line">            cur=cur-&gt;next-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dummyhead-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>这个虚拟头结点指针操作真是惊为天人了，要换做以前我只会map存结点然后交换值。</p><h3 id="删除链表的倒数第n个结点（lk19）"><a href="#删除链表的倒数第n个结点（lk19）" class="headerlink" title="删除链表的倒数第n个结点（lk19）"></a>删除链表的倒数第n个结点（lk19）</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * struct ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode *next;</span></span><br><span class="line"><span class="comment"> *     ListNode() : val(0), next(nullptr) &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) : val(x), next(nullptr) &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x, ListNode *next) : val(x), next(next) &#123;&#125;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">removeNthFromEnd</span><span class="params">(ListNode* head, <span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">        ListNode *dummy=<span class="keyword">new</span> <span class="built_in">ListNode</span>(<span class="number">0</span>);</span><br><span class="line">        dummy-&gt;next=head;</span><br><span class="line">        ListNode *fast=dummy;</span><br><span class="line">        ListNode *slow=dummy;</span><br><span class="line">        <span class="keyword">while</span> (n--&amp;&amp;fast!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">            fast=fast-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        fast=fast-&gt;next;</span><br><span class="line">        <span class="keyword">while</span> (fast!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">            fast=fast-&gt;next;</span><br><span class="line">            slow=slow-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        slow-&gt;next=slow-&gt;next-&gt;next;</span><br><span class="line">        <span class="keyword">return</span> dummy-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>快慢指针，太经典了bro，这个思路惊为天人了。</p><h3 id="链表相交"><a href="#链表相交" class="headerlink" title="链表相交"></a>链表相交</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * struct ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode *next;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) : val(x), next(NULL) &#123;&#125;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode *<span class="title">getIntersectionNode</span><span class="params">(ListNode *headA, ListNode *headB)</span> </span>&#123;</span><br><span class="line">        ListNode *cur1=headA;</span><br><span class="line">        ListNode *cur2=headB;</span><br><span class="line">        <span class="type">int</span> lenA=<span class="number">0</span>,lenB=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (cur1!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">            lenA++;</span><br><span class="line">            cur1=cur1-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (cur2!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">            lenB++;</span><br><span class="line">            cur2=cur2-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        cur1=headA;</span><br><span class="line">        cur2=headB;</span><br><span class="line">        <span class="keyword">if</span> (lenB&gt;lenA)&#123;</span><br><span class="line">            <span class="built_in">swap</span>(lenA,lenB);</span><br><span class="line">            <span class="built_in">swap</span>(cur1,cur2);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> gap=lenA-lenB;</span><br><span class="line">        <span class="keyword">while</span> (gap--)&#123;</span><br><span class="line">            cur1=cur1-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (cur1!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span> (cur1==cur2)&#123;</span><br><span class="line">                <span class="keyword">return</span> cur1;</span><br><span class="line">            &#125;</span><br><span class="line">            cur1=cur1-&gt;next;</span><br><span class="line">            cur2=cur2-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="环状链表（lk142）"><a href="#环状链表（lk142）" class="headerlink" title="环状链表（lk142）"></a>环状链表（lk142）</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * struct ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode *next;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) : val(x), next(NULL) &#123;&#125;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode *<span class="title">detectCycle</span><span class="params">(ListNode *head)</span> </span>&#123;</span><br><span class="line">        unordered_map&lt;ListNode*,<span class="type">int</span>&gt; v;</span><br><span class="line">        <span class="keyword">while</span> (head!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span> (v.<span class="built_in">count</span>(head))&#123;</span><br><span class="line">                <span class="keyword">return</span> head;</span><br><span class="line">            &#125;</span><br><span class="line">            v[head]++;</span><br><span class="line">            head=head-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>这个方法真的很直观，图论里也会用到的。</p><h2 id="哈希表"><a href="#哈希表" class="headerlink" title="哈希表"></a>哈希表</h2><h3 id="有效的字母异位词（lk242）"><a href="#有效的字母异位词（lk242）" class="headerlink" title="有效的字母异位词（lk242）"></a>有效的字母异位词（lk242）</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">isAnagram</span><span class="params">(string s, string t)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (s.<span class="built_in">size</span>()!=t.<span class="built_in">size</span>())&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        unordered_map&lt;<span class="type">char</span>,<span class="type">int</span>&gt; sh;</span><br><span class="line">        unordered_map&lt;<span class="type">char</span>,<span class="type">int</span>&gt; th;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> c:s)&#123;</span><br><span class="line">            sh[c]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> c:t)&#123;</span><br><span class="line">            th[c]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> c:s)&#123;</span><br><span class="line">            <span class="keyword">if</span> (t.<span class="built_in">find</span>(c)==string::npos)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (th[c]!=sh[c])&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="两个数组的交集（lk349）"><a href="#两个数组的交集（lk349）" class="headerlink" title="两个数组的交集（lk349）"></a>两个数组的交集（lk349）</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">intersection</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums1, vector&lt;<span class="type">int</span>&gt;&amp; nums2)</span> </span>&#123;</span><br><span class="line">        unordered_map&lt;<span class="type">int</span>,<span class="type">int</span>&gt; h;</span><br><span class="line">        set&lt;<span class="type">int</span>&gt; exist;</span><br><span class="line">        vector&lt;<span class="type">int</span>&gt; ans;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> it:nums1)&#123;</span><br><span class="line">            h[it]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> it:nums2)&#123;</span><br><span class="line">            <span class="keyword">if</span> (h.<span class="built_in">count</span>(it)&amp;&amp;exist.<span class="built_in">find</span>(it)==exist.<span class="built_in">end</span>())&#123;</span><br><span class="line">                ans.<span class="built_in">push_back</span>(it);</span><br><span class="line">                exist.<span class="built_in">insert</span>(it);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="快乐数（lk202）"><a href="#快乐数（lk202）" class="headerlink" title="快乐数（lk202）"></a>快乐数（lk202）</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">turnnum</span><span class="params">(<span class="type">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (n&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="type">int</span> t=n%<span class="number">10</span>;</span><br><span class="line">        res+=t*t;</span><br><span class="line">        n/=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">isHappy</span><span class="params">(<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">        unordered_map&lt;<span class="type">int</span>,<span class="type">int</span>&gt; h;</span><br><span class="line">        h.<span class="built_in">emplace</span>(n,<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">while</span> (<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span> (n==<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            n=<span class="built_in">turnnum</span>(n);</span><br><span class="line">            <span class="keyword">if</span> (h.<span class="built_in">count</span>(n))&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            h[n]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>一个数字一旦出现第二次，就说明开始死循环了，可以直接返回0</p><h3 id="两数之和（lk1）"><a href="#两数之和（lk1）" class="headerlink" title="两数之和（lk1）"></a>两数之和（lk1）</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">twoSum</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> t)</span> </span>&#123;</span><br><span class="line">        unordered_map&lt;<span class="type">int</span>,<span class="type">int</span>&gt; h;</span><br><span class="line">        <span class="type">int</span> n=nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">auto</span> ans=h.<span class="built_in">find</span>(t-nums[i]);</span><br><span class="line">            <span class="keyword">if</span> (ans!=h.<span class="built_in">end</span>())&#123;</span><br><span class="line">                <span class="keyword">return</span> &#123;ans-&gt;second,i&#125;;</span><br><span class="line">            &#125;</span><br><span class="line">            h[nums[i]]=i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="四数相加（lk454）"><a href="#四数相加（lk454）" class="headerlink" title="四数相加（lk454）"></a>四数相加（lk454）</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">fourSumCount</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums1, vector&lt;<span class="type">int</span>&gt;&amp; nums2, vector&lt;<span class="type">int</span>&gt;&amp; nums3, vector&lt;<span class="type">int</span>&gt;&amp; nums4)</span> </span>&#123;</span><br><span class="line">        unordered_map&lt;<span class="type">int</span>,<span class="type">int</span>&gt; h;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> a:nums1)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">auto</span> b:nums2)&#123;</span><br><span class="line">                h[a+b]++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> c:nums3)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">auto</span> d:nums4)&#123;</span><br><span class="line">                <span class="keyword">auto</span> ans=h.<span class="built_in">find</span>(<span class="number">0</span>-(c+d));</span><br><span class="line">                <span class="keyword">if</span> (ans!=h.<span class="built_in">end</span>())&#123;</span><br><span class="line">                    sum+=h[<span class="number">0</span>-(c+d)];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>我在想，三重循环是不是也能过？</p><h3 id="三数相加（lk15）"><a href="#三数相加（lk15）" class="headerlink" title="三数相加（lk15）"></a>三数相加（lk15）</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">threeSum</span>(vector&lt;<span class="type">int</span>&gt;&amp; nums) &#123;</span><br><span class="line">        vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; ans;</span><br><span class="line">        <span class="type">int</span> n=nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="built_in">sort</span>(nums.<span class="built_in">begin</span>(),nums.<span class="built_in">end</span>());</span><br><span class="line">        <span class="type">int</span> l,r;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (nums[i]&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> ans;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (i&gt;<span class="number">0</span>&amp;&amp;nums[i]==nums[i<span class="number">-1</span>])&#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            l=i<span class="number">+1</span>,r=n<span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">while</span> (l&lt;r)&#123;</span><br><span class="line">                <span class="keyword">if</span> (nums[i]+nums[l]+nums[r]&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                    r--;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(nums[i]+nums[l]+nums[r]&lt;<span class="number">0</span>)&#123;</span><br><span class="line">                    l++;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    ans.<span class="built_in">push_back</span>(&#123;nums[i],nums[l],nums[r]&#125;);</span><br><span class="line">                    <span class="keyword">while</span> (l&lt;r&amp;&amp;nums[l]==nums[l<span class="number">+1</span>]) l++;</span><br><span class="line">                    <span class="keyword">while</span> (l&lt;r&amp;&amp;nums[r]==nums[r<span class="number">-1</span>]) r--;</span><br><span class="line">                    l++;</span><br><span class="line">                    r--;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>太牛逼了双指针。</p><h3 id="四数之和（lk18）"><a href="#四数之和（lk18）" class="headerlink" title="四数之和（lk18）"></a>四数之和（lk18）</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">fourSum</span>(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> target) &#123;</span><br><span class="line">        <span class="type">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; ans;</span><br><span class="line">        <span class="built_in">sort</span>(nums.<span class="built_in">begin</span>(), nums.<span class="built_in">end</span>());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i &gt; <span class="number">0</span> &amp;&amp; nums[i] == nums[i - <span class="number">1</span>]) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = i + <span class="number">1</span>; j &lt; n; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (j &gt; i + <span class="number">1</span> &amp;&amp; nums[j] == nums[j - <span class="number">1</span>]) <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">                <span class="type">int</span> l = j + <span class="number">1</span>, r = n - <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">while</span> (l &lt; r) &#123;</span><br><span class="line">                    <span class="type">long</span> <span class="type">long</span> sum = (<span class="type">long</span> <span class="type">long</span>)nums[i] + nums[j] + nums[l] + nums[r];</span><br><span class="line">                    <span class="keyword">if</span> (sum &gt; target) r--;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span> (sum &lt; target) l++;</span><br><span class="line">                    <span class="keyword">else</span> &#123;</span><br><span class="line">                        ans.<span class="built_in">push_back</span>(&#123;nums[i], nums[j], nums[l], nums[r]&#125;);</span><br><span class="line">                        <span class="keyword">while</span> (l &lt; r &amp;&amp; nums[l] == nums[l + <span class="number">1</span>]) l++;</span><br><span class="line">                        <span class="keyword">while</span> (l &lt; r &amp;&amp; nums[r] == nums[r - <span class="number">1</span>]) r--;</span><br><span class="line">                        l++;</span><br><span class="line">                        r--;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>和上一题双指针的思路一样，这个模板我感觉可以套到n数，只要不限制复杂度（</p><h2 id="字符串理论"><a href="#字符串理论" class="headerlink" title="字符串理论"></a>字符串理论</h2><h3 id="不使用额外空间的字符串翻转"><a href="#不使用额外空间的字符串翻转" class="headerlink" title="不使用额外空间的字符串翻转"></a>不使用额外空间的字符串翻转</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">reverseString</span><span class="params">(vector&lt;<span class="type">char</span>&gt;&amp; s)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n=s.<span class="built_in">size</span>();</span><br><span class="line">        <span class="type">int</span> l=<span class="number">0</span>,r=n<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span> (l&lt;r)&#123;</span><br><span class="line">            <span class="built_in">swap</span>(s[l],s[r]);</span><br><span class="line">            l++;</span><br><span class="line">            r--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="特定条件要求下的字符串翻转"><a href="#特定条件要求下的字符串翻转" class="headerlink" title="特定条件要求下的字符串翻转"></a>特定条件要求下的字符串翻转</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">string <span class="title">reverseStr</span><span class="params">(string s, <span class="type">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n=s.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i=i<span class="number">+2</span>*k)&#123;</span><br><span class="line">            <span class="keyword">if</span> (i+k&lt;n)&#123;</span><br><span class="line">                <span class="built_in">reverse</span>(s.<span class="built_in">begin</span>()+i,s.<span class="built_in">begin</span>()+i+k);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="built_in">reverse</span>(s.<span class="built_in">begin</span>()+i,s.<span class="built_in">end</span>());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> s;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>快慢指针是错误的不可信的</p><h3 id="反转字符串中的单词（lk151）"><a href="#反转字符串中的单词（lk151）" class="headerlink" title="反转字符串中的单词（lk151）"></a>反转字符串中的单词（lk151）</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">string <span class="title">reverseWords</span><span class="params">(string s)</span> </span>&#123;</span><br><span class="line">        string word;</span><br><span class="line">        vector&lt;string&gt; ans;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> c:s)&#123;</span><br><span class="line">            <span class="keyword">if</span> (c==<span class="string">&#x27; &#x27;</span>&amp;&amp;!word.<span class="built_in">empty</span>())&#123;</span><br><span class="line">                ans.<span class="built_in">push_back</span>(word);</span><br><span class="line">                word.<span class="built_in">clear</span>();</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(c!=<span class="string">&#x27; &#x27;</span>)&#123;</span><br><span class="line">                word+=c;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!word.<span class="built_in">empty</span>())&#123;</span><br><span class="line">            ans.<span class="built_in">push_back</span>(word);</span><br><span class="line">            word.<span class="built_in">clear</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> n=ans.<span class="built_in">size</span>();</span><br><span class="line">        string res;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">            <span class="keyword">if</span> (i==<span class="number">0</span>)&#123;</span><br><span class="line">                res+=ans[i];</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                res+=ans[i];</span><br><span class="line">                res+=<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>搓轮子，这有什么好说的</p><h3 id="重复字串（lk459）"><a href="#重复字串（lk459）" class="headerlink" title="重复字串（lk459）"></a>重复字串（lk459）</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">repeatedSubstringPattern</span><span class="params">(string s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (s + s).<span class="built_in">find</span>(s, <span class="number">1</span>) != s.<span class="built_in">size</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>What can I say?</p><h2 id="队列与栈理论"><a href="#队列与栈理论" class="headerlink" title="队列与栈理论"></a>队列与栈理论</h2><h3 id="括号匹配"><a href="#括号匹配" class="headerlink" title="括号匹配"></a>括号匹配</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">isValid</span><span class="params">(string s)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n=s.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span> (n%<span class="number">2</span>==<span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        stack&lt;<span class="type">char</span>&gt; sk;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (s[i]==<span class="string">&#x27;(&#x27;</span>) sk.<span class="built_in">push</span>(<span class="string">&#x27;)&#x27;</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(s[i]==<span class="string">&#x27;&#123;&#x27;</span>) sk.<span class="built_in">push</span>(<span class="string">&#x27;&#125;&#x27;</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(s[i]==<span class="string">&#x27;[&#x27;</span>) sk.<span class="built_in">push</span>(<span class="string">&#x27;]&#x27;</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(sk.<span class="built_in">empty</span>()||sk.<span class="built_in">top</span>()!=s[i]) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">else</span> sk.<span class="built_in">pop</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sk.<span class="built_in">empty</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>我的天哪代码随想录大人，曾经的顶级难题这下变成模板题了</p><h3 id="去除重复字符"><a href="#去除重复字符" class="headerlink" title="去除重复字符"></a>去除重复字符</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">string <span class="title">removeDuplicates</span><span class="params">(string s)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n=s.<span class="built_in">size</span>();</span><br><span class="line">        stack&lt;<span class="type">char</span>&gt; st;</span><br><span class="line">        string ans;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (st.<span class="built_in">empty</span>())&#123;</span><br><span class="line">                st.<span class="built_in">push</span>(s[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(st.<span class="built_in">top</span>()!=s[i])&#123;</span><br><span class="line">                st.<span class="built_in">push</span>(s[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(st.<span class="built_in">top</span>()==s[i])&#123;</span><br><span class="line">                st.<span class="built_in">pop</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (!st.<span class="built_in">empty</span>())&#123;</span><br><span class="line">            ans+=st.<span class="built_in">top</span>();</span><br><span class="line">            st.<span class="built_in">pop</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">reverse</span>(ans.<span class="built_in">begin</span>(),ans.<span class="built_in">end</span>());</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="逆波兰表达式求值"><a href="#逆波兰表达式求值" class="headerlink" title="逆波兰表达式求值"></a>逆波兰表达式求值</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">isNumber</span><span class="params">(<span class="type">const</span> string&amp; s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (s.<span class="built_in">empty</span>()) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (s[<span class="number">0</span>] == <span class="string">&#x27;-&#x27;</span> &amp;&amp; s.<span class="built_in">size</span>() &gt; <span class="number">1</span>) i = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (; i &lt; s.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!<span class="built_in">isdigit</span>(s[i])) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">evalRPN</span><span class="params">(vector&lt;string&gt;&amp; t)</span> </span>&#123;</span><br><span class="line">        stack&lt;<span class="type">int</span>&gt; st;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;s : t) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">isNumber</span>(s)) &#123;</span><br><span class="line">                st.<span class="built_in">push</span>(<span class="built_in">stoi</span>(s));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">int</span> x = st.<span class="built_in">top</span>(); st.<span class="built_in">pop</span>();</span><br><span class="line">                <span class="type">int</span> y = st.<span class="built_in">top</span>(); st.<span class="built_in">pop</span>();</span><br><span class="line">                <span class="keyword">if</span> (s == <span class="string">&quot;+&quot;</span>) st.<span class="built_in">push</span>(y + x);</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (s == <span class="string">&quot;-&quot;</span>) st.<span class="built_in">push</span>(y - x);</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (s == <span class="string">&quot;*&quot;</span>) st.<span class="built_in">push</span>(y * x);</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (s == <span class="string">&quot;/&quot;</span>) st.<span class="built_in">push</span>(y / x);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> st.<span class="built_in">top</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="滑动窗口最大值"><a href="#滑动窗口最大值" class="headerlink" title="滑动窗口最大值"></a>滑动窗口最大值</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">maxSlidingWindow</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n=nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">ans</span><span class="params">(n)</span></span>;</span><br><span class="line">        deque&lt;<span class="type">int</span>&gt; maxx;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">while</span> (!maxx.<span class="built_in">empty</span>()&amp;&amp;nums[maxx.<span class="built_in">back</span>()]&lt;=nums[i])&#123;</span><br><span class="line">                maxx.<span class="built_in">pop_back</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span> (!maxx.<span class="built_in">empty</span>()&amp;&amp;maxx.<span class="built_in">front</span>()&lt;=i-k)&#123;</span><br><span class="line">                maxx.<span class="built_in">pop_front</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            maxx.<span class="built_in">push_back</span>(i);</span><br><span class="line">            ans[i]=maxx.<span class="built_in">front</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        vector&lt;<span class="type">int</span>&gt; res;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=k<span class="number">-1</span>;i&lt;n;i++)&#123;</span><br><span class="line">            res.<span class="built_in">push_back</span>(nums[ans[i]]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>有什么话跟我的单调双端队列说去吧</p><h3 id="出现频率第K大的元素"><a href="#出现频率第K大的元素" class="headerlink" title="出现频率第K大的元素"></a>出现频率第K大的元素</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">cmp</span> &#123;</span><br><span class="line">        <span class="function"><span class="type">bool</span> <span class="title">operator</span><span class="params">()</span><span class="params">(pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt;&amp; a, pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt;&amp; b)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> a.second &gt; b.second; <span class="comment">// 小根堆，频率小的优先</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="comment">//注意这个地方的写法，小心炸缸</span></span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">topKFrequent</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> k)</span> </span>&#123;</span><br><span class="line">        unordered_map&lt;<span class="type">int</span>,<span class="type">int</span>&gt; h;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> x : nums) h[x]++;</span><br><span class="line"></span><br><span class="line">        priority_queue&lt;pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt;, vector&lt;pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt;&gt;, cmp&gt; q;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;p : h) &#123;</span><br><span class="line">            <span class="keyword">if</span> (q.<span class="built_in">size</span>() == k) &#123;</span><br><span class="line">                <span class="keyword">if</span> (q.<span class="built_in">top</span>().second &lt; p.second) &#123;</span><br><span class="line">                    q.<span class="built_in">pop</span>();</span><br><span class="line">                    q.<span class="built_in">emplace</span>(p.first, p.second);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                q.<span class="built_in">emplace</span>(p.first, p.second);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        vector&lt;<span class="type">int</span>&gt; ans;</span><br><span class="line">        <span class="keyword">while</span> (!q.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">            ans.<span class="built_in">push_back</span>(q.<span class="built_in">top</span>().first);</span><br><span class="line">            q.<span class="built_in">pop</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>我已经会写堆了（确信）</p><h2 id="回溯理论"><a href="#回溯理论" class="headerlink" title="回溯理论"></a>回溯理论</h2><h3 id="模板框架"><a href="#模板框架" class="headerlink" title="模板框架"></a>模板框架</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">backtracking</span><span class="params">(参数)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (终止条件) &#123;</span><br><span class="line">        存放结果;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (选择：本层集合中元素（树中节点孩子的数量就是集合的大小）) &#123;</span><br><span class="line">        处理节点;</span><br><span class="line">        <span class="built_in">backtracking</span>(路径，选择列表); <span class="comment">// 递归</span></span><br><span class="line">        回溯，撤销处理结果</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="组合"><a href="#组合" class="headerlink" title="组合"></a>组合</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; res;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; path;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">backtract</span><span class="params">(<span class="type">int</span> start,<span class="type">int</span> n,<span class="type">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (path.<span class="built_in">size</span>()==k)&#123;</span><br><span class="line">        res.<span class="built_in">push_back</span>(path);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=start;i&lt;=n;i++)&#123;</span><br><span class="line">        path.<span class="built_in">push_back</span>(i);</span><br><span class="line">        <span class="built_in">backtract</span>(i<span class="number">+1</span>,n,k);</span><br><span class="line">        path.<span class="built_in">pop_back</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">combine</span>(<span class="type">int</span> n, <span class="type">int</span> k) &#123;</span><br><span class="line">        res.<span class="built_in">clear</span>();</span><br><span class="line">        path.<span class="built_in">clear</span>();</span><br><span class="line">        <span class="built_in">backtract</span>(<span class="number">1</span>,n,k);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>很典型的回溯算法应用</p><h3 id="组合变式"><a href="#组合变式" class="headerlink" title="组合变式"></a>组合变式</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; ans;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; path;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">backtract</span><span class="params">(<span class="type">int</span> start,<span class="type">int</span> n,<span class="type">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (path.<span class="built_in">size</span>()==k)&#123;</span><br><span class="line">        <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;k;i++)&#123;</span><br><span class="line">            sum+=path[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (sum==n)&#123;</span><br><span class="line">            ans.<span class="built_in">push_back</span>(path);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=start;i&lt;=<span class="number">9</span>;i++)&#123;</span><br><span class="line">        path.<span class="built_in">push_back</span>(i);</span><br><span class="line">        <span class="built_in">backtract</span>(i<span class="number">+1</span>,n,k);</span><br><span class="line">        path.<span class="built_in">pop_back</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">combinationSum3</span>(<span class="type">int</span> k, <span class="type">int</span> n) &#123;</span><br><span class="line">        ans.<span class="built_in">clear</span>();</span><br><span class="line">        path.<span class="built_in">clear</span>();</span><br><span class="line">        <span class="built_in">backtract</span>(<span class="number">1</span>,n,k);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="电话号码的字符组合："><a href="#电话号码的字符组合：" class="headerlink" title="电话号码的字符组合："></a>电话号码的字符组合：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">string a[<span class="number">10</span>]=&#123;<span class="string">&quot;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="string">&quot;abc&quot;</span>,<span class="string">&quot;def&quot;</span>,<span class="string">&quot;ghi&quot;</span>,<span class="string">&quot;jkl&quot;</span>,<span class="string">&quot;mno&quot;</span>,<span class="string">&quot;pqrs&quot;</span>,<span class="string">&quot;tuv&quot;</span>,<span class="string">&quot;wxyz&quot;</span>&#125;;</span><br><span class="line">vector&lt;string&gt; ans;</span><br><span class="line">string path;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">backtract</span><span class="params">(string s,<span class="type">int</span> start,<span class="type">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (path.<span class="built_in">size</span>()==k)&#123;</span><br><span class="line">        ans.<span class="built_in">push_back</span>(path);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> m=s[start]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    string b=a[m];</span><br><span class="line">    <span class="type">int</span> n=b.<span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        path+=b[i];</span><br><span class="line">        <span class="built_in">backtract</span>(s,start<span class="number">+1</span>,k);</span><br><span class="line">        path.<span class="built_in">pop_back</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;string&gt; <span class="title">letterCombinations</span><span class="params">(string digits)</span> </span>&#123;</span><br><span class="line">        ans.<span class="built_in">clear</span>();</span><br><span class="line">        path.<span class="built_in">clear</span>();</span><br><span class="line">        <span class="keyword">if</span> (digits.<span class="built_in">empty</span>()) <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">        <span class="built_in">backtract</span>(digits,<span class="number">0</span>,digits.<span class="built_in">size</span>());</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>练手题，我喜欢这个。</p><h3 id="组合总数"><a href="#组合总数" class="headerlink" title="组合总数"></a>组合总数</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; ans;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; path;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">backtract</span><span class="params">(<span class="type">int</span> sum,<span class="type">int</span> t,<span class="type">int</span> start,vector&lt;<span class="type">int</span>&gt; &amp;a)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (sum&gt;t)&#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (sum==t)&#123;</span><br><span class="line">        ans.<span class="built_in">push_back</span>(path);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=start;i&lt;a.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        sum+=a[i];</span><br><span class="line">        path.<span class="built_in">push_back</span>(a[i]);</span><br><span class="line">        <span class="built_in">backtract</span>(sum,t,i,a);</span><br><span class="line">        sum-=a[i];</span><br><span class="line">        path.<span class="built_in">pop_back</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">combinationSum</span>(vector&lt;<span class="type">int</span>&gt;&amp; candidates, <span class="type">int</span> target) &#123;</span><br><span class="line">        ans.<span class="built_in">clear</span>();</span><br><span class="line">        path.<span class="built_in">clear</span>();</span><br><span class="line">        <span class="built_in">backtract</span>(<span class="number">0</span>,target,<span class="number">0</span>,candidates);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>可以选取重复数字直接把双指针法废掉了（那我只能回溯了。</p><h3 id="组合总数pro-max"><a href="#组合总数pro-max" class="headerlink" title="组合总数pro max"></a>组合总数pro max</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; ans;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; path;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">backtract</span><span class="params">(<span class="type">int</span> sum,<span class="type">int</span> start,<span class="type">int</span> t,vector&lt;<span class="type">int</span>&gt; &amp;a,vector&lt;<span class="type">bool</span>&gt; &amp;b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (sum&gt;t)&#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (sum==t)&#123;</span><br><span class="line">        ans.<span class="built_in">push_back</span>(path);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=start;i&lt;a.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (i&gt;<span class="number">0</span>&amp;&amp;a[i]==a[i<span class="number">-1</span>]&amp;&amp;!b[i<span class="number">-1</span>])&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            sum+=a[i];</span><br><span class="line">            path.<span class="built_in">push_back</span>(a[i]);</span><br><span class="line">            b[i]=<span class="literal">true</span>;</span><br><span class="line">            <span class="built_in">backtract</span>(sum,i<span class="number">+1</span>,t,a,b);</span><br><span class="line">            sum-=a[i];</span><br><span class="line">            path.<span class="built_in">pop_back</span>();</span><br><span class="line">            b[i]=<span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">combinationSum2</span>(vector&lt;<span class="type">int</span>&gt;&amp; candidates, <span class="type">int</span> target) &#123;</span><br><span class="line">        ans.<span class="built_in">clear</span>();</span><br><span class="line">        path.<span class="built_in">clear</span>();</span><br><span class="line">        <span class="function">vector&lt;<span class="type">bool</span>&gt; <span class="title">used</span><span class="params">(candidates.size(),<span class="literal">false</span>)</span></span>;</span><br><span class="line">        <span class="built_in">sort</span>(candidates.<span class="built_in">begin</span>(),candidates.<span class="built_in">end</span>());</span><br><span class="line">        <span class="built_in">backtract</span>(<span class="number">0</span>,<span class="number">0</span>,target,candidates,used);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>这个最难的地方在于如何把同层重复这个问题干掉</p><p>我们都知道，回溯算法本质上是在一棵树上跑，这个题由于要去除掉重复组合，就要在同一层干掉同层用过的数字。这个可能有点难理解，事实上就是一种去重。</p><p>当你回溯到一个根结点时，下面有两个子结点，如果这两个子结点相同，那么你只需要选取其中的一个就行了，另一个跳过。怎么判断一个数字是否该跳过，这个要在根结点阶段就进行，如果下面两个结点都是相同的，而且都没用过，那么就要跳过后面那个结点。</p><p>问题是，如果已经有一个用过了呢？那就不是同层重复了，那就是一个合理组合，要算答案的喵。</p><h3 id="回文串字符分割"><a href="#回文串字符分割" class="headerlink" title="回文串字符分割"></a>回文串字符分割</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">vector&lt;vector&lt;string&gt;&gt; ans;</span><br><span class="line">vector&lt;string&gt; path;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isback</span><span class="params">(string &amp;s,<span class="type">int</span> i,<span class="type">int</span> j)</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (i&lt;j)&#123;</span><br><span class="line">        <span class="keyword">if</span> (s[i]!=s[j])&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">        j--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">backtract</span><span class="params">(string &amp;s,<span class="type">int</span> start)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (start&gt;=s.<span class="built_in">size</span>())&#123;</span><br><span class="line">        ans.<span class="built_in">push_back</span>(path);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=start;i&lt;s.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isback</span>(s,start,i))&#123;</span><br><span class="line">            string str=s.<span class="built_in">substr</span>(start,i-start<span class="number">+1</span>);</span><br><span class="line">            path.<span class="built_in">push_back</span>(str);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">backtract</span>(s,i<span class="number">+1</span>);</span><br><span class="line">        path.<span class="built_in">pop_back</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;string&gt;&gt; <span class="built_in">partition</span>(string s) &#123;</span><br><span class="line">        ans.<span class="built_in">clear</span>();</span><br><span class="line">        path.<span class="built_in">clear</span>();</span><br><span class="line">        <span class="built_in">backtract</span>(s,<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="IP地址复原"><a href="#IP地址复原" class="headerlink" title="IP地址复原"></a>IP地址复原</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">vector&lt;vector&lt;string&gt;&gt; ans;</span><br><span class="line">vector&lt;string&gt; path;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">backtract</span><span class="params">(<span class="type">int</span> start, <span class="type">int</span> cur, string &amp;s)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (cur == <span class="number">4</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (start == s.<span class="built_in">size</span>()) ans.<span class="built_in">push_back</span>(path);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = start; i &lt; s.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">        string b = s.<span class="built_in">substr</span>(start, i - start + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (b.<span class="built_in">size</span>() &gt; <span class="number">3</span>) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span> ((b.<span class="built_in">size</span>() == <span class="number">1</span> || b[<span class="number">0</span>] != <span class="string">&#x27;0&#x27;</span>) &amp;&amp; <span class="built_in">stoi</span>(b) &lt;= <span class="number">255</span>) &#123;</span><br><span class="line">            path.<span class="built_in">push_back</span>(b);</span><br><span class="line">            <span class="built_in">backtract</span>(i + <span class="number">1</span>, cur + <span class="number">1</span>, s);</span><br><span class="line">            path.<span class="built_in">pop_back</span>();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;string&gt; <span class="title">restoreIpAddresses</span><span class="params">(string s)</span> </span>&#123;</span><br><span class="line">        ans.<span class="built_in">clear</span>();</span><br><span class="line">        path.<span class="built_in">clear</span>();</span><br><span class="line">        <span class="built_in">backtract</span>(<span class="number">0</span>, <span class="number">0</span>, s);</span><br><span class="line">        vector&lt;string&gt; res;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;v : ans) &#123;</span><br><span class="line">            string a;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++) &#123;</span><br><span class="line">                a += v[j];</span><br><span class="line">                <span class="keyword">if</span> (j != <span class="number">3</span>) a += <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            res.<span class="built_in">push_back</span>(a);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>与上面那题回文串字符串分割如出一辙。</p><h3 id="子集"><a href="#子集" class="headerlink" title="子集"></a>子集</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; ans;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; path;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">backtract</span><span class="params">(<span class="type">int</span> start,vector&lt;<span class="type">int</span>&gt; &amp;a)</span></span>&#123;</span><br><span class="line">    ans.<span class="built_in">push_back</span>(path);</span><br><span class="line">    <span class="keyword">if</span> (start&gt;=a.<span class="built_in">size</span>())&#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=start;i&lt;a.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        path.<span class="built_in">push_back</span>(a[i]);</span><br><span class="line">        <span class="built_in">backtract</span>(i<span class="number">+1</span>,a);</span><br><span class="line">        path.<span class="built_in">pop_back</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">subsets</span>(vector&lt;<span class="type">int</span>&gt;&amp; nums) &#123;</span><br><span class="line">        ans.<span class="built_in">clear</span>();</span><br><span class="line">        path.<span class="built_in">clear</span>();</span><br><span class="line">        <span class="built_in">backtract</span>(<span class="number">0</span>,nums);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="子集变式"><a href="#子集变式" class="headerlink" title="子集变式"></a>子集变式</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; ans;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; path;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">backtract</span><span class="params">(<span class="type">int</span> start,vector&lt;<span class="type">int</span>&gt; &amp;a,vector&lt;<span class="type">bool</span>&gt; &amp;used)</span></span>&#123;</span><br><span class="line">    ans.<span class="built_in">push_back</span>(path);</span><br><span class="line">    <span class="keyword">if</span> (start&gt;=a.<span class="built_in">size</span>())&#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=start;i&lt;a.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (i&gt;<span class="number">0</span>&amp;&amp;a[i]==a[i<span class="number">-1</span>]&amp;&amp;!used[i<span class="number">-1</span>])&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        path.<span class="built_in">push_back</span>(a[i]);</span><br><span class="line">        used[i]=<span class="literal">true</span>;</span><br><span class="line">        <span class="built_in">backtract</span>(i<span class="number">+1</span>,a,used);</span><br><span class="line">        path.<span class="built_in">pop_back</span>();</span><br><span class="line">        used[i]=<span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">subsetsWithDup</span>(vector&lt;<span class="type">int</span>&gt;&amp; nums) &#123;</span><br><span class="line">        ans.<span class="built_in">clear</span>();</span><br><span class="line">        path.<span class="built_in">clear</span>();</span><br><span class="line">        <span class="function">vector&lt;<span class="type">bool</span>&gt; <span class="title">used</span><span class="params">(nums.size(),<span class="literal">false</span>)</span></span>;</span><br><span class="line">        <span class="built_in">sort</span>(nums.<span class="built_in">begin</span>(),nums.<span class="built_in">end</span>());</span><br><span class="line">        <span class="built_in">backtract</span>(<span class="number">0</span>,nums,used);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="非递减子序列"><a href="#非递减子序列" class="headerlink" title="非递减子序列"></a>非递减子序列</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; ans;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; path;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">backtract</span><span class="params">(<span class="type">int</span> start,vector&lt;<span class="type">int</span>&gt; &amp;a)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (path.<span class="built_in">size</span>()&gt;=<span class="number">2</span>)&#123;</span><br><span class="line">        ans.<span class="built_in">push_back</span>(path);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (start&gt;=a.<span class="built_in">size</span>())&#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> used[<span class="number">210</span>];</span><br><span class="line">    <span class="built_in">memset</span>(used,<span class="number">0</span>,<span class="built_in">sizeof</span>(used));</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=start;i&lt;a.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> ((!path.<span class="built_in">empty</span>()&amp;&amp;a[i]&lt;path.<span class="built_in">back</span>())||used[a[i]<span class="number">+100</span>])&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        path.<span class="built_in">push_back</span>(a[i]);</span><br><span class="line">        used[a[i]<span class="number">+100</span>]=<span class="number">1</span>;</span><br><span class="line">        <span class="built_in">backtract</span>(i<span class="number">+1</span>,a);</span><br><span class="line">        path.<span class="built_in">pop_back</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">findSubsequences</span>(vector&lt;<span class="type">int</span>&gt;&amp; nums) &#123;</span><br><span class="line">        ans.<span class="built_in">clear</span>();</span><br><span class="line">        path.<span class="built_in">clear</span>();</span><br><span class="line">        <span class="built_in">backtract</span>(<span class="number">0</span>,nums);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>这个去重逻辑和旧版的实现的是同一件事，都是在做同层去重，只不过由于这个无法排序，只能换一个思路了。</p><blockquote><p>非常棒的问题 👍<br>“<strong>什么时候需要同层去重</strong>”是掌握回溯算法的关键之一。<br>很多人背了模板却写不好题，根本原因就是没理解**“为什么、什么时候需要同层去重”**。<br>下面我们从直觉、场景和代码三个角度讲透 👇</p><hr><h2 id="🧩-一、先明确：什么是“同层去重”？"><a href="#🧩-一、先明确：什么是“同层去重”？" class="headerlink" title="🧩 一、先明确：什么是“同层去重”？"></a>🧩 一、先明确：什么是“同层去重”？</h2><p>在回溯树中：</p><ul><li>“<strong>同层</strong>”指的是：当前递归函数的一次 for 循环范围；</li><li>“<strong>去重</strong>”指的是：在这一层循环中，不让相同数值重复选取，避免产生重复分支。</li></ul><h3 id="🌰-举例"><a href="#🌰-举例" class="headerlink" title="🌰 举例"></a>🌰 举例</h3><p>以 <code>nums = [1, 2, 2]</code> 为例。</p><h4 id="没有去重："><a href="#没有去重：" class="headerlink" title="没有去重："></a>没有去重：</h4><p>回溯树的前两层可能会生成重复分支：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">    []</span><br><span class="line">  / | \</span><br><span class="line">1   2   2   ← 两个 2 是重复选择（同层）</span><br></pre></td></tr></table></figure><p>于是生成两个相同子集 <code>[2]</code>。</p><h4 id="有同层去重："><a href="#有同层去重：" class="headerlink" title="有同层去重："></a>有同层去重：</h4><p>我们在本层循环时记录已经选过的值：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">used = &#123;2&#125;</span><br></pre></td></tr></table></figure><p>第二个 2 就被跳过了。</p><hr><h2 id="🧠-二、什么时候要同层去重？"><a href="#🧠-二、什么时候要同层去重？" class="headerlink" title="🧠 二、什么时候要同层去重？"></a>🧠 二、什么时候要同层去重？</h2><h3 id="✅-1-当输入数据中存在重复元素，且顺序不影响结果时"><a href="#✅-1-当输入数据中存在重复元素，且顺序不影响结果时" class="headerlink" title="✅ 1. 当输入数据中存在重复元素，且顺序不影响结果时"></a>✅ 1. 当输入数据中存在<strong>重复元素</strong>，且顺序不影响结果时</h3><p>典型例子：</p><table><thead><tr><th>题目</th><th>场景</th><th>是否要同层去重</th></tr></thead><tbody><tr><td>LC39 组合总和 (no duplicates)</td><td>无重复元素</td><td>❌</td></tr><tr><td>LC40 组合总和 II</td><td>元素可能重复</td><td>✅</td></tr><tr><td>LC78 子集 I</td><td>无重复元素</td><td>❌</td></tr><tr><td>LC90 子集 II</td><td>有重复元素</td><td>✅</td></tr></tbody></table><p>这些题目中，<strong>相同的数出现在同一层时</strong>，代表“同一种选择方式重复出现”，要去掉。</p><hr><h3 id="✅-2-当题目要求结果“去重”，但输入中存在相同数时"><a href="#✅-2-当题目要求结果“去重”，但输入中存在相同数时" class="headerlink" title="✅ 2. 当题目要求结果“去重”，但输入中存在相同数时"></a>✅ 2. 当题目要求结果“去重”，但输入中存在相同数时</h3><p><strong>核心判断</strong>：</p><blockquote><p>如果题目保证输入中“有重复”，但要求输出“无重复”，<br>那么就必须进行<strong>同层去重</strong>。</p></blockquote><p>同层去重 &#x3D; 避免<strong>同一个递归深度</strong>重复使用相同数。</p><hr><h3 id="✅-3-当排序无法使用（需保持原顺序）时，用哈希同层去重"><a href="#✅-3-当排序无法使用（需保持原顺序）时，用哈希同层去重" class="headerlink" title="✅ 3. 当排序无法使用（需保持原顺序）时，用哈希同层去重"></a>✅ 3. 当排序无法使用（需保持原顺序）时，用哈希同层去重</h3><p>比如 LC491「递增子序列」：</p><ul><li>数组不能排序；</li><li>相同值在同层出现时要跳过；</li><li>所以要用 <code>used[]</code> &#x2F; <code>unordered_set</code> 记录本层用过的数。</li></ul><hr><h2 id="⚙️-三、什么时候不需要同层去重？"><a href="#⚙️-三、什么时候不需要同层去重？" class="headerlink" title="⚙️ 三、什么时候不需要同层去重？"></a>⚙️ 三、什么时候不需要同层去重？</h2><table><thead><tr><th>场景</th><th>是否需要</th></tr></thead><tbody><tr><td>输入数据本身不重复（题目保证）</td><td>❌</td></tr><tr><td>输出允许重复（例如排列问题）</td><td>❌</td></tr><tr><td>递归深度决定唯一结果（比如组合数 k）</td><td>❌</td></tr><tr><td>不同分支必须保留所有情况（例如带位置的全排列）</td><td>❌</td></tr></tbody></table><p>🌰 举例：</p><ul><li>LC46 全排列：即使有重复值，也通常是用 <strong>used 全局标记数组</strong> 去除“同一个元素多次用”，不是“同层去重”。</li><li>LC77 组合：数字从 1..n，本身不重复，无需同层去重。</li></ul><hr><h2 id="📘-四、一句话口诀"><a href="#📘-四、一句话口诀" class="headerlink" title="📘 四、一句话口诀"></a>📘 四、一句话口诀</h2><blockquote><p><strong>同层去重 &#x3D; 为了去掉同一递归深度中“值相同”的分支</strong><br>通常出现在「组合类」「子集类」「非排序但有重复元素」的问题中。</p></blockquote><hr><h2 id="✅-五、小结对比"><a href="#✅-五、小结对比" class="headerlink" title="✅ 五、小结对比"></a>✅ 五、小结对比</h2><table><thead><tr><th>场景</th><th>是否排序</th><th>去重策略</th><th>用法示例</th></tr></thead><tbody><tr><td>数组可排序，顺序不重要</td><td>✅</td><td>相邻跳过</td><td>LC90 子集 II、LC40 组合总和 II</td></tr><tr><td>数组不可排序（需保序）</td><td>❌</td><td>哈希标记 used[]</td><td>LC491 递增子序列</td></tr><tr><td>数组无重复</td><td>—</td><td>不去重</td><td>LC78 子集 I、LC39 组合总和</td></tr></tbody></table><hr><p>是否希望我帮你画一张「同层去重 vs 跨层允许重复」的回溯树图？<br> 那张图能一眼看懂为什么只在“同层”去重而“跨层”不去重。</p></blockquote><h3 id="全排列"><a href="#全排列" class="headerlink" title="全排列"></a>全排列</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; ans;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; path;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">backtract</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;a,vector&lt;<span class="type">bool</span>&gt; &amp;used)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (path.<span class="built_in">size</span>()==a.<span class="built_in">size</span>())&#123;</span><br><span class="line">        ans.<span class="built_in">push_back</span>(path);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;a.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (!used[i])&#123;</span><br><span class="line">            path.<span class="built_in">push_back</span>(a[i]);</span><br><span class="line">            used[i]=<span class="literal">true</span>;</span><br><span class="line">            <span class="built_in">backtract</span>(a,used);</span><br><span class="line">            path.<span class="built_in">pop_back</span>();</span><br><span class="line">            used[i]=<span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">permute</span>(vector&lt;<span class="type">int</span>&gt;&amp; nums) &#123;</span><br><span class="line">        ans.<span class="built_in">clear</span>();</span><br><span class="line">        path.<span class="built_in">clear</span>();</span><br><span class="line">        <span class="function">vector&lt;<span class="type">bool</span>&gt; <span class="title">used</span><span class="params">(nums.size(),<span class="literal">false</span>)</span></span>;</span><br><span class="line">        <span class="built_in">backtract</span>(nums,used);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>组合，子集问题需要传入start，排列不用。</p><h3 id="全排列（可重复版）"><a href="#全排列（可重复版）" class="headerlink" title="全排列（可重复版）"></a>全排列（可重复版）</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; ans;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; path;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">backtract</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;a,vector&lt;<span class="type">bool</span>&gt; &amp;used)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (path.<span class="built_in">size</span>()==a.<span class="built_in">size</span>())&#123;</span><br><span class="line">        ans.<span class="built_in">push_back</span>(path);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;a.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (i&gt;<span class="number">0</span>&amp;&amp;a[i]==a[i<span class="number">-1</span>]&amp;&amp;!used[i<span class="number">-1</span>])&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (used[i]==<span class="literal">false</span>)&#123;</span><br><span class="line">            path.<span class="built_in">push_back</span>(a[i]);</span><br><span class="line">            used[i]=<span class="literal">true</span>;</span><br><span class="line">            <span class="built_in">backtract</span>(a,used);</span><br><span class="line">            path.<span class="built_in">pop_back</span>();</span><br><span class="line">            used[i]=<span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">permuteUnique</span>(vector&lt;<span class="type">int</span>&gt;&amp; nums) &#123;</span><br><span class="line">        ans.<span class="built_in">clear</span>();</span><br><span class="line">        path.<span class="built_in">clear</span>();</span><br><span class="line">        <span class="built_in">sort</span>(nums.<span class="built_in">begin</span>(),nums.<span class="built_in">end</span>());</span><br><span class="line">        <span class="function">vector&lt;<span class="type">bool</span>&gt; <span class="title">used</span><span class="params">(nums.size(),<span class="literal">false</span>)</span></span>;</span><br><span class="line">        <span class="built_in">backtract</span>(nums,used);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>加一个去重逻辑。</p><h3 id="重新安排行程（lk332）"><a href="#重新安排行程（lk332）" class="headerlink" title="重新安排行程（lk332）"></a>重新安排行程（lk332）</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">unordered_map&lt;string,map&lt;string,<span class="type">int</span>&gt;&gt; target;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">backtract</span><span class="params">(<span class="type">int</span> num,vector&lt;string&gt; &amp;a)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a.<span class="built_in">size</span>()==num<span class="number">+1</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (pair&lt;<span class="type">const</span> string,<span class="type">int</span>&gt; &amp;t: target[a[a.<span class="built_in">size</span>()<span class="number">-1</span>]])&#123;</span><br><span class="line">        <span class="keyword">if</span> (t.second&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            a.<span class="built_in">push_back</span>(t.first);</span><br><span class="line">            t.second--;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">backtract</span>(num,a)) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            a.<span class="built_in">pop_back</span>();</span><br><span class="line">            t.second++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;string&gt; <span class="title">findItinerary</span><span class="params">(vector&lt;vector&lt;string&gt;&gt;&amp; tickets)</span> </span>&#123;</span><br><span class="line">        target.<span class="built_in">clear</span>();</span><br><span class="line">        vector&lt;string&gt; ans;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">const</span> vector&lt;string&gt; &amp;v:tickets)&#123;</span><br><span class="line">            target[v[<span class="number">0</span>]][v[<span class="number">1</span>]]++;</span><br><span class="line">        &#125;</span><br><span class="line">        ans.<span class="built_in">push_back</span>(<span class="string">&quot;JFK&quot;</span>);</span><br><span class="line">        <span class="built_in">backtract</span>(tickets.<span class="built_in">size</span>(),ans);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>这个感觉像图论的题目，事实上和我以前写过的那种找一条连续合法路径的题目很像，都是用回溯的方法连续探索一条路到死，然后在循环内部搞嵌套。</p><p>这个其实就是图论了，下面的过程和建图并没有什么差别。</p><h3 id="N皇后"><a href="#N皇后" class="headerlink" title="N皇后"></a>N皇后</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">vector&lt;vector&lt;string&gt;&gt; ans;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isValid</span><span class="params">(<span class="type">int</span> row, <span class="type">int</span> col, vector&lt;string&gt;&amp; chessboard, <span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 检查列</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; row; i++) &#123; <span class="comment">// 这是一个剪枝</span></span><br><span class="line">        <span class="keyword">if</span> (chessboard[i][col] == <span class="string">&#x27;Q&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 检查 45度角是否有皇后</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = row - <span class="number">1</span>, j = col - <span class="number">1</span>; i &gt;=<span class="number">0</span> &amp;&amp; j &gt;= <span class="number">0</span>; i--, j--) &#123;</span><br><span class="line">        <span class="keyword">if</span> (chessboard[i][j] == <span class="string">&#x27;Q&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 检查 135度角是否有皇后</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = row - <span class="number">1</span>, j = col + <span class="number">1</span>; i &gt;= <span class="number">0</span> &amp;&amp; j &lt; n; i--, j++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (chessboard[i][j] == <span class="string">&#x27;Q&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">backtract</span><span class="params">(<span class="type">int</span> n,<span class="type">int</span> row,vector&lt;string&gt; &amp;m)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (row==n)&#123;</span><br><span class="line">        ans.<span class="built_in">push_back</span>(m);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> col=<span class="number">0</span>;col&lt;n;col++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isValid</span>(row,col,m,n))&#123;</span><br><span class="line">            m[row][col]=<span class="string">&#x27;Q&#x27;</span>;</span><br><span class="line">            <span class="built_in">backtract</span>(n,row<span class="number">+1</span>,m);</span><br><span class="line">            m[row][col]=<span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;string&gt;&gt; <span class="built_in">solveNQueens</span>(<span class="type">int</span> n) &#123;</span><br><span class="line">        ans.<span class="built_in">clear</span>();</span><br><span class="line">        <span class="function">vector&lt;string&gt; <span class="title">m</span><span class="params">(n,string(n,<span class="string">&#x27;.&#x27;</span>))</span></span>;</span><br><span class="line">        <span class="built_in">backtract</span>(n,<span class="number">0</span>,m);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="解数独"><a href="#解数独" class="headerlink" title="解数独"></a>解数独</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isValid</span><span class="params">(<span class="type">int</span> row, <span class="type">int</span> col, <span class="type">char</span> val, vector&lt;vector&lt;<span class="type">char</span>&gt;&gt;&amp; board)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++) &#123; <span class="comment">// 判断行里是否重复</span></span><br><span class="line">        <span class="keyword">if</span> (board[row][i] == val) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">9</span>; j++) &#123; <span class="comment">// 判断列里是否重复</span></span><br><span class="line">        <span class="keyword">if</span> (board[j][col] == val) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> startRow = (row / <span class="number">3</span>) * <span class="number">3</span>;</span><br><span class="line">    <span class="type">int</span> startCol = (col / <span class="number">3</span>) * <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = startRow; i &lt; startRow + <span class="number">3</span>; i++) &#123; <span class="comment">// 判断9方格里是否重复</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = startCol; j &lt; startCol + <span class="number">3</span>; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (board[i][j] == val ) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">backtract</span><span class="params">(vector&lt;vector&lt;<span class="type">char</span>&gt;&gt; &amp;board)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;board.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>;j&lt;board[<span class="number">0</span>].<span class="built_in">size</span>();j++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (board[i][j]==<span class="string">&#x27;.&#x27;</span>)&#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">char</span> c=<span class="string">&#x27;1&#x27;</span>;c&lt;=<span class="string">&#x27;9&#x27;</span>;c++)&#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="built_in">isValid</span>(i,j,c,board))&#123;</span><br><span class="line">                        board[i][j]=c;</span><br><span class="line">                        <span class="keyword">if</span> (<span class="built_in">backtract</span>(board)) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                        board[i][j]=<span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">solveSudoku</span><span class="params">(vector&lt;vector&lt;<span class="type">char</span>&gt;&gt;&amp; board)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">backtract</span>(board);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>无论是“重新安排行程”还是“N皇后”“解数独”，这几道题目很明显都在做一件事情，就是持续探索一种可能，直到不行为止，再回溯。</p><h2 id="贪心理论"><a href="#贪心理论" class="headerlink" title="贪心理论"></a>贪心理论</h2><h3 id="分发饼干"><a href="#分发饼干" class="headerlink" title="分发饼干"></a>分发饼干</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">findContentChildren</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; g, vector&lt;<span class="type">int</span>&gt;&amp; s)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">sort</span>(g.<span class="built_in">begin</span>(),g.<span class="built_in">end</span>());</span><br><span class="line">        <span class="built_in">sort</span>(s.<span class="built_in">begin</span>(),s.<span class="built_in">end</span>());</span><br><span class="line">        <span class="type">int</span> one=<span class="number">0</span>,two=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (one&lt;g.<span class="built_in">size</span>()&amp;&amp;two&lt;s.<span class="built_in">size</span>())&#123;</span><br><span class="line">            <span class="keyword">if</span> (g[one]&lt;=s[two])&#123;</span><br><span class="line">                ans++;</span><br><span class="line">                one++;</span><br><span class="line">                two++;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(g[one]&gt;s[two])&#123;</span><br><span class="line">                two++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="摆动序列"><a href="#摆动序列" class="headerlink" title="摆动序列"></a>摆动序列</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">wiggleMaxLength</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n=nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span> (n&lt;=<span class="number">1</span>) <span class="keyword">return</span> n;</span><br><span class="line">        <span class="type">int</span> prediff=nums[<span class="number">1</span>]-nums[<span class="number">0</span>];</span><br><span class="line">        <span class="type">int</span> ans;</span><br><span class="line">        <span class="keyword">if</span> (prediff==<span class="number">0</span>)&#123;</span><br><span class="line">            ans=<span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            ans=<span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">2</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="type">int</span> diff=nums[i]-nums[i<span class="number">-1</span>];</span><br><span class="line">            <span class="keyword">if</span> ((diff&gt;<span class="number">0</span>&amp;&amp;prediff&lt;=<span class="number">0</span>)||(diff&lt;<span class="number">0</span>&amp;&amp;prediff&gt;=<span class="number">0</span>))&#123;</span><br><span class="line">                ans++;</span><br><span class="line">                prediff=diff;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="最大子数组和（24机考原题）"><a href="#最大子数组和（24机考原题）" class="headerlink" title="最大子数组和（24机考原题）"></a>最大子数组和（24机考原题）</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">maxSubArray</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n=nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="type">int</span> ans=<span class="number">-100000</span>;</span><br><span class="line">        <span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            res+=nums[i];</span><br><span class="line">            <span class="keyword">if</span> (res&gt;ans)&#123;</span><br><span class="line">                ans=res;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (res&lt;<span class="number">0</span>) res=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>大代老师神了，这个思路比动态规划好想多了。</p><p>简单来说，如果这个数加到负数了，那就直接重开。</p><h3 id="买卖股票的最佳时间"><a href="#买卖股票的最佳时间" class="headerlink" title="买卖股票的最佳时间"></a>买卖股票的最佳时间</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; prices)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n=prices.<span class="built_in">size</span>();</span><br><span class="line">        <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">            ans+=<span class="built_in">max</span>(prices[i]-prices[i<span class="number">-1</span>],<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>我确实没想到了。</p><p>这个东西由于时间无关，所以就是越早卖越好，只要相邻出现正利益，立刻买入无需多言。</p><h3 id="跳跃游戏"><a href="#跳跃游戏" class="headerlink" title="跳跃游戏"></a>跳跃游戏</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">canJump</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n=nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span> (n==<span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> cover=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;=cover;i++)&#123;</span><br><span class="line">            cover=<span class="built_in">max</span>(i+nums[i],cover);</span><br><span class="line">            <span class="keyword">if</span> (cover&gt;=n<span class="number">-1</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="跳跃游戏变式"><a href="#跳跃游戏变式" class="headerlink" title="跳跃游戏变式"></a>跳跃游戏变式</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">jump</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n=nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span> (n==<span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> ptr=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> end=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (end&lt;n)&#123;</span><br><span class="line">            <span class="type">int</span> maxx=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i=ptr;i&lt;end;i++)&#123;</span><br><span class="line">                maxx=<span class="built_in">max</span>(i+nums[i],maxx);</span><br><span class="line">            &#125;</span><br><span class="line">            ptr=end;</span><br><span class="line">            end=maxx<span class="number">+1</span>;</span><br><span class="line">            ans++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>你知道这个事情有多脑残吗，三个月前我交的题解，三个月后的我自己没看懂。</p><p>简单来说，ptr和end围成的区间就是每次可以选择的区间，懂了吗。</p><blockquote><p>哈哈，这种感觉太真实了 😄——很多人回看自己几个月前写的贪心代码，尤其是这种“区间推进式”的写法，都会觉得：</p><blockquote><p>“我当时是怎么想的？为什么 <code>end=1</code> ？”</p></blockquote><p>别急，我们一步步还原你三个月前的思路。</p><hr><h2 id="🧩-先看关键初始化部分"><a href="#🧩-先看关键初始化部分" class="headerlink" title="🧩 先看关键初始化部分"></a>🧩 先看关键初始化部分</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> ptr = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> end = <span class="number">1</span>;   <span class="comment">// 👈 你现在不理解的地方</span></span><br></pre></td></tr></table></figure><p>我们要理解 <code>end=1</code>，得先明白 <strong><code>ptr</code>、<code>end</code> 代表什么</strong>。</p><hr><h2 id="🧭-变量语义（你写的风格）"><a href="#🧭-变量语义（你写的风格）" class="headerlink" title="🧭 变量语义（你写的风格）"></a>🧭 变量语义（你写的风格）</h2><table><thead><tr><th>变量</th><th>含义</th></tr></thead><tbody><tr><td><code>ptr</code></td><td>当前层的<strong>起始下标</strong></td></tr><tr><td><code>end</code></td><td>当前层的<strong>结束下标的下一个位置</strong>（右开区间 <code>[ptr, end)</code>）</td></tr><tr><td><code>ans</code></td><td>已跳的次数</td></tr></tbody></table><p>换句话说，每一轮 <code>while</code> 的含义是：</p><blockquote><p>“我们现在在区间 <code>[ptr, end)</code> 内，尝试跳一次，看能到多远。”</p></blockquote><hr><h2 id="🧠-为啥-end-1？"><a href="#🧠-为啥-end-1？" class="headerlink" title="🧠 为啥 end=1？"></a>🧠 为啥 <code>end=1</code>？</h2><p>因为：</p><ul><li>初始时，<strong>我们一开始就在下标 0</strong>；</li><li>那么当前层的范围应该是 <strong>只包含第 0 个点</strong>；</li><li>用右开区间 <code>[ptr, end)</code> 表示区间时，如果 <code>ptr=0</code>，只想包含下标 <code>0</code>，那 <code>end</code> 应该是 <code>1</code>。</li></ul><p>也就是说：</p><blockquote><p>初始化 <code>[ptr, end) = [0, 1)</code><br> 表示「我当前在第 0 层，只能从位置 0 起跳」。</p></blockquote><hr><h2 id="🧩-如果你把-end-0-或-end-n"><a href="#🧩-如果你把-end-0-或-end-n" class="headerlink" title="🧩 如果你把 end=0 或 end=n"></a>🧩 如果你把 <code>end=0</code> 或 <code>end=n</code></h2><p>我们看看会怎样：</p><h3 id="❌-end-0"><a href="#❌-end-0" class="headerlink" title="❌ end = 0"></a>❌ <code>end = 0</code></h3><ul><li>那么初始区间 <code>[0, 0)</code> 是空的；</li><li>进 <code>while(end&lt;n)</code> → true；</li><li>但 <code>for (int i=ptr; i&lt;end; i++)</code> 不会执行；</li><li><code>maxx</code> 一直是 0；</li><li>进入死循环。</li></ul><p>→ 程序卡死。</p><hr><h3 id="❌-end-n"><a href="#❌-end-n" class="headerlink" title="❌ end = n"></a>❌ <code>end = n</code></h3><ul><li>那就是一开始认为“整段都在当前层”；</li><li>跳跃逻辑全乱套；</li><li>直接跳出 <code>while</code>，<code>ans=0</code>；</li><li>输出错误。</li></ul><hr><h3 id="✅-end-1"><a href="#✅-end-1" class="headerlink" title="✅ end = 1"></a>✅ <code>end = 1</code></h3><p>这刚好表示「当前层只含下标 0」，完全符合初始状态。</p><hr><h2 id="🔄-一轮循环后"><a href="#🔄-一轮循环后" class="headerlink" title="🔄 一轮循环后"></a>🔄 一轮循环后</h2><p>举例：<code>nums = [2,3,1,1,4]</code></p><table><thead><tr><th>循环</th><th><code>[ptr, end)</code></th><th>含义</th></tr></thead><tbody><tr><td>初始</td><td><code>[0, 1)</code></td><td>当前只在第 0 号点</td></tr><tr><td>遍历 i&#x3D;0 → i+nums[i]&#x3D;2 → <code>maxx=2</code></td><td></td><td></td></tr><tr><td>更新 <code>ptr=end=1</code>, <code>end=maxx+1=3</code></td><td></td><td></td></tr><tr><td>表示下一层 <code>[1, 3)</code> &#x3D; {1,2}</td><td></td><td></td></tr></tbody></table><blockquote><p>即从 0 能跳到范围 [1,2]，<br> 下一层就从这些点再继续跳。</p></blockquote><hr><h2 id="✅-一句话总结"><a href="#✅-一句话总结" class="headerlink" title="✅ 一句话总结"></a>✅ 一句话总结</h2><p>你的 <code>end=1</code> 是为了：</p><blockquote><p>用 <code>[ptr, end)</code> 表示“当前层能到达的所有点”，<br> 初始时只在第 0 个点，所以要设置为 <code>[0, 1)</code>。</p></blockquote><hr><h2 id="💬-小比喻"><a href="#💬-小比喻" class="headerlink" title="💬 小比喻"></a>💬 小比喻</h2><p>想象你在玩跳格子游戏：</p><ul><li><code>ptr</code> 是当前一层的<strong>起点格子</strong>；</li><li><code>end</code> 是这层的<strong>终点格子+1</strong>；</li><li>每层循环表示<strong>你跳一次，能进入下一层可达格子范围</strong>；</li><li>初始化时，你只站在第 0 个格子上，所以 <code>[0,1)</code>。</li></ul><hr><p>要不要我帮你改写成“更自然语义”的版本（例如 <code>start</code> &#x2F; <code>end</code> 不用右开区间）？<br> 那样写出来看起来更直观一点（不需要 <code>+1</code>）。</p></blockquote><h3 id="K次取反后最大化的数组和"><a href="#K次取反后最大化的数组和" class="headerlink" title="K次取反后最大化的数组和"></a>K次取反后最大化的数组和</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">largestSumAfterKNegations</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">sort</span>(nums.<span class="built_in">begin</span>(),nums.<span class="built_in">end</span>());</span><br><span class="line">        <span class="keyword">while</span> (k--)&#123;</span><br><span class="line">            nums[<span class="number">0</span>]=-nums[<span class="number">0</span>];</span><br><span class="line">            <span class="built_in">sort</span>(nums.<span class="built_in">begin</span>(),nums.<span class="built_in">end</span>());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> it:nums)&#123;</span><br><span class="line">            ans+=it;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="加油站"><a href="#加油站" class="headerlink" title="加油站"></a>加油站</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">canCompleteCircuit</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; gas, vector&lt;<span class="type">int</span>&gt;&amp; cost)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//-2 -2 -2 3 3</span></span><br><span class="line">        <span class="comment">//-1 -1 1</span></span><br><span class="line">        vector&lt;<span class="type">int</span>&gt; oil;</span><br><span class="line">        <span class="type">int</span> n=gas.<span class="built_in">size</span>();</span><br><span class="line">        <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> minn=<span class="number">100000</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            oil.<span class="built_in">push_back</span>(gas[i]-cost[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            sum+=oil[i];</span><br><span class="line">            <span class="keyword">if</span> (sum&lt;minn)&#123;</span><br><span class="line">                minn=sum;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (sum&lt;<span class="number">0</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">if</span> (minn&gt;=<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">            minn+=oil[i];</span><br><span class="line">            <span class="keyword">if</span> (minn&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="柠檬水找零"><a href="#柠檬水找零" class="headerlink" title="柠檬水找零"></a>柠檬水找零</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">lemonadeChange</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; bills)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n=bills.<span class="built_in">size</span>();</span><br><span class="line">        <span class="type">int</span> h[<span class="number">11</span>];</span><br><span class="line">        <span class="built_in">memset</span>(h,<span class="number">0</span>,<span class="built_in">sizeof</span>(h));</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (bills[i]==<span class="number">5</span>)&#123;</span><br><span class="line">                h[<span class="number">5</span>]++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (bills[i]==<span class="number">10</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span> (h[<span class="number">5</span>]==<span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    h[<span class="number">5</span>]--;</span><br><span class="line">                    h[<span class="number">10</span>]++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (bills[i]==<span class="number">20</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span> (h[<span class="number">10</span>]&gt;=<span class="number">1</span>&amp;&amp;h[<span class="number">5</span>]&gt;=<span class="number">1</span>)&#123;</span><br><span class="line">                    h[<span class="number">10</span>]--;</span><br><span class="line">                    h[<span class="number">5</span>]--;</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span> (h[<span class="number">5</span>]&gt;=<span class="number">3</span>)&#123;</span><br><span class="line">                    h[<span class="number">5</span>]-=<span class="number">3</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>这里有三种金额，5，10，20。问题是要找零</p><p>我们可以发现的是，5泛用性较高对策性较强属于超大杯，10泛用性一般对策性较强属于大杯，而20泛用性极低对策性极低属于中杯。</p><p>每次消耗先消耗泛用性低的，留在手里没用，然后再去考虑泛用性高的。</p><h3 id="分发糖果"><a href="#分发糖果" class="headerlink" title="分发糖果"></a>分发糖果</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">candy</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; ratings)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n=ratings.<span class="built_in">size</span>();</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">ans</span><span class="params">(n,<span class="number">1</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (ratings[i]&gt;ratings[i<span class="number">-1</span>])&#123;</span><br><span class="line">                ans[i]=ans[i<span class="number">-1</span>]<span class="number">+1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=n<span class="number">-2</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">            <span class="keyword">if</span> (ratings[i]&gt;ratings[i<span class="number">+1</span>])&#123;</span><br><span class="line">                ans[i]=<span class="built_in">max</span>(ans[i],ans[i<span class="number">+1</span>]<span class="number">+1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            sum+=ans[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>分发糖果事实上是一类题，与这一题类似的还有PAT B1119</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//PAT B1119答案</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">panda</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;panda[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">ans</span><span class="params">(n,<span class="number">200</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (panda[i]&gt;panda[i<span class="number">-1</span>])&#123;</span><br><span class="line">            ans[i]=ans[i<span class="number">-1</span>]<span class="number">+100</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(panda[i]==panda[i<span class="number">-1</span>])&#123;</span><br><span class="line">            ans[i]=ans[i<span class="number">-1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=n<span class="number">-2</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">        <span class="keyword">if</span> (panda[i]&gt;panda[i<span class="number">+1</span>])&#123;</span><br><span class="line">            ans[i]=<span class="built_in">max</span>(ans[i],ans[i<span class="number">+1</span>]<span class="number">+100</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(panda[i]==panda[i<span class="number">+1</span>])&#123;</span><br><span class="line">            ans[i]=<span class="built_in">max</span>(ans[i],ans[i<span class="number">+1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        sum+=ans[i];</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;sum&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>都是扫描两次。</p><h3 id="根据身高重建队列"><a href="#根据身高重建队列" class="headerlink" title="根据身高重建队列"></a>根据身高重建队列</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;a,vector&lt;<span class="type">int</span>&gt; &amp;b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a[<span class="number">0</span>]==b[<span class="number">0</span>]) <span class="keyword">return</span> a[<span class="number">1</span>]&lt;b[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">return</span> a[<span class="number">0</span>]&gt;b[<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">reconstructQueue</span>(vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp; people) &#123;</span><br><span class="line">        <span class="built_in">sort</span>(people.<span class="built_in">begin</span>(),people.<span class="built_in">end</span>(),cmp);</span><br><span class="line">        vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; que;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;people.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">            <span class="type">int</span> pos=people[i][<span class="number">1</span>];</span><br><span class="line">            que.<span class="built_in">insert</span>(que.<span class="built_in">begin</span>()+pos,people[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> que;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>这个思路有点难想了。</p><h3 id="用最少的箭引爆气球"><a href="#用最少的箭引爆气球" class="headerlink" title="用最少的箭引爆气球"></a>用最少的箭引爆气球</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;a,vector&lt;<span class="type">int</span>&gt; &amp;b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a[<span class="number">0</span>]==b[<span class="number">0</span>]) <span class="keyword">return</span> a[<span class="number">1</span>]&lt;b[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">return</span> a[<span class="number">0</span>]&gt;b[<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">reconstructQueue</span>(vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp; people) &#123;</span><br><span class="line">        <span class="built_in">sort</span>(people.<span class="built_in">begin</span>(),people.<span class="built_in">end</span>(),cmp);</span><br><span class="line">        vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; que;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;people.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">            <span class="type">int</span> pos=people[i][<span class="number">1</span>];</span><br><span class="line">            que.<span class="built_in">insert</span>(que.<span class="built_in">begin</span>()+pos,people[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> que;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>事实上，这个是贪心里最有迹可循的题目，也就是重合线段模型了。</p><h3 id="无重叠区间"><a href="#无重叠区间" class="headerlink" title="无重叠区间"></a>无重叠区间</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;a,vector&lt;<span class="type">int</span>&gt; &amp;b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a[<span class="number">1</span>]&lt;b[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">eraseOverlapIntervals</span><span class="params">(vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp; intervals)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n=intervals.<span class="built_in">size</span>();</span><br><span class="line">        <span class="built_in">sort</span>(intervals.<span class="built_in">begin</span>(),intervals.<span class="built_in">end</span>(),cmp);</span><br><span class="line">        <span class="type">int</span> minn=intervals[<span class="number">0</span>][<span class="number">1</span>];</span><br><span class="line">        <span class="type">int</span> ans=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (intervals[i][<span class="number">0</span>]&gt;=minn)&#123;</span><br><span class="line">                ans++;</span><br><span class="line">                minn=intervals[i][<span class="number">1</span>];</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> n-ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="划分字母区间"><a href="#划分字母区间" class="headerlink" title="划分字母区间"></a>划分字母区间</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">partitionLabels</span><span class="params">(string s)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n=s.<span class="built_in">size</span>();</span><br><span class="line">        vector&lt;<span class="type">int</span>&gt; ans;</span><br><span class="line">        unordered_map&lt;<span class="type">char</span>,<span class="type">int</span>&gt; h;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            h[s[i]]=i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> idx=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> pos=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (h[s[i]]&gt;idx)&#123;</span><br><span class="line">                idx=h[s[i]];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (i==idx)&#123;</span><br><span class="line">                ans.<span class="built_in">push_back</span>(idx-pos<span class="number">+1</span>);</span><br><span class="line">                idx=h[s[i<span class="number">+1</span>]];</span><br><span class="line">                pos=i<span class="number">+1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>何尝不是一种线段模型的表示形式，总的而言就是先统计出来每个字符最后出现的位置，然后再定义一个最大值为0，一旦遇到那个字母最后出现位置大于最大值，那么就更新最大值，一旦最大值和i相等了，那么直接保存一次答案，然后把初始指针移动到下一位，继续遍历。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">cmp</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;a, vector&lt;<span class="type">int</span>&gt; &amp;b)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a[<span class="number">0</span>] &lt; b[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 记录每个字母出现的区间</span></span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">countLabels</span>(string s) &#123;</span><br><span class="line">        vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">hash</span>(<span class="number">26</span>, <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(<span class="number">2</span>, INT_MIN));</span><br><span class="line">        vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; hash_filter;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>(); ++i) &#123;</span><br><span class="line">            <span class="keyword">if</span> (hash[s[i] - <span class="string">&#x27;a&#x27;</span>][<span class="number">0</span>] == INT_MIN) &#123;</span><br><span class="line">                hash[s[i] - <span class="string">&#x27;a&#x27;</span>][<span class="number">0</span>] = i;</span><br><span class="line">            &#125;</span><br><span class="line">            hash[s[i] - <span class="string">&#x27;a&#x27;</span>][<span class="number">1</span>] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 去除字符串中未出现的字母所占用区间</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; hash.<span class="built_in">size</span>(); ++i) &#123;</span><br><span class="line">            <span class="keyword">if</span> (hash[i][<span class="number">0</span>] != INT_MIN) &#123;</span><br><span class="line">                hash_filter.<span class="built_in">push_back</span>(hash[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> hash_filter;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">partitionLabels</span><span class="params">(string s)</span> </span>&#123;</span><br><span class="line">        vector&lt;<span class="type">int</span>&gt; res;</span><br><span class="line">        <span class="comment">// 这一步得到的 hash 即为无重叠区间题意中的输入样例格式：区间列表</span></span><br><span class="line">        <span class="comment">// 只不过现在我们要求的是区间分割点</span></span><br><span class="line">        vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; hash = <span class="built_in">countLabels</span>(s);</span><br><span class="line">        <span class="comment">// 按照左边界从小到大排序</span></span><br><span class="line">        <span class="built_in">sort</span>(hash.<span class="built_in">begin</span>(), hash.<span class="built_in">end</span>(), cmp);</span><br><span class="line">        <span class="comment">// 记录最大右边界</span></span><br><span class="line">        <span class="type">int</span> rightBoard = hash[<span class="number">0</span>][<span class="number">1</span>];</span><br><span class="line">        <span class="type">int</span> leftBoard = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; hash.<span class="built_in">size</span>(); ++i) &#123;</span><br><span class="line">            <span class="comment">// 由于字符串一定能分割，因此,</span></span><br><span class="line">            <span class="comment">// 一旦下一区间左边界大于当前右边界，即可认为出现分割点</span></span><br><span class="line">            <span class="keyword">if</span> (hash[i][<span class="number">0</span>] &gt; rightBoard) &#123;</span><br><span class="line">                res.<span class="built_in">push_back</span>(rightBoard - leftBoard + <span class="number">1</span>);</span><br><span class="line">                leftBoard = hash[i][<span class="number">0</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            rightBoard = <span class="built_in">max</span>(rightBoard, hash[i][<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 最右端</span></span><br><span class="line">        res.<span class="built_in">push_back</span>(rightBoard - leftBoard + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="合并区间"><a href="#合并区间" class="headerlink" title="合并区间"></a>合并区间</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;a,vector&lt;<span class="type">int</span>&gt; &amp;b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a[<span class="number">0</span>]&lt;b[<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">merge</span>(vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp; intervals) &#123;</span><br><span class="line">        <span class="type">int</span> n=intervals.<span class="built_in">size</span>();</span><br><span class="line">        vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; ans;</span><br><span class="line">        <span class="built_in">sort</span>(intervals.<span class="built_in">begin</span>(),intervals.<span class="built_in">end</span>());</span><br><span class="line">        <span class="type">int</span> minn=intervals[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">        <span class="type">int</span> maxx=intervals[<span class="number">0</span>][<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (intervals[i][<span class="number">0</span>]&gt;maxx)&#123;</span><br><span class="line">                vector&lt;<span class="type">int</span>&gt; path;</span><br><span class="line">                path.<span class="built_in">push_back</span>(minn);</span><br><span class="line">                path.<span class="built_in">push_back</span>(maxx);</span><br><span class="line">                ans.<span class="built_in">push_back</span>(path);</span><br><span class="line">                minn=intervals[i][<span class="number">0</span>];</span><br><span class="line">                maxx=intervals[i][<span class="number">1</span>];</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                maxx=<span class="built_in">max</span>(intervals[i][<span class="number">1</span>],maxx);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        vector&lt;<span class="type">int</span>&gt; path;</span><br><span class="line">        path.<span class="built_in">push_back</span>(minn);</span><br><span class="line">        path.<span class="built_in">push_back</span>(maxx);</span><br><span class="line">        ans.<span class="built_in">push_back</span>(path);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>这个也是线段合并模板题，经过讲解我现在理解更深了。</p><h3 id="单调递增的数字"><a href="#单调递增的数字" class="headerlink" title="单调递增的数字"></a>单调递增的数字</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">monotoneIncreasingDigits</span><span class="params">(<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">        string str=<span class="built_in">to_string</span>(n);</span><br><span class="line">        <span class="type">int</span> flag=str.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=str.<span class="built_in">size</span>()<span class="number">-1</span>;i&gt;<span class="number">0</span>;i--)&#123;</span><br><span class="line">            <span class="keyword">if</span> (str[i<span class="number">-1</span>]&gt;str[i])&#123;</span><br><span class="line">                flag=i;</span><br><span class="line">                str[i<span class="number">-1</span>]--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=flag;i&lt;str.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">            str[i]=<span class="string">&#x27;9&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">stoi</span>(str);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><p>好——下面我把 <strong>贪心解（Greedy）</strong> 的思路讲得尽可能清楚、逐步且可直接拿去写代码。目标是：理解为什么操作是正确的、每一步在做什么、常见边界如何处理，并给出简洁的实现与例子演示。</p><h1 id="要解决的问题（快速回顾）"><a href="#要解决的问题（快速回顾）" class="headerlink" title="要解决的问题（快速回顾）"></a>要解决的问题（快速回顾）</h1><p>给定正整数 <code>n</code>，找出最大的整数 <code>x</code>（<code>x ≤ n</code>），使得 <code>x</code> 的每一位从左到右<strong>非递减</strong>（即单调递增&#x2F;非降：每一位 ≤ 下一位）。</p><p>示例：<code>n=332</code> → 答案 <code>299</code>。</p><hr><h1 id="核心观察（关键不难但很重要）"><a href="#核心观察（关键不难但很重要）" class="headerlink" title="核心观察（关键不难但很重要）"></a>核心观察（关键不难但很重要）</h1><p>若一个数的某一位 <code>i-1</code> 大于后一位 <code>i</code>（即 <code>s[i-1] &gt; s[i]</code>），那么任何以当前前缀（包括 <code>s[i-1]</code>）开始并保持后面不变的数都<strong>不是单调非降</strong>。<br> 要在不超过 <code>n</code> 的前提下得到尽可能大的单调数，你需要 <strong>把违规点之前的某一位减 1</strong>，然后把那个位置右边所有位都改成 <code>9</code>（因为改成 9 能在保证 ≤ n 的前提下把数尽量变大）。</p><p>举例直觉：<code>332</code></p><ul><li>发现 <code>3 &gt; 2</code>（位置 1 比位置 2 大），所以不能直接用 <code>332</code>。</li><li>把 <code>s[1]</code>（第二位）减 1 → 得到 <code>3 2 ?</code>（现在前缀是 <code>32</code>）</li><li>把后面全部改 <code>9</code> → <code>3 2 9</code>，但 <code>329</code> 仍然不是单调非降（因为 <code>3 &gt; 2</code>），所以你应当继续向左看，把 <code>s[0]</code>（第一位）减 1 → <code>2 ? ?</code>，然后把所有右边改 <code>9</code> → <code>299</code>，这是合法且最大的。</li></ul><hr><h1 id="具体算法（一步步执行）"><a href="#具体算法（一步步执行）" class="headerlink" title="具体算法（一步步执行）"></a>具体算法（一步步执行）</h1><ol><li>把 <code>n</code> 转成字符串 <code>s</code>（比如 <code>&quot;332&quot;</code>）。</li><li>从右往左扫描索引 <code>i = len(s)-1</code> 到 <code>1</code>：<ul><li>如果发现 <code>s[i-1] &gt; s[i]</code>：<ul><li>把 <code>s[i-1]--</code>（把左位减 1），</li><li>记录一个位置 <code>mark = i</code>（表示从 <code>i</code> 开始到末尾要全部改成 <code>9</code>）。</li></ul></li></ul></li><li>扫描结束后，把从 <code>mark</code> 到末尾的所有字符都置为 <code>&#39;9&#39;</code>。</li><li>将字符串转回整数返回（注意可能有前导 <code>0</code>，如 <code>1000 -&gt; 0999 -&gt; 999</code>，转换为整数会自动处理）。</li></ol><p><strong>实现细节</strong>：初始化 <code>mark = s.size()</code>（表示如果从未发现违规就无需改成 9）。每次发现 <code>s[i-1] &gt; s[i]</code>，执行 <code>s[i-1]--</code> 并 <code>mark = i</code>（注意不要立刻把右边改成 9 - 先记录位置，继续向左扫描，可能需要多次左减）。</p><hr><h1 id="为什么这样是正确的（证明直观版）"><a href="#为什么这样是正确的（证明直观版）" class="headerlink" title="为什么这样是正确的（证明直观版）"></a>为什么这样是正确的（证明直观版）</h1><ul><li>当 <code>s[i-1] &gt; s[i]</code> 时，任何保持前缀不变的数都不可能合法（不单调）。要让前缀变得合法，唯一可行的操作是把前缀中某一位减小（向左找第一个能减的位置），因为减小某一左侧位可以使得后面做任意更大填充而仍 ≤ <code>n</code>。</li><li>为了在不超过 <code>n</code> 的前提下最大化结果，把该位减 1 后，右边所有位都应设为最大可能（即 <code>9</code>）。</li><li>向左继续检查是必要的：减了左边某位之后，可能出现新的 <code>s[j-1] &gt; s[j]</code>（因为你减小了 <code>s[j]</code>），所以需要继续向左处理直到没有违反。上述“先记录<code>mark</code>继续向左”正是实现这个逻辑的高效方法。</li><li>最终形成的数是小于等于原数且单调非降的最大数，因为对任何更大的比它还小的候选数都会在某处违反条件或超过 <code>n</code>。</li></ul><hr><h1 id="时间与空间复杂度"><a href="#时间与空间复杂度" class="headerlink" title="时间与空间复杂度"></a>时间与空间复杂度</h1><ul><li>时间：O(d)，d &#x3D; 数字的位数（将近 <code>log10(n)</code>），非常快。</li><li>空间：O(d)（字符串存储），可认为 O(1) 额外空间。</li></ul><hr><h1 id="代码（C-，简洁易懂）"><a href="#代码（C-，简洁易懂）" class="headerlink" title="代码（C++，简洁易懂）"></a>代码（C++，简洁易懂）</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">monotoneIncreasingDigits</span><span class="params">(<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">    string s = <span class="built_in">to_string</span>(n);</span><br><span class="line">    <span class="type">int</span> mark = s.<span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = s.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt; <span class="number">0</span>; --i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (s[i<span class="number">-1</span>] &gt; s[i]) &#123;</span><br><span class="line">            s[i<span class="number">-1</span>]--;</span><br><span class="line">            mark = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = mark; i &lt; (<span class="type">int</span>)s.<span class="built_in">size</span>(); ++i) s[i] = <span class="string">&#x27;9&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">stoi</span>(s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（Python 版本也很短，可按需提供。）</p><hr><h1 id="例子逐步演示（两例）"><a href="#例子逐步演示（两例）" class="headerlink" title="例子逐步演示（两例）"></a>例子逐步演示（两例）</h1><p><strong>例 1：n &#x3D; 332</strong><br> s &#x3D; “332”, mark &#x3D; 3<br> i&#x3D;2: s[1]&#x3D;3, s[2]&#x3D;2 → 3&gt;2 ✓ → s[1]– &#x3D;&gt; s&#x3D;”322”, mark&#x3D;2<br> i&#x3D;1: s[0]&#x3D;3, s[1]&#x3D;2 → 3&gt;2 ✓ → s[0]– &#x3D;&gt; s&#x3D;”222”, mark&#x3D;1<br> end loop -&gt; 把从 mark&#x3D;1 到末尾全设为 ‘9’ -&gt; s &#x3D; “299” -&gt; 返回 299。</p><p><strong>例 2：n &#x3D; 1234</strong><br> s&#x3D;”1234”，从右往左检查没有 s[i-1] &gt; s[i] 的情况，mark 保持为 4（s.size），不用变 9，直接返回 1234。</p><hr><h1 id="常见边界-注意点"><a href="#常见边界-注意点" class="headerlink" title="常见边界 &#x2F; 注意点"></a>常见边界 &#x2F; 注意点</h1><ul><li><code>n</code> 本身就是单调非降时，直接返回 <code>n</code>（算法会自动做到）。</li><li>会出现类似 <code>1000</code> 的情形：<br> s &#x3D; “1000”<br> i&#x3D;3: 0 !&gt; 0<br> i&#x3D;2: 0 !&gt; 0<br> i&#x3D;1: 1 &gt; 0 → s[0]– &#x3D;&gt; ‘0’, mark&#x3D;1 → 最后从 1 开始全部设 9 &#x3D;&gt; “0999” -&gt; stoi -&gt; 999，正确。</li><li>字符串减法 <code>s[i-1]--</code> 对字符安全（’0’ 到 ‘9’ 范围里减 1 都有效）；若出现 <code>&#39;0&#39;--</code> 结果是 <code>&#39;/&#39;</code>（ASCII），但不会发生因为当 <code>s[i-1] &gt; s[i]</code> 且 <code>s[i]</code> 最小为 ‘0’ 时 <code>s[i-1]</code> 至少是 ‘1’，故减 1 后仍是数字字符。</li></ul><hr><h1 id="直观理解（一句话）"><a href="#直观理解（一句话）" class="headerlink" title="直观理解（一句话）"></a>直观理解（一句话）</h1><p>把从右到左第一个“下降”的点往左找到能调整的位，把它减 1，然后把右边全部填 9；重复直到整个数不再下降 —— 这样得到的不超过原数的单调非降数是<strong>最大的</strong>。</p><hr><p>如果你想，我可以再：</p><ul><li>给出 Python 实现；或</li><li>把“为什么要继续向左”的情形用一个小动画式的多步骤例子（比如 <code>n=3329</code>）画出来。</li></ul><p>你想看哪一个？</p></blockquote><p>我其实还去想了回溯解，但是回溯解法用脑子稍微想想就知道会超时了，这边只是做个参考</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">long</span> <span class="type">long</span> n;</span><br><span class="line">string n_str;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> best = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">backtrack</span><span class="params">(string cur, <span class="type">int</span> last_digit)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 把当前字符串转成数字看看是不是一个候选解</span></span><br><span class="line">    <span class="keyword">if</span> (!cur.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">        <span class="type">long</span> <span class="type">long</span> val = <span class="built_in">stoll</span>(cur);</span><br><span class="line">        <span class="keyword">if</span> (val &lt;= n) best = <span class="built_in">max</span>(best, val);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span>; <span class="comment">// 如果已经超过 n，就没必要继续往下构造了</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果长度超过 n 的位数，也没必要继续</span></span><br><span class="line">    <span class="keyword">if</span> (cur.<span class="built_in">size</span>() &gt;= n_str.<span class="built_in">size</span>()) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 尝试添加新的一位</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> d = last_digit; d &lt;= <span class="number">9</span>; d++) &#123;</span><br><span class="line">        <span class="built_in">backtrack</span>(cur + (<span class="type">char</span>)(<span class="string">&#x27;0&#x27;</span> + d), d);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    n_str = <span class="built_in">to_string</span>(n);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">backtrack</span>(<span class="string">&quot;&quot;</span>, <span class="number">0</span>);</span><br><span class="line">    cout &lt;&lt; best &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="动态规划理论"><a href="#动态规划理论" class="headerlink" title="动态规划理论"></a>动态规划理论</h2><h3 id="斐波那契数列"><a href="#斐波那契数列" class="headerlink" title="斐波那契数列"></a>斐波那契数列</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">fib</span><span class="params">(<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> f[<span class="number">35</span>];</span><br><span class="line">        f[<span class="number">0</span>]=<span class="number">0</span>,f[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">30</span>;i++)&#123;</span><br><span class="line">            f[i]=f[i<span class="number">-1</span>]+f[i<span class="number">-2</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> f[n];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="爬楼梯"><a href="#爬楼梯" class="headerlink" title="爬楼梯"></a>爬楼梯</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">climbStairs</span><span class="params">(<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//dp[i]的意思是爬上第i层楼梯有几种方法</span></span><br><span class="line">        <span class="type">int</span> dp[<span class="number">46</span>];</span><br><span class="line">        dp[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">        dp[<span class="number">2</span>]=<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">3</span>;i&lt;=<span class="number">45</span>;i++)&#123;</span><br><span class="line">            dp[i]=dp[i<span class="number">-1</span>]+dp[i<span class="number">-2</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[n];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="用最小的花费爬楼梯"><a href="#用最小的花费爬楼梯" class="headerlink" title="用最小的花费爬楼梯"></a>用最小的花费爬楼梯</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">minCostClimbingStairs</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; cost)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n=cost.<span class="built_in">size</span>();</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">dp</span><span class="params">(n<span class="number">+1</span>)</span></span>;</span><br><span class="line">        dp[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">        dp[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            dp[i]=<span class="built_in">min</span>(dp[i<span class="number">-1</span>]+cost[i<span class="number">-1</span>],dp[i<span class="number">-2</span>]+cost[i<span class="number">-2</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[n];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="不同路径"><a href="#不同路径" class="headerlink" title="不同路径"></a>不同路径</h3><h4 id="题解一：深度优先搜索"><a href="#题解一：深度优先搜索" class="headerlink" title="题解一：深度优先搜索"></a>题解一：深度优先搜索</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> j, <span class="type">int</span> m, <span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (i &gt; m || j &gt; n) <span class="keyword">return</span> <span class="number">0</span>; <span class="comment">// 越界了</span></span><br><span class="line">        <span class="keyword">if</span> (i == m &amp;&amp; j == n) <span class="keyword">return</span> <span class="number">1</span>; <span class="comment">// 找到一种方法，相当于找到了叶子节点</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">dfs</span>(i + <span class="number">1</span>, j, m, n) + <span class="built_in">dfs</span>(i, j + <span class="number">1</span>, m, n);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">uniquePaths</span><span class="params">(<span class="type">int</span> m, <span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">dfs</span>(<span class="number">1</span>, <span class="number">1</span>, m, n);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>这个写法是比较直观的思路，因为这个题事实上就是一个图，但是问题是会超时</p><h4 id="题解二：动态规划（正解）"><a href="#题解二：动态规划（正解）" class="headerlink" title="题解二：动态规划（正解）"></a>题解二：动态规划（正解）</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">uniquePaths</span><span class="params">(<span class="type">int</span> m, <span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">        vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">dp</span>(m,<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(n));</span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">            dp[<span class="number">0</span>][i]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;m;i++)&#123;</span><br><span class="line">            dp[i][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;m;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">1</span>;j&lt;n;j++)&#123;</span><br><span class="line">                dp[i][j]=dp[i<span class="number">-1</span>][j]+dp[i][j<span class="number">-1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[m<span class="number">-1</span>][n<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>和洛谷上那题马的遍历可能是完全一样的题目，这一题可能还比较简单没有加障碍物，也没有限制移动规则。</p><h3 id="不同路径变式"><a href="#不同路径变式" class="headerlink" title="不同路径变式"></a>不同路径变式</h3><h4 id="动态规划解法："><a href="#动态规划解法：" class="headerlink" title="动态规划解法："></a>动态规划解法：</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">uniquePathsWithObstacles</span><span class="params">(vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp; obstacleGrid)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> m=obstacleGrid.<span class="built_in">size</span>();</span><br><span class="line">        <span class="type">int</span> n=obstacleGrid[<span class="number">0</span>].<span class="built_in">size</span>();</span><br><span class="line">        vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">dp</span>(m,<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(n,<span class="number">0</span>));</span><br><span class="line">        <span class="keyword">if</span> (obstacleGrid[m<span class="number">-1</span>][n<span class="number">-1</span>]==<span class="number">1</span>||obstacleGrid[<span class="number">0</span>][<span class="number">0</span>]==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;m;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (obstacleGrid[i][<span class="number">0</span>]==<span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">else</span> dp[i][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (obstacleGrid[<span class="number">0</span>][i]==<span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">else</span> dp[<span class="number">0</span>][i]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;m;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">1</span>;j&lt;n;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (obstacleGrid[i][j]==<span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line">                dp[i][j]=dp[i<span class="number">-1</span>][j]+dp[i][j<span class="number">-1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[m<span class="number">-1</span>][n<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>如果在最外围出现了障碍物，那么和障碍物同一条直线上且之后的都无法到达，都是0</p><h4 id="深度优先搜索-记忆化"><a href="#深度优先搜索-记忆化" class="headerlink" title="深度优先搜索+记忆化"></a>深度优先搜索+记忆化</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="type">int</span> m, n;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; memo;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">dfs</span><span class="params">(vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp; grid, <span class="type">int</span> i, <span class="type">int</span> j)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (i &gt;= m || j &gt;= n || grid[i][j] == <span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (i == m - <span class="number">1</span> &amp;&amp; j == n - <span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (memo[i][j] != <span class="number">-1</span>) <span class="keyword">return</span> memo[i][j];</span><br><span class="line">        <span class="keyword">return</span> memo[i][j] = <span class="built_in">dfs</span>(grid, i + <span class="number">1</span>, j) + <span class="built_in">dfs</span>(grid, i, j + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">uniquePathsWithObstacles</span><span class="params">(vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp; grid)</span> </span>&#123;</span><br><span class="line">        m = grid.<span class="built_in">size</span>(), n = grid[<span class="number">0</span>].<span class="built_in">size</span>();</span><br><span class="line">        memo.<span class="built_in">assign</span>(m, <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(n, <span class="number">-1</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">dfs</span>(grid, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="整数拆分"><a href="#整数拆分" class="headerlink" title="整数拆分"></a>整数拆分</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">integerBreak</span><span class="params">(<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">dp</span><span class="params">(n<span class="number">+1</span>)</span></span>;</span><br><span class="line">        dp[<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">3</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">1</span>;j&lt;=i/<span class="number">2</span>;j++)&#123;</span><br><span class="line">                dp[i]=<span class="built_in">max</span>(dp[i],<span class="built_in">max</span>(j*dp[i-j],j*(i-j)));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[n];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>我先吐槽，你再给我十辈子我都想不出来这种思路。</p><h3 id="0-1背包理论"><a href="#0-1背包理论" class="headerlink" title="0&#x2F;1背包理论"></a>0&#x2F;1背包理论</h3><p><img src="https://s3.bmp.ovh/imgs/2025/10/16/bbedccb90d144180.png"></p><h4 id="例题：携带研究材料（01背包模板题）"><a href="#例题：携带研究材料（01背包模板题）" class="headerlink" title="例题：携带研究材料（01背包模板题）"></a>例题：携带研究材料（01背包模板题）</h4><p>题目描述</p><p>小明是一位科学家，他需要参加一场重要的国际科学大会，以展示自己的最新研究成果。他需要带一些研究材料，但是他的行李箱空间有限。这些研究材料包括实验设备、文献资料和实验样本等等，它们各自占据不同的空间，并且具有不同的价值。 </p><p>小明的行李空间为 N，问小明应该如何抉择，才能携带最大价值的研究材料，每种研究材料只能选择一次，并且只有选与不选两种选择，不能进行切割。</p><p>输入描述</p><p>第一行包含两个正整数，第一个整数 M 代表研究材料的种类，第二个正整数 N，代表小明的行李空间。</p><p>第二行包含 M 个正整数，代表每种研究材料的所占空间。 </p><p>第三行包含 M 个正整数，代表每种研究材料的价值。</p><p>输出描述</p><p>输出一个整数，代表小明能够携带的研究材料的最大价值。</p><p>输入示例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">6 1</span><br><span class="line">2 2 3 1 5 2</span><br><span class="line">2 3 1 5 4 3</span><br></pre></td></tr></table></figure><p>输出示例</p><p>提示信息</p><p>小明能够携带 6 种研究材料，但是行李空间只有 1，而占用空间为 1 的研究材料价值为 5，所以最终答案输出 5。 </p><p>数据范围：<br>1 &lt;&#x3D; N &lt;&#x3D; 5000<br>1 &lt;&#x3D; M &lt;&#x3D; 5000<br>研究材料占用空间和价值都小于等于 1000</p><p>题解：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> m,n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;m&gt;&gt;n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">value</span><span class="params">(m)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">weight</span><span class="params">(m)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        cin&gt;&gt;weight[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        cin&gt;&gt;value[i];</span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">dp</span>(m,<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(n<span class="number">+1</span>,<span class="number">0</span>));</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=weight[<span class="number">0</span>];i&lt;n<span class="number">+1</span>;i++)&#123;</span><br><span class="line">        dp[<span class="number">0</span>][i]=value[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;m;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>;j&lt;n<span class="number">+1</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (j&lt;weight[i])&#123;</span><br><span class="line">                dp[i][j]=dp[i<span class="number">-1</span>][j];</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                dp[i][j]=<span class="built_in">max</span>(dp[i<span class="number">-1</span>][j],dp[i<span class="number">-1</span>][j-weight[i]]+value[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;dp[m<span class="number">-1</span>][n];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>即<strong>dp[i][j] 表示从下标为[0-i]的物品里任意取，放进容量为j的背包，价值总和最大是多少</strong>。</p><p><strong>要时刻记着这个dp数组的含义，下面的一些步骤都围绕这dp数组的含义进行的</strong>，如果哪里看懵了，就来回顾一下i代表什么，j又代表什么</p><h4 id="分割等和子集"><a href="#分割等和子集" class="headerlink" title="分割等和子集"></a>分割等和子集</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">canPartition</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n=nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">dp</span><span class="params">(<span class="number">10001</span>,<span class="number">0</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            sum+=nums[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (sum%<span class="number">2</span>==<span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> t=sum/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j=t;j&gt;=nums[i];j--)&#123;</span><br><span class="line">                dp[j]=<span class="built_in">max</span>(dp[j],dp[j-nums[i]]+nums[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (dp[t]==t) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>这个真的很扯你知道吗，不看我这辈子想不到要dp。</p><h4 id="最后一块石头的重量"><a href="#最后一块石头的重量" class="headerlink" title="最后一块石头的重量"></a>最后一块石头的重量</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">lastStoneWeightII</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; stones)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n=stones.<span class="built_in">size</span>();</span><br><span class="line">        <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            sum+=stones[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">dp</span><span class="params">(<span class="number">1510</span>,<span class="number">0</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j=sum/<span class="number">2</span>;j&gt;=stones[i];j--)&#123;</span><br><span class="line">                dp[j]=<span class="built_in">max</span>(dp[j],dp[j-stones[i]]+stones[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum<span class="number">-2</span>*dp[sum/<span class="number">2</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>这个题目和洛谷的那个分作业有点像，都是01背包求最小值的，应该就是一个模板了</p><p>一维dp从后往前面遍历的目的其实是为了防止同一个物品被多次选择</p><p>更详细的看下面</p><p>dp[j]为 容量为j的背包所背的最大价值。等于就是把原本的二维dp的其中一个维度都拷贝到一个一维数组上了</p><h4 id="目标和"><a href="#目标和" class="headerlink" title="目标和"></a>目标和</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="type">int</span> <span class="title">findTargetSumWays</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> target)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> num : nums) &#123;</span><br><span class="line">            sum += num;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> diff = sum - target;</span><br><span class="line">        <span class="keyword">if</span> (diff &lt; <span class="number">0</span> || diff % <span class="number">2</span> != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> neg = diff / <span class="number">2</span>;</span><br><span class="line">        <span class="type">int</span>[] dp = <span class="keyword">new</span> <span class="type">int</span>[neg + <span class="number">1</span>];</span><br><span class="line">        dp[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> num : nums) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = neg; j &gt;= num; j--) &#123;</span><br><span class="line">                dp[j] += dp[j - num];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[neg];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s3.bmp.ovh/imgs/2025/10/17/8ad0d9723cb46504.png"></p><p>由于 dp 的每一行的计算只和上一行有关，因此可以使用滚动数组的方式，去掉 dp 的第一个维度，将空间复杂度优化到 O(neg)。</p><p>实现时，内层循环需采用倒序遍历的方式，这种方式保证转移来的是 dp[i−1][] 中的元素值。</p><h4 id="1和0"><a href="#1和0" class="headerlink" title="1和0"></a>1和0</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">findMaxForm</span><span class="params">(vector&lt;string&gt;&amp; strs, <span class="type">int</span> m, <span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">        vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">dp</span>(m<span class="number">+1</span>,<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(n<span class="number">+1</span>)); </span><br><span class="line">        <span class="keyword">for</span> (string s:strs)&#123;</span><br><span class="line">            <span class="type">int</span> zero=<span class="number">0</span>,one=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">char</span> c:s)&#123;</span><br><span class="line">                <span class="keyword">if</span> (c==<span class="string">&#x27;0&#x27;</span>) zero++;</span><br><span class="line">                <span class="keyword">else</span> one++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i=m;i&gt;=zero;i--)&#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> j=n;j&gt;=one;j--)&#123;</span><br><span class="line">                    dp[i][j]=<span class="built_in">max</span>(dp[i][j],dp[i-zero][j-one]<span class="number">+1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[m][n];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="完全背包理论"><a href="#完全背包理论" class="headerlink" title="完全背包理论"></a>完全背包理论</h3><p><img src="https://s3.bmp.ovh/imgs/2025/10/18/1fa5f5df155c4a42.png"></p><p>完全背包由于每种物品的状态不止有两种，所以递推公式与01背包存在着一些不同。</p><p>当然，在初始化上也存在着不同，由于完全背包中可以选择的物品存在着无限多个，因此它的初始化应该是</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; weight.<span class="built_in">size</span>(); i++) &#123;  <span class="comment">// 当然这一步，如果把dp数组预先初始化为0了，这一步就可以省略，但很多同学应该没有想清楚这一点。</span></span><br><span class="line">    dp[i][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 正序遍历，如果能放下就一直装物品0</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = weight[<span class="number">0</span>]; j &lt;= bagWeight; j++)</span><br><span class="line">    dp[<span class="number">0</span>][j] = dp[<span class="number">0</span>][j - weight[<span class="number">0</span>]] + value[<span class="number">0</span>];</span><br></pre></td></tr></table></figure><h4 id="例题（模板）"><a href="#例题（模板）" class="headerlink" title="例题（模板）"></a>例题（模板）</h4><p><img src="https://s3.bmp.ovh/imgs/2025/10/18/b66f26eeeb1481f7.png"></p><p>题解</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,v;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;v;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">weight</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">value</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;weight[i]&gt;&gt;value[i];</span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">dp</span>(n,<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(v<span class="number">+1</span>,<span class="number">0</span>));</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        dp[i][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=weight[<span class="number">0</span>];i&lt;=v;i++)&#123;</span><br><span class="line">        dp[<span class="number">0</span>][i]=dp[<span class="number">0</span>][i-weight[<span class="number">0</span>]]+value[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>;j&lt;=v;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (j&lt;weight[i])&#123;</span><br><span class="line">                dp[i][j]=dp[i<span class="number">-1</span>][j];</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                dp[i][j]=<span class="built_in">max</span>(dp[i<span class="number">-1</span>][j],dp[i][j-weight[i]]+value[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;dp[n<span class="number">-1</span>][v]&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个就是完完全全的完全背包模板题了，没有一点绕弯子的那种</p><h4 id="零钱兑换"><a href="#零钱兑换" class="headerlink" title="零钱兑换"></a>零钱兑换</h4><p><img src="https://s3.bmp.ovh/imgs/2025/10/18/e4780fb6e99f8d37.png"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">change</span><span class="params">(<span class="type">int</span> amount, vector&lt;<span class="type">int</span>&gt;&amp; coins)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> bagSize = amount;</span><br><span class="line"></span><br><span class="line">        vector&lt;vector&lt;<span class="type">uint64_t</span>&gt;&gt; <span class="built_in">dp</span>(coins.<span class="built_in">size</span>(), <span class="built_in">vector</span>&lt;<span class="type">uint64_t</span>&gt;(bagSize + <span class="number">1</span>, <span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始化最上行</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= bagSize; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (j % coins[<span class="number">0</span>] == <span class="number">0</span>) dp[<span class="number">0</span>][j] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 初始化最左列</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; coins.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">            dp[i][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 以下遍历顺序行列可以颠倒</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; coins.<span class="built_in">size</span>(); i++) &#123; <span class="comment">// 行，遍历物品</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= bagSize; j++) &#123; <span class="comment">// 列，遍历背包</span></span><br><span class="line">                <span class="keyword">if</span> (coins[i] &gt; j) dp[i][j] = dp[i - <span class="number">1</span>][j]; </span><br><span class="line">                <span class="keyword">else</span> dp[i][j] = dp[i - <span class="number">1</span>][j] +  dp[i][j - coins[i]];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[coins.<span class="built_in">size</span>() - <span class="number">1</span>][bagSize];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>一维dp写法</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">change</span><span class="params">(<span class="type">int</span> amount, vector&lt;<span class="type">int</span>&gt;&amp; coins)</span> </span>&#123;</span><br><span class="line">        <span class="function">vector&lt;<span class="type">uint64_t</span>&gt; <span class="title">dp</span><span class="params">(amount + <span class="number">1</span>, <span class="number">0</span>)</span></span>; <span class="comment">// 防止相加数据超int</span></span><br><span class="line">        dp[<span class="number">0</span>] = <span class="number">1</span>; <span class="comment">// 只有一种方式达到0</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; coins.<span class="built_in">size</span>(); i++) &#123; <span class="comment">// 遍历物品</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = coins[i]; j &lt;= amount; j++) &#123; <span class="comment">// 遍历背包</span></span><br><span class="line">                dp[j] += dp[j - coins[i]];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[amount]; <span class="comment">// 返回组合数</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="组合总和（变式2）"><a href="#组合总和（变式2）" class="headerlink" title="组合总和（变式2）"></a>组合总和（变式2）</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">combinationSum4</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> target)</span> </span>&#123;</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">dp</span><span class="params">(target + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">        dp[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= target; i++) &#123; <span class="comment">// 遍历背包</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; nums.<span class="built_in">size</span>(); j++) &#123; <span class="comment">// 遍历物品</span></span><br><span class="line">                <span class="keyword">if</span> (i - nums[j] &gt;= <span class="number">0</span> &amp;&amp; dp[i] &lt;= INT_MAX - dp[i - nums[j]]) &#123;</span><br><span class="line">                    dp[i] += dp[i - nums[j]];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[target];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><img src="https://s3.bmp.ovh/imgs/2025/10/18/dad5b012e2e89963.png"></p><p><strong>如果求组合数就是外层for循环遍历物品，内层for遍历背包</strong>。</p><p><strong>如果求排列数就是外层for遍历背包，内层for循环遍历物品</strong>。</p><p><em><strong>简单来说就是：顺序有关就要先遍历背包，以防出问题，无关就先遍历物品。</strong></em></p><h4 id="01背包与完全背包在写法上的差别"><a href="#01背包与完全背包在写法上的差别" class="headerlink" title="01背包与完全背包在写法上的差别"></a>01背包与完全背包在写法上的差别</h4><blockquote><p>非常好的问题👏，这个是背包问题的核心区分点之一。<br> 我们来系统地讲清楚 <strong>01 背包</strong> 和 <strong>完全背包</strong> 在「一维 DP」时的<strong>递推公式差别</strong>。</p><hr><h2 id="🧩-一、共同点（大框架相同）"><a href="#🧩-一、共同点（大框架相同）" class="headerlink" title="🧩 一、共同点（大框架相同）"></a>🧩 一、共同点（大框架相同）</h2><p>无论是 01 背包还是 完全背包，它们都要解决这样的问题：</p><blockquote><p>在容量为 <code>V</code> 的背包中，放若干个物品，使得价值最大。</p></blockquote><p>每个物品 <code>i</code> 有：</p><ul><li>重量（或体积）<code>w[i]</code></li><li>价值 <code>v[i]</code></li></ul><p>定义一维数组：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dp[j] = 容量为 j 时的最大价值</span><br></pre></td></tr></table></figure><hr><h2 id="🧱-二、01-背包公式（每件只能选一次）"><a href="#🧱-二、01-背包公式（每件只能选一次）" class="headerlink" title="🧱 二、01 背包公式（每件只能选一次）"></a>🧱 二、01 背包公式（每件只能选一次）</h2><h3 id="状态转移方程："><a href="#状态转移方程：" class="headerlink" title="状态转移方程："></a>状态转移方程：</h3><p>[<br> dp[j] &#x3D; \max(dp[j], dp[j - w[i]] + v[i])<br> ]</p><h3 id="🔁-遍历顺序（从右往左）："><a href="#🔁-遍历顺序（从右往左）：" class="headerlink" title="🔁 遍历顺序（从右往左）："></a>🔁 遍历顺序（<strong>从右往左</strong>）：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;         <span class="comment">// 枚举物品</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = V; j &gt;= w[i]; j--) &#123; <span class="comment">// 从大到小</span></span><br><span class="line">        dp[j] = <span class="built_in">max</span>(dp[j], dp[j - w[i]] + v[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="💡-为什么倒序？"><a href="#💡-为什么倒序？" class="headerlink" title="💡 为什么倒序？"></a>💡 为什么倒序？</h4><p>防止同一个物品被重复使用。<br> 如果从左到右更新，那么在处理第 i 个物品时，<br> <code>dp[j - w[i]]</code> 可能已经被第 i 个物品更新过，就会出现「重复选」的错误。</p><hr><h2 id="🌀-三、完全背包公式（每件可以无限次选）"><a href="#🌀-三、完全背包公式（每件可以无限次选）" class="headerlink" title="🌀 三、完全背包公式（每件可以无限次选）"></a>🌀 三、完全背包公式（每件可以无限次选）</h2><h3 id="状态转移方程：-1"><a href="#状态转移方程：-1" class="headerlink" title="状态转移方程："></a>状态转移方程：</h3><p>[<br> dp[j] &#x3D; \max(dp[j], dp[j - w[i]] + v[i])<br> ]</p><p>👉 <strong>看起来公式一样</strong>，但遍历顺序不同！</p><h3 id="🔁-遍历顺序（从左往右）："><a href="#🔁-遍历顺序（从左往右）：" class="headerlink" title="🔁 遍历顺序（从左往右）："></a>🔁 遍历顺序（<strong>从左往右</strong>）：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;         <span class="comment">// 枚举物品</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = w[i]; j &lt;= V; j++) &#123; <span class="comment">// 从小到大</span></span><br><span class="line">        dp[j] = <span class="built_in">max</span>(dp[j], dp[j - w[i]] + v[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="💡-为什么正序？"><a href="#💡-为什么正序？" class="headerlink" title="💡 为什么正序？"></a>💡 为什么正序？</h4><p>因为完全背包允许同一个物品被多次使用。<br> 当你从左往右更新时，<code>dp[j - w[i]]</code> 是<strong>本轮</strong>更新后的值，<br> 代表“可以继续选当前物品 i”。</p><hr><h2 id="🎯-四、对比总结表"><a href="#🎯-四、对比总结表" class="headerlink" title="🎯 四、对比总结表"></a>🎯 四、对比总结表</h2><table><thead><tr><th>项目</th><th>01 背包</th><th>完全背包</th></tr></thead><tbody><tr><td>是否可重复</td><td>❌ 每个物品只能选一次</td><td>✅ 可重复选</td></tr><tr><td>状态方程</td><td><code>dp[j] = max(dp[j], dp[j - w[i]] + v[i])</code></td><td>同上</td></tr><tr><td>遍历顺序</td><td><code>for j = V → w[i]</code>（倒序）</td><td><code>for j = w[i] → V</code>（正序）</td></tr><tr><td>原因</td><td>防止重复使用物品</td><td>允许重复使用物品</td></tr><tr><td>二维版对应转移</td><td><code>dp[i][j] = max(dp[i-1][j], dp[i-1][j-w[i]] + v[i])</code></td><td><code>dp[i][j] = max(dp[i-1][j], dp[i][j-w[i]] + v[i])</code></td></tr></tbody></table><hr><h2 id="🧠-五、直观理解图"><a href="#🧠-五、直观理解图" class="headerlink" title="🧠 五、直观理解图"></a>🧠 五、直观理解图</h2><p>假设物品重 2，价值 3，容量 6。</p><table><thead><tr><th>过程</th><th>说明</th></tr></thead><tbody><tr><td><strong>01 背包倒序</strong></td><td>计算 dp[6] 时不会用到刚更新的 dp[4]（防止重复选）</td></tr><tr><td><strong>完全背包正序</strong></td><td>计算 dp[6] 时会用到刚更新的 dp[4]（表示可以再选一次）</td></tr></tbody></table><hr><h2 id="🧩-六、举个例子对比"><a href="#🧩-六、举个例子对比" class="headerlink" title="🧩 六、举个例子对比"></a>🧩 六、举个例子对比</h2><p>假设：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">重量 w = [1, 3, 4]</span><br><span class="line">价值 v = [15, 20, 30]</span><br><span class="line">容量 V = 4</span><br></pre></td></tr></table></figure><h3 id="01-背包结果："><a href="#01-背包结果：" class="headerlink" title="01 背包结果："></a>01 背包结果：</h3><ul><li>最优选法：选 4 重量物品 → 价值 30</li></ul><h3 id="完全背包结果："><a href="#完全背包结果：" class="headerlink" title="完全背包结果："></a>完全背包结果：</h3><ul><li>最优选法：选 4 个 1 重量物品 → 价值 60</li></ul><hr><h2 id="✅-总结一句话记忆"><a href="#✅-总结一句话记忆" class="headerlink" title="✅ 总结一句话记忆"></a>✅ 总结一句话记忆</h2><table><thead><tr><th>名称</th><th>一维遍历方向</th><th>思想记忆</th></tr></thead><tbody><tr><td><strong>01 背包</strong></td><td>从右往左</td><td>防止重复选</td></tr><tr><td><strong>完全背包</strong></td><td>从左往右</td><td>允许重复选</td></tr></tbody></table><hr><p>如果你想，我可以帮你画出一个具体 dp 表格（例如容量&#x3D;5, w&#x3D;[2,3], v&#x3D;[3,4]），<br> 并演示在正序 vs 倒序时 dp 数组是如何变化的。<br> 要我画那个表吗？</p></blockquote><h4 id="爬楼梯-1"><a href="#爬楼梯-1" class="headerlink" title="爬楼梯"></a>爬楼梯</h4><p><img src="https://s3.bmp.ovh/imgs/2025/10/18/90c9fdbfb3f9e1a8.png"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">dp</span><span class="params">(n<span class="number">+1</span>,<span class="number">0</span>)</span></span>;</span><br><span class="line">    dp[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (i&gt;=j)&#123;</span><br><span class="line">                dp[i]+=dp[i-j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;dp[n]&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="零钱兑换（变）"><a href="#零钱兑换（变）" class="headerlink" title="零钱兑换（变）"></a>零钱兑换（变）</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">coinChange</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; coins, <span class="type">int</span> amount)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n=coins.<span class="built_in">size</span>();</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">dp</span><span class="params">(amount<span class="number">+1</span>,INT_MAX)</span></span>;</span><br><span class="line">        dp[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j=coins[i];j&lt;=amount;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (dp[j-coins[i]]!=INT_MAX)&#123;</span><br><span class="line">                    dp[j]=<span class="built_in">min</span>(dp[j],dp[j-coins[i]]<span class="number">+1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (dp[amount]==INT_MAX) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">return</span> dp[amount];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="完全平方数"><a href="#完全平方数" class="headerlink" title="完全平方数"></a>完全平方数</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">numSquares</span><span class="params">(<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">        vector&lt;<span class="type">int</span>&gt; a;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i*i&lt;=n;i++)&#123;</span><br><span class="line">            a.<span class="built_in">push_back</span>(i*i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> m=a.<span class="built_in">size</span>();</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">dp</span><span class="params">(n<span class="number">+1</span>,INT_MAX)</span></span>;</span><br><span class="line">        dp[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j=a[i];j&lt;=n;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (dp[j-a[i]]!=INT_MAX)&#123;</span><br><span class="line">                    dp[j]=<span class="built_in">min</span>(dp[j],dp[j-a[i]]<span class="number">+1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[n];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="单词拆分"><a href="#单词拆分" class="headerlink" title="单词拆分"></a>单词拆分</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">wordBreak</span><span class="params">(string s, vector&lt;string&gt;&amp; wordDict)</span> </span>&#123;</span><br><span class="line">        <span class="function">unordered_set&lt;string&gt; <span class="title">wordSet</span><span class="params">(wordDict.begin(), wordDict.end())</span></span>;</span><br><span class="line">        <span class="function">vector&lt;<span class="type">bool</span>&gt; <span class="title">dp</span><span class="params">(s.size() + <span class="number">1</span>, <span class="literal">false</span>)</span></span>;</span><br><span class="line">        dp[<span class="number">0</span>] = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= s.<span class="built_in">size</span>(); i++) &#123;   <span class="comment">// 遍历背包</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; i; j++) &#123;       <span class="comment">// 遍历物品</span></span><br><span class="line">                string word = s.<span class="built_in">substr</span>(j, i - j); <span class="comment">//substr(起始位置，截取的个数)</span></span><br><span class="line">                <span class="keyword">if</span> (wordSet.<span class="built_in">find</span>(word) != wordSet.<span class="built_in">end</span>() &amp;&amp; dp[j]) &#123;</span><br><span class="line">                    dp[i] = <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[s.<span class="built_in">size</span>()];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="多重背包理论"><a href="#多重背包理论" class="headerlink" title="多重背包理论"></a>多重背包理论</h3><p><img src="https://s3.bmp.ovh/imgs/2025/10/18/8a345f9182f1b009.png"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> bagWeight,n;</span><br><span class="line">    cin &gt;&gt; bagWeight &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">weight</span><span class="params">(n, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">value</span><span class="params">(n, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">nums</span><span class="params">(n, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) cin &gt;&gt; weight[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) cin &gt;&gt; value[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) cin &gt;&gt; nums[i];</span><br><span class="line"></span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">dp</span><span class="params">(bagWeight + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123; <span class="comment">// 遍历物品</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = bagWeight; j &gt;= weight[i]; j--) &#123; <span class="comment">// 遍历背包容量</span></span><br><span class="line">            <span class="comment">// 以上为01背包，然后加一个遍历个数</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">1</span>; k &lt;= nums[i] &amp;&amp; (j - k * weight[i]) &gt;= <span class="number">0</span>; k++) &#123; <span class="comment">// 遍历个数</span></span><br><span class="line">                dp[j] = <span class="built_in">max</span>(dp[j], dp[j - k * weight[i]] + k * value[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; dp[bagWeight] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>多重背包事实上就是一种01背包的变体，只要用上面的方法将每个物品全部展开就行，然后就可以当01背包处理了。</p><h3 id="背包理论总结篇"><a href="#背包理论总结篇" class="headerlink" title="背包理论总结篇"></a>背包理论总结篇</h3><p><img src="https://s3.bmp.ovh/imgs/2025/10/18/db35ad9e1bd76fcc.png"></p><p><img src="/.com//Users\asus\AppData\Roaming\Typora\typora-user-images\image-20251018180734325.png" alt="image-20251018180734325"></p><p><img src="https://s3.bmp.ovh/imgs/2025/10/18/40b9a39892d761ef.png"></p><h3 id="相邻约束DP"><a href="#相邻约束DP" class="headerlink" title="相邻约束DP"></a>相邻约束DP</h3><h4 id="打家劫舍"><a href="#打家劫舍" class="headerlink" title="打家劫舍"></a>打家劫舍</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">rob</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n=nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span> (n==<span class="number">1</span>) <span class="keyword">return</span> nums[<span class="number">0</span>];</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">dp</span><span class="params">(n,<span class="number">0</span>)</span></span>;</span><br><span class="line">        dp[<span class="number">0</span>]=nums[<span class="number">0</span>];</span><br><span class="line">        dp[<span class="number">1</span>]=<span class="built_in">max</span>(nums[<span class="number">0</span>],nums[<span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">2</span>;i&lt;n;i++)&#123;</span><br><span class="line">            dp[i]=<span class="built_in">max</span>(dp[i<span class="number">-1</span>],dp[i<span class="number">-2</span>]+nums[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[n<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>这个题型叫做相邻约束DP，就是相邻数不能选。</p><h4 id="打家劫舍（变式二）"><a href="#打家劫舍（变式二）" class="headerlink" title="打家劫舍（变式二）"></a>打家劫舍（变式二）</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">rob</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n=nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span> (n==<span class="number">1</span>) <span class="keyword">return</span> nums[<span class="number">0</span>];</span><br><span class="line">        <span class="type">int</span> res1=<span class="built_in">robans</span>(nums,<span class="number">1</span>,n<span class="number">-1</span>);</span><br><span class="line">        <span class="type">int</span> res2=<span class="built_in">robans</span>(nums,<span class="number">0</span>,n<span class="number">-2</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">max</span>(res1,res2);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">robans</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;nums,<span class="type">int</span> start,<span class="type">int</span> end)</span></span>&#123;</span><br><span class="line">        <span class="type">int</span> n=nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span> (start==end) <span class="keyword">return</span> nums[start];</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">dp</span><span class="params">(n,<span class="number">0</span>)</span></span>;</span><br><span class="line">        dp[start]=nums[start];</span><br><span class="line">        dp[start<span class="number">+1</span>]=<span class="built_in">max</span>(nums[start],nums[start<span class="number">+1</span>]);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=start<span class="number">+2</span>;i&lt;=end;i++)&#123;</span><br><span class="line">            dp[i]=<span class="built_in">max</span>(dp[i<span class="number">-1</span>],dp[i<span class="number">-2</span>]+nums[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[end];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>事实上也就只有两种情况，只偷头&#x2F;只偷尾，至于只偷中间，这个情况是不可能的，不会获得最佳答案。</p><h3 id="状态机DP"><a href="#状态机DP" class="headerlink" title="状态机DP"></a>状态机DP</h3><h4 id="买卖股票的最佳时机"><a href="#买卖股票的最佳时机" class="headerlink" title="买卖股票的最佳时机"></a>买卖股票的最佳时机</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; prices)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> len = prices.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span> (len == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">dp</span>(len, <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(<span class="number">2</span>));</span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">0</span>] -= prices[<span class="number">0</span>];</span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; len; i++) &#123;</span><br><span class="line">            dp[i][<span class="number">0</span>] = <span class="built_in">max</span>(dp[i - <span class="number">1</span>][<span class="number">0</span>], -prices[i]);</span><br><span class="line">            dp[i][<span class="number">1</span>] = <span class="built_in">max</span>(dp[i - <span class="number">1</span>][<span class="number">1</span>], prices[i] + dp[i - <span class="number">1</span>][<span class="number">0</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[len - <span class="number">1</span>][<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;<span class="comment">//DP写法</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; prices)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n=prices.<span class="built_in">size</span>();</span><br><span class="line">        <span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> minn=<span class="number">100010</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            minn=<span class="built_in">min</span>(minn,prices[i]);</span><br><span class="line">            res=<span class="built_in">max</span>(res,prices[i]-minn);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;<span class="comment">//贪心写法</span></span><br></pre></td></tr></table></figure><p>我觉得这题贪心是最优解有没有懂的（</p><p>如果第i天持有股票即dp[i][0]， 那么可以由两个状态推出来</p><ul><li>第i-1天就持有股票，那么就保持现状，所得现金就是昨天持有股票的所得现金 即：dp[i - 1][0]</li><li>第i天买入股票，所得现金就是买入今天的股票后所得现金即：-prices[i]</li></ul><p>那么dp[i][0]应该选所得现金最大的，所以dp[i][0] &#x3D; max(dp[i - 1][0], -prices[i]);</p><p>如果第i天不持有股票即dp[i][1]， 也可以由两个状态推出来</p><ul><li>第i-1天就不持有股票，那么就保持现状，所得现金就是昨天不持有股票的所得现金 即：dp[i - 1][1]</li><li>第i天卖出股票，所得现金就是按照今天股票价格卖出后所得现金即：prices[i] + dp[i - 1][0]</li></ul><p>同样dp[i][1]取最大的，dp[i][1] &#x3D; max(dp[i - 1][1], prices[i] + dp[i - 1][0]);</p><p>这样递推公式我们就分析完了</p><h4 id="买卖股票的最佳时机（变式1）"><a href="#买卖股票的最佳时机（变式1）" class="headerlink" title="买卖股票的最佳时机（变式1）"></a>买卖股票的最佳时机（变式1）</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; prices)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n=prices.<span class="built_in">size</span>();</span><br><span class="line">        vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">dp</span>(n,<span class="built_in">vector</span>(<span class="number">2</span>,<span class="number">0</span>));</span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">0</span>]=-prices[<span class="number">0</span>];</span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">            dp[i][<span class="number">0</span>]=<span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">0</span>],dp[i<span class="number">-1</span>][<span class="number">1</span>]-prices[i]);</span><br><span class="line">            dp[i][<span class="number">1</span>]=<span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">1</span>],dp[i<span class="number">-1</span>][<span class="number">0</span>]+prices[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[n<span class="number">-1</span>][<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>利用二维dp定义了两种状态，0为持股，1为不持股，利用上述的递推公式就可以写出来</p><p>但是，不如贪心。</p><h4 id="买卖股票的最佳时机（变式2）"><a href="#买卖股票的最佳时机（变式2）" class="headerlink" title="买卖股票的最佳时机（变式2）"></a>买卖股票的最佳时机（变式2）</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; prices)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n=prices.<span class="built_in">size</span>();</span><br><span class="line">        vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">dp</span>(n,<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(<span class="number">5</span>,<span class="number">0</span>));</span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">1</span>]=-prices[<span class="number">0</span>];</span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">2</span>]=<span class="number">0</span>;</span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">3</span>]=-prices[<span class="number">0</span>];</span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">4</span>]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">            dp[i][<span class="number">0</span>]=dp[i<span class="number">-1</span>][<span class="number">0</span>];</span><br><span class="line">            dp[i][<span class="number">1</span>]=<span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">1</span>],dp[i<span class="number">-1</span>][<span class="number">0</span>]-prices[i]);</span><br><span class="line">            dp[i][<span class="number">2</span>]=<span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">2</span>],dp[i<span class="number">-1</span>][<span class="number">1</span>]+prices[i]);</span><br><span class="line">            dp[i][<span class="number">3</span>]=<span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">3</span>],dp[i<span class="number">-1</span>][<span class="number">2</span>]-prices[i]);</span><br><span class="line">            dp[i][<span class="number">4</span>]=<span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">4</span>],dp[i<span class="number">-1</span>][<span class="number">3</span>]+prices[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[n<span class="number">-1</span>][<span class="number">4</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>和上题做法差不多。</p><h4 id="买卖股票的最佳时机（最终变式）"><a href="#买卖股票的最佳时机（最终变式）" class="headerlink" title="买卖股票的最佳时机（最终变式）"></a>买卖股票的最佳时机（最终变式）</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">maxProfit</span><span class="params">(<span class="type">int</span> k, vector&lt;<span class="type">int</span>&gt;&amp; prices)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n=prices.<span class="built_in">size</span>();</span><br><span class="line">        vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">dp</span>(n,<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(<span class="number">2</span>*k<span class="number">+1</span>,<span class="number">0</span>));</span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">2</span>*k;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (i%<span class="number">2</span>==<span class="number">1</span>)&#123;</span><br><span class="line">                dp[<span class="number">0</span>][i]=-prices[<span class="number">0</span>];</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                dp[<span class="number">0</span>][i]=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>;j&lt;=<span class="number">2</span>*k;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (j==<span class="number">0</span>)&#123;</span><br><span class="line">                    dp[i][j]=dp[i<span class="number">-1</span>][j];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (j%<span class="number">2</span>==<span class="number">1</span>)&#123;</span><br><span class="line">                    dp[i][j]=<span class="built_in">max</span>(dp[i<span class="number">-1</span>][j],dp[i<span class="number">-1</span>][j<span class="number">-1</span>]-prices[i]);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    dp[i][j]=<span class="built_in">max</span>(dp[i<span class="number">-1</span>][j],dp[i<span class="number">-1</span>][j<span class="number">-1</span>]+prices[i]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[n<span class="number">-1</span>][<span class="number">2</span>*k];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>最公式</p><h4 id="买卖股票的最佳时机（含冷静期）"><a href="#买卖股票的最佳时机（含冷静期）" class="headerlink" title="买卖股票的最佳时机（含冷静期）"></a>买卖股票的最佳时机（含冷静期）</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; prices)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n = prices.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">dp</span>(n, <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(<span class="number">4</span>, <span class="number">0</span>));</span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">0</span>] -= prices[<span class="number">0</span>]; <span class="comment">// 持股票</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">            dp[i][<span class="number">0</span>] = <span class="built_in">max</span>(dp[i - <span class="number">1</span>][<span class="number">0</span>], <span class="built_in">max</span>(dp[i - <span class="number">1</span>][<span class="number">3</span>] - prices[i], dp[i - <span class="number">1</span>][<span class="number">1</span>] - prices[i]));</span><br><span class="line">            dp[i][<span class="number">1</span>] = <span class="built_in">max</span>(dp[i - <span class="number">1</span>][<span class="number">1</span>], dp[i - <span class="number">1</span>][<span class="number">3</span>]);</span><br><span class="line">            dp[i][<span class="number">2</span>] = dp[i - <span class="number">1</span>][<span class="number">0</span>] + prices[i];</span><br><span class="line">            dp[i][<span class="number">3</span>] = dp[i - <span class="number">1</span>][<span class="number">2</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">max</span>(dp[n - <span class="number">1</span>][<span class="number">3</span>], <span class="built_in">max</span>(dp[n - <span class="number">1</span>][<span class="number">1</span>], dp[n - <span class="number">1</span>][<span class="number">2</span>]));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>状态机DP的套路很明显了</p><p>第一步：列举所有状态并且定义所有状态</p><p>第二步：明确状态转移的方式</p><p>第三步：确定初始状态</p><p>第四步：开始面向答案编程（ </p><h4 id="买卖股票的最佳时机（含手续费）"><a href="#买卖股票的最佳时机（含手续费）" class="headerlink" title="买卖股票的最佳时机（含手续费）"></a>买卖股票的最佳时机（含手续费）</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; prices, <span class="type">int</span> fee)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n=prices.<span class="built_in">size</span>();</span><br><span class="line">        vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">dp</span>(n,<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(<span class="number">2</span>,<span class="number">0</span>));</span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">0</span>]=-prices[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">            dp[i][<span class="number">0</span>]=<span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">0</span>],dp[i<span class="number">-1</span>][<span class="number">1</span>]-prices[i]);</span><br><span class="line">            dp[i][<span class="number">1</span>]=<span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">1</span>],dp[i<span class="number">-1</span>][<span class="number">0</span>]+prices[i]-fee);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[n<span class="number">-1</span>][<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="区间序列类DP"><a href="#区间序列类DP" class="headerlink" title="区间序列类DP"></a>区间序列类DP</h3><h4 id="最长递增子序列"><a href="#最长递增子序列" class="headerlink" title="最长递增子序列"></a>最长递增子序列</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">lengthOfLIS</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n=nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">dp</span><span class="params">(n,<span class="number">1</span>)</span></span>;</span><br><span class="line">        <span class="type">int</span> maxx=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>;j&lt;i;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (nums[i]&gt;nums[j])&#123;</span><br><span class="line">                    dp[i]=<span class="built_in">max</span>(dp[i],dp[j]<span class="number">+1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            maxx=<span class="built_in">max</span>(dp[i],maxx);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> maxx;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="最长连续递增序列"><a href="#最长连续递增序列" class="headerlink" title="最长连续递增序列"></a>最长连续递增序列</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">findLengthOfLCIS</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n=nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">dp</span><span class="params">(n,<span class="number">1</span>)</span></span>;</span><br><span class="line">        <span class="type">int</span> ans=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (nums[i]&gt;nums[i<span class="number">-1</span>])&#123;</span><br><span class="line">                dp[i]=dp[i<span class="number">-1</span>]<span class="number">+1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            ans=<span class="built_in">max</span>(ans,dp[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 程序设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++,算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PTA乙级各题答案</title>
      <link href="/2025/10/05/PTA%E4%B9%99%E7%BA%A7%E5%90%84%E9%A2%98%E7%AD%94%E6%A1%88/"/>
      <url>/2025/10/05/PTA%E4%B9%99%E7%BA%A7%E5%90%84%E9%A2%98%E7%AD%94%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<h1 id="PTA乙级各题答案"><a href="#PTA乙级各题答案" class="headerlink" title="PTA乙级各题答案"></a>PTA乙级各题答案</h1><h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h2><p>这份答案是笔者在2025年备考期间自行整理的答案，绝大部分为笔者亲自书写代码， 部分可能会借鉴AI思路。</p><p>不排除PAT官方后续修改测试数据而导致答案出现错误的情况，如有发现可向我反馈（反馈方式已经贴在了README文件中）</p><p>有不懂的可以在转专业大群找到我并询问（<del>如果我还记得我这串代码写了什么</del>）</p><p>编译语言为C++（g++），其他编译语言如C不保证能够通过（绝对不保证能通过）。</p><p>因笔者水平有限，答案并不一定为时间空间复杂度最优解（<del>其实是大部分不是</del>），只保证可AC，oi大佬轻喷OTZ</p><p>​                                                                                                                                                                                                     ——By Schariac125</p><h2 id="正文："><a href="#正文：" class="headerlink" title="正文："></a>正文：</h2><h2 id="1001"><a href="#1001" class="headerlink" title="1001"></a>1001</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (n==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (n%<span class="number">2</span>==<span class="number">1</span>)&#123;</span><br><span class="line">            n=(<span class="number">3</span>*n<span class="number">+1</span>)/<span class="number">2</span>;</span><br><span class="line">            ans++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (n%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">            n/=<span class="number">2</span>;</span><br><span class="line">            ans++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1002"><a href="#1002" class="headerlink" title="1002"></a>1002</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">string num;</span><br><span class="line"><span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">string b[<span class="number">15</span>] = &#123;<span class="string">&quot;ling&quot;</span>,<span class="string">&quot;yi&quot;</span>,<span class="string">&quot;er&quot;</span>,<span class="string">&quot;san&quot;</span>,<span class="string">&quot;si&quot;</span>,<span class="string">&quot;wu&quot;</span>,<span class="string">&quot;liu&quot;</span>,<span class="string">&quot;qi&quot;</span>,<span class="string">&quot;ba&quot;</span>,<span class="string">&quot;jiu&quot;</span>&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">getline</span>(cin,num);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;num.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        sum+=(num[i]-<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;string&gt; ans;</span><br><span class="line">    <span class="keyword">while</span> (sum&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="type">int</span> temp=sum%<span class="number">10</span>;</span><br><span class="line">        ans.<span class="built_in">push_back</span>(b[temp]);</span><br><span class="line">        sum/=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=ans.<span class="built_in">size</span>()<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">        <span class="keyword">if</span> (i==<span class="number">0</span>)&#123;</span><br><span class="line">            cout&lt;&lt;ans[i];</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            cout&lt;&lt;ans[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//cout&lt;&lt;sum&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1003"><a href="#1003" class="headerlink" title="1003"></a>1003</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">checkPAT</span><span class="params">(<span class="type">const</span> string &amp;s)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 检查只包含 P A T</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">char</span> c : s) &#123;</span><br><span class="line">        <span class="keyword">if</span> (c != <span class="string">&#x27;P&#x27;</span> &amp;&amp; c != <span class="string">&#x27;A&#x27;</span> &amp;&amp; c != <span class="string">&#x27;T&#x27;</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> p = s.<span class="built_in">find</span>(<span class="string">&#x27;P&#x27;</span>);</span><br><span class="line">    <span class="type">int</span> t = s.<span class="built_in">find</span>(<span class="string">&#x27;T&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 必须有且仅有一个P和一个T 且P在T前</span></span><br><span class="line">    <span class="keyword">if</span> (p == string::npos || t == string::npos || p &gt;= t) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">count</span>(s.<span class="built_in">begin</span>(), s.<span class="built_in">end</span>(), <span class="string">&#x27;P&#x27;</span>) != <span class="number">1</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">count</span>(s.<span class="built_in">begin</span>(), s.<span class="built_in">end</span>(), <span class="string">&#x27;T&#x27;</span>) != <span class="number">1</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> x = p;                    <span class="comment">// P 左边的 A 数量</span></span><br><span class="line">    <span class="type">int</span> y = t - p - <span class="number">1</span>;            <span class="comment">// P 和 T 之间的 A 数量</span></span><br><span class="line">    <span class="type">int</span> z = s.<span class="built_in">length</span>() - t - <span class="number">1</span>;   <span class="comment">// T 右边的 A 数量</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (y == <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;     <span class="comment">// 中间必须至少有一个 A</span></span><br><span class="line">    <span class="keyword">return</span> z == x * y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">while</span> (n--) &#123;</span><br><span class="line">        string a;</span><br><span class="line">        cin &gt;&gt; a;</span><br><span class="line">        cout &lt;&lt; (<span class="built_in">checkPAT</span>(a) ? <span class="string">&quot;YES&quot;</span> : <span class="string">&quot;NO&quot;</span>) &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>题目误导性很强，建议仔细审题</p><h2 id="1004"><a href="#1004" class="headerlink" title="1004"></a>1004</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">stu</span>&#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">    string name;</span><br><span class="line">    string num;</span><br><span class="line">    <span class="type">double</span> gpa;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(stu a,stu b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.gpa&gt;b.gpa;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    vector&lt;stu&gt; add;</span><br><span class="line">    <span class="keyword">while</span> (n--)&#123;</span><br><span class="line">        stu l;</span><br><span class="line">        cin&gt;&gt;l.name&gt;&gt;l.num&gt;&gt;l.gpa;</span><br><span class="line">        add.<span class="built_in">push_back</span>(l);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(add.<span class="built_in">begin</span>(),add.<span class="built_in">end</span>(),cmp);</span><br><span class="line">    cout&lt;&lt;add[<span class="number">0</span>].name&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;add[<span class="number">0</span>].num&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;add[add.<span class="built_in">size</span>()<span class="number">-1</span>].name&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;add[add.<span class="built_in">size</span>()<span class="number">-1</span>].num&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1005"><a href="#1005" class="headerlink" title="1005"></a>1005</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,a;</span><br><span class="line"><span class="type">int</span> b[<span class="number">10005</span>];</span><br><span class="line"><span class="type">int</span> vis[<span class="number">10005</span>];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">biao</span><span class="params">(<span class="type">int</span> s)</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (s==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (s%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">            s/=<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span> (!b[s])&#123;</span><br><span class="line">                b[s]=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (s%<span class="number">2</span>==<span class="number">1</span>)&#123;</span><br><span class="line">            s=(<span class="number">3</span>*s<span class="number">+1</span>)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span> (!b[s])&#123;</span><br><span class="line">                b[s]=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span> (n--)&#123;</span><br><span class="line">        cin&gt;&gt;a;</span><br><span class="line">        vis[a]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (b[a]==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">biao</span>(a);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; ans;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">10005</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (b[i]==<span class="number">0</span>&amp;&amp;vis[i]==<span class="number">1</span>)&#123;</span><br><span class="line">            ans.<span class="built_in">push_back</span>(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(ans.<span class="built_in">begin</span>(),ans.<span class="built_in">end</span>(),<span class="built_in">greater</span>&lt;<span class="type">int</span>&gt;());</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;ans.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (i==ans.<span class="built_in">size</span>()<span class="number">-1</span>)&#123;</span><br><span class="line">            cout&lt;&lt;ans[i];</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            cout&lt;&lt;ans[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这东西前面几个测试点数据太弱了。</p><h2 id="1006"><a href="#1006" class="headerlink" title="1006"></a>1006</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="type">int</span> b=n/<span class="number">100</span>;</span><br><span class="line">    <span class="type">int</span> s=(n/<span class="number">10</span>)%<span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> g=n%<span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> r=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (b&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&#x27;B&#x27;</span>;</span><br><span class="line">        b--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (s&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&#x27;S&#x27;</span>;</span><br><span class="line">        s--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (g&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        cout&lt;&lt;r;</span><br><span class="line">        r++;</span><br><span class="line">        g--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1007"><a href="#1007" class="headerlink" title="1007"></a>1007</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">su</span><span class="params">(<span class="type">int</span> a)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a==<span class="number">2</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">2</span>;i*i&lt;=a;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (a%i==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; b;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">su</span>(i))&#123;</span><br><span class="line">            b.<span class="built_in">push_back</span>(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;b.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (b[i]-b[i<span class="number">-1</span>]==<span class="number">2</span>)&#123;</span><br><span class="line">            ans++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1008"><a href="#1008" class="headerlink" title="1008"></a>1008</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,m,x;</span><br><span class="line">deque&lt;<span class="type">int</span>&gt; d;<span class="comment">//双端队列</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;x;</span><br><span class="line">        d.<span class="built_in">push_back</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (m--)&#123;</span><br><span class="line">        <span class="type">int</span> r=d.<span class="built_in">back</span>();</span><br><span class="line">        d.<span class="built_in">pop_back</span>();</span><br><span class="line">        d.<span class="built_in">push_front</span>(r);    </span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; ans;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> it:d)&#123;</span><br><span class="line">        ans.<span class="built_in">push_back</span>(it);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;ans.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (i==ans.<span class="built_in">size</span>()<span class="number">-1</span>)&#123;</span><br><span class="line">            cout&lt;&lt;ans[i];</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            cout&lt;&lt;ans[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看到题目的第一反应就是双端队列了，STL是真的很好用。</p><h2 id="1009"><a href="#1009" class="headerlink" title="1009"></a>1009</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">string a;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">getline</span>(cin,a);</span><br><span class="line">    vector&lt;string&gt; ans;</span><br><span class="line">    string word;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">char</span> c:a)&#123;</span><br><span class="line">        <span class="keyword">if</span> (c==<span class="string">&#x27; &#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span> (!word.<span class="built_in">empty</span>())&#123;</span><br><span class="line">                ans.<span class="built_in">push_back</span>(word);</span><br><span class="line">                word.<span class="built_in">clear</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            word+=c;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!word.<span class="built_in">empty</span>())&#123;</span><br><span class="line">        ans.<span class="built_in">push_back</span>(word);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=ans.<span class="built_in">size</span>()<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">        <span class="keyword">if</span> (i==<span class="number">0</span>)&#123;</span><br><span class="line">            cout&lt;&lt;ans[i];</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            cout&lt;&lt;ans[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重点在于把每个单词按空格分割出来</p><h2 id="1010"><a href="#1010" class="headerlink" title="1010"></a>1010</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> a, b;</span><br><span class="line">    <span class="type">bool</span> hasOutput = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (cin &gt;&gt; a &gt;&gt; b) &#123;</span><br><span class="line">        <span class="keyword">if</span> (b != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (hasOutput) cout &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">            cout &lt;&lt; a * b &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; b - <span class="number">1</span>;</span><br><span class="line">            hasOutput = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!hasOutput) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;0 0&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1011"><a href="#1011" class="headerlink" title="1011"></a>1011</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line"><span class="type">int</span> a,b,c;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="type">int</span> h=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (t--)&#123;</span><br><span class="line">        cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;</span><br><span class="line">        <span class="keyword">if</span> (a+b&gt;c)&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;Case #&quot;</span>&lt;&lt;h&lt;&lt;<span class="string">&quot;: true&quot;</span>&lt;&lt;endl;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;Case #&quot;</span>&lt;&lt;h&lt;&lt;<span class="string">&quot;: false&quot;</span>&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">        h++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1012"><a href="#1012" class="headerlink" title="1012"></a>1012</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,x;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; ans1,ans2,ans3,ans4,ans5;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        cin&gt;&gt;x;</span><br><span class="line">        <span class="keyword">if</span> (x%<span class="number">5</span>==<span class="number">0</span>&amp;&amp;x%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">            ans<span class="number">1.</span><span class="built_in">push_back</span>(x);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(x%<span class="number">5</span>==<span class="number">1</span>)&#123;</span><br><span class="line">            ans<span class="number">2.</span><span class="built_in">push_back</span>(x);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(x%<span class="number">5</span>==<span class="number">2</span>)&#123;</span><br><span class="line">            ans<span class="number">3.</span><span class="built_in">push_back</span>(x);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(x%<span class="number">5</span>==<span class="number">3</span>)&#123;</span><br><span class="line">            ans<span class="number">4.</span><span class="built_in">push_back</span>(x);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(x%<span class="number">5</span>==<span class="number">4</span>)&#123;</span><br><span class="line">            ans<span class="number">5.</span><span class="built_in">push_back</span>(x);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (ans<span class="number">1.</span><span class="built_in">empty</span>())&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;N&quot;</span>&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="type">int</span> sum1=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;ans<span class="number">1.</span><span class="built_in">size</span>();i++)&#123;</span><br><span class="line">            sum1+=ans1[i];</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;sum1&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (ans<span class="number">2.</span><span class="built_in">empty</span>())&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;N&quot;</span>&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="type">int</span> sum2=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;ans<span class="number">2.</span><span class="built_in">size</span>();i++)&#123;</span><br><span class="line">            sum2+=ans2[i]*<span class="built_in">pow</span>(<span class="number">-1</span>,i<span class="number">+2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;sum2&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (ans<span class="number">3.</span><span class="built_in">empty</span>())&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;N&quot;</span>&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        cout&lt;&lt;ans<span class="number">3.</span><span class="built_in">size</span>()&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (ans<span class="number">4.</span><span class="built_in">empty</span>())&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;N&quot;</span>&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="type">double</span> sum4=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;ans<span class="number">4.</span><span class="built_in">size</span>();i++)&#123;</span><br><span class="line">            sum4+=<span class="number">1.0</span>*ans4[i];</span><br><span class="line">        &#125;</span><br><span class="line">        sum4/=ans<span class="number">4.</span><span class="built_in">size</span>();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.1f &quot;</span>,sum4);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (ans<span class="number">5.</span><span class="built_in">empty</span>())&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;N&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="type">int</span> maxx=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;ans<span class="number">5.</span><span class="built_in">size</span>();i++)&#123;</span><br><span class="line">            maxx=<span class="built_in">max</span>(maxx,ans5[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;maxx;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个解法绝对非内存上的最优解，但是我觉得这个解法最清晰就是了。</p><h2 id="1013"><a href="#1013" class="headerlink" title="1013"></a>1013</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">su</span><span class="params">(<span class="type">int</span> a)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a &lt; <span class="number">2</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (a == <span class="number">2</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">2</span>;i*i&lt;=a;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (a%i==<span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> m,n;</span><br><span class="line">    cin&gt;&gt;m&gt;&gt;n;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; ans;</span><br><span class="line">    <span class="type">int</span> num = <span class="number">2</span>; </span><br><span class="line">    <span class="keyword">while</span> (ans.<span class="built_in">size</span>() &lt; n)&#123;  </span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">su</span>(num)) ans.<span class="built_in">push_back</span>(num);</span><br><span class="line">        num++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> flag = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=m<span class="number">-1</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (i == n<span class="number">-1</span>)&#123;</span><br><span class="line">            cout &lt;&lt; ans[i]; <span class="comment">// 最后一个数字后不加空格</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (flag == <span class="number">10</span>)&#123;</span><br><span class="line">            cout &lt;&lt; ans[i] &lt;&lt; endl;</span><br><span class="line">            flag = <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            cout &lt;&lt; ans[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">            flag++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1014"><a href="#1014" class="headerlink" title="1014"></a>1014</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">    string s1, s2, s3, s4;</span><br><span class="line">    <span class="built_in">getline</span>(cin, s1);</span><br><span class="line">    <span class="built_in">getline</span>(cin, s2);</span><br><span class="line">    <span class="built_in">getline</span>(cin, s3);</span><br><span class="line">    <span class="built_in">getline</span>(cin, s4);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1) 找星期</span></span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> n12 = <span class="built_in">min</span>(s<span class="number">1.</span><span class="built_in">size</span>(), s<span class="number">2.</span><span class="built_in">size</span>());</span><br><span class="line">    <span class="type">int</span> dayIdx = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span> (; i &lt; n12; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (s1[i] == s2[i] &amp;&amp; s1[i] &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; s1[i] &lt;= <span class="string">&#x27;G&#x27;</span>) &#123;</span><br><span class="line">            dayIdx = s1[i] - <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2) 找小时（从 i+1 开始）</span></span><br><span class="line">    <span class="type">int</span> hour = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span> (++i; i &lt; n12; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (s1[i] == s2[i]) &#123;</span><br><span class="line">            <span class="type">char</span> c = s1[i];</span><br><span class="line">            <span class="keyword">if</span> (c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">                hour = c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (c &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;N&#x27;</span>) &#123;</span><br><span class="line">                hour = c - <span class="string">&#x27;A&#x27;</span> + <span class="number">10</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3) 找分钟（第一个相同的英文字母位置）</span></span><br><span class="line">    <span class="type">int</span> n34 = <span class="built_in">min</span>(s<span class="number">3.</span><span class="built_in">size</span>(), s<span class="number">4.</span><span class="built_in">size</span>());</span><br><span class="line">    <span class="type">int</span> minute = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; n34; ++k) &#123;</span><br><span class="line">        <span class="keyword">if</span> (s3[k] == s4[k] &amp;&amp; ((s3[k] &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; s3[k] &lt;= <span class="string">&#x27;Z&#x27;</span>) || (s3[k] &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; s3[k] &lt;= <span class="string">&#x27;z&#x27;</span>))) &#123;</span><br><span class="line">            minute = k;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">static</span> <span class="type">const</span> <span class="type">char</span>* dayName[] = &#123;<span class="string">&quot;MON&quot;</span>,<span class="string">&quot;TUE&quot;</span>,<span class="string">&quot;WED&quot;</span>,<span class="string">&quot;THU&quot;</span>,<span class="string">&quot;FRI&quot;</span>,<span class="string">&quot;SAT&quot;</span>,<span class="string">&quot;SUN&quot;</span>&#125;;</span><br><span class="line">    cout &lt;&lt; dayName[dayIdx] &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="built_in">setw</span>(<span class="number">2</span>) &lt;&lt; <span class="built_in">setfill</span>(<span class="string">&#x27;0&#x27;</span>) &lt;&lt; hour &lt;&lt; <span class="string">&#x27;:&#x27;</span></span><br><span class="line">         &lt;&lt; <span class="built_in">setw</span>(<span class="number">2</span>) &lt;&lt; <span class="built_in">setfill</span>(<span class="string">&#x27;0&#x27;</span>) &lt;&lt; minute &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1015"><a href="#1015" class="headerlink" title="1015"></a>1015</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">stu</span>&#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> num;</span><br><span class="line">    <span class="type">int</span> d,c;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(stu x,stu y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x.c+x.d==y.c+y.d)&#123;</span><br><span class="line">        <span class="keyword">if</span> (x.d==y.d)&#123;</span><br><span class="line">            <span class="keyword">return</span> x.num&lt;y.num;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> x.d&gt;y.d;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x.d+x.c&gt;y.d+y.c;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> n,l,h;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;l&gt;&gt;h;</span><br><span class="line">    stu a;</span><br><span class="line">    <span class="type">int</span> m=<span class="number">0</span>;</span><br><span class="line">    vector&lt;stu&gt; one,sec,thr,four;</span><br><span class="line">    <span class="keyword">while</span> (n--)&#123;</span><br><span class="line">        cin&gt;&gt;a.num&gt;&gt;a.d&gt;&gt;a.c;</span><br><span class="line">        <span class="keyword">if</span> (a.d&gt;=l&amp;&amp;a.c&gt;=l)&#123;</span><br><span class="line">            m++;</span><br><span class="line">            <span class="keyword">if</span> (a.d&gt;=h&amp;&amp;a.c&gt;=h)&#123;</span><br><span class="line">                one.<span class="built_in">push_back</span>(a);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(a.d&gt;=h&amp;&amp;a.c&lt;h)&#123;</span><br><span class="line">                sec.<span class="built_in">push_back</span>(a);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(a.d&lt;h&amp;&amp;a.c&lt;h&amp;&amp;a.d&gt;=a.c)&#123;</span><br><span class="line">                thr.<span class="built_in">push_back</span>(a);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                four.<span class="built_in">push_back</span>(a);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(one.<span class="built_in">begin</span>(),one.<span class="built_in">end</span>(),cmp);</span><br><span class="line">    <span class="built_in">sort</span>(sec.<span class="built_in">begin</span>(),sec.<span class="built_in">end</span>(),cmp);</span><br><span class="line">    <span class="built_in">sort</span>(thr.<span class="built_in">begin</span>(),thr.<span class="built_in">end</span>(),cmp);</span><br><span class="line">    <span class="built_in">sort</span>(four.<span class="built_in">begin</span>(),four.<span class="built_in">end</span>(),cmp);</span><br><span class="line">    cout&lt;&lt;m&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> it:one)&#123;</span><br><span class="line">        cout&lt;&lt;it.num&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;it.d&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;it.c&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> it:sec)&#123;</span><br><span class="line">        cout&lt;&lt;it.num&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;it.d&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;it.c&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> it:thr)&#123;</span><br><span class="line">        cout&lt;&lt;it.num&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;it.d&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;it.c&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> it:four)&#123;</span><br><span class="line">        cout&lt;&lt;it.num&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;it.d&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;it.c&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>写代码的过程是很痛苦的，你应该庆幸的是学号只有八位不用开string</p><p>磨性子，耐心写写。</p><h2 id="1016"><a href="#1016" class="headerlink" title="1016"></a>1016</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">string a,b;</span><br><span class="line"><span class="type">int</span> Da,Db,suma=<span class="number">0</span>,sumb=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;a&gt;&gt;Da&gt;&gt;b&gt;&gt;Db;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> c:a)&#123;</span><br><span class="line">        <span class="keyword">if</span> (c-<span class="string">&#x27;0&#x27;</span>==Da)&#123;</span><br><span class="line">            suma=suma*<span class="number">10</span>+Da;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> c:b)&#123;</span><br><span class="line">        <span class="keyword">if</span> (c-<span class="string">&#x27;0&#x27;</span>==Db)&#123;</span><br><span class="line">            sumb=sumb*<span class="number">10</span>+Db;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;suma+sumb&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>没有尝试过int会不会爆，有兴趣可以一试，我以防极端数据用了字符串。</p><h2 id="1017"><a href="#1017" class="headerlink" title="1017"></a>1017</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">string a;</span><br><span class="line"><span class="type">int</span> b;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line">    <span class="type">int</span> r=<span class="number">0</span>,num=<span class="number">0</span>;</span><br><span class="line">    string s,ans;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">char</span> c:a)&#123;</span><br><span class="line">        num=r*<span class="number">10</span>+(c-<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">        s+=(num/b)+<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        r=num%b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> pos=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (pos&lt;s.<span class="built_in">size</span>()<span class="number">-1</span>&amp;&amp;s[pos]==<span class="string">&#x27;0&#x27;</span>)&#123;</span><br><span class="line">        pos++;</span><br><span class="line">    &#125;</span><br><span class="line">    ans=s.<span class="built_in">substr</span>(pos);</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;r&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>高精度除法，变态的模拟题。</p><h2 id="1018"><a href="#1018" class="headerlink" title="1018"></a>1018</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[<span class="number">3</span>][<span class="number">3</span>] = &#123;</span><br><span class="line">    &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span>&#125;,</span><br><span class="line">    &#123;<span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>&#125;,</span><br><span class="line">    &#123;<span class="number">1</span>, <span class="number">-1</span>, <span class="number">0</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> s1=<span class="number">0</span>,p1=<span class="number">0</span>,f1=<span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> s2=<span class="number">0</span>,p2=<span class="number">0</span>,f2=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    map&lt;<span class="type">char</span>,<span class="type">int</span>&gt; m;</span><br><span class="line">    m[<span class="string">&#x27;C&#x27;</span>]=<span class="number">0</span>, m[<span class="string">&#x27;J&#x27;</span>]=<span class="number">1</span>, m[<span class="string">&#x27;B&#x27;</span>]=<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> win1[<span class="number">3</span>]=&#123;<span class="number">0</span>&#125;, win2[<span class="number">3</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (n--) &#123;</span><br><span class="line">        <span class="type">char</span> x,y;</span><br><span class="line">        cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">        <span class="type">int</span> c = m[x];</span><br><span class="line">        <span class="type">int</span> d = m[y];</span><br><span class="line">        <span class="keyword">if</span> (a[c][d] == <span class="number">0</span>) &#123;</span><br><span class="line">            p1++, p2++;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (a[c][d] == <span class="number">1</span>) &#123;</span><br><span class="line">            s1++, f2++, win1[c]++;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            s2++, f1++, win2[d]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; s1 &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; p1 &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; f1 &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; s2 &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; p2 &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; f2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="type">char</span> gesture[<span class="number">3</span>] = &#123;<span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;J&#x27;</span>,<span class="string">&#x27;B&#x27;</span>&#125;;</span><br><span class="line">    <span class="type">int</span> order[<span class="number">3</span>] = &#123;<span class="number">2</span>,<span class="number">0</span>,<span class="number">1</span>&#125;; <span class="comment">// 按 B,C,J 优先级</span></span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> max1 = order[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">        <span class="type">int</span> idx = order[i];</span><br><span class="line">        <span class="keyword">if</span> (win1[idx] &gt; win1[max1]) max1 = idx;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> max2 = order[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">        <span class="type">int</span> idx = order[i];</span><br><span class="line">        <span class="keyword">if</span> (win2[idx] &gt; win2[max2]) max2 = idx;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; gesture[max1] &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; gesture[max2] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个题目可以用一串很长的if else干掉，但是你知道的，那样代码超级长，打表好写一点。</p><h2 id="1019"><a href="#1019" class="headerlink" title="1019"></a>1019</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function">string <span class="title">to4</span><span class="params">(<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">    string s = <span class="built_in">to_string</span>(n);</span><br><span class="line">    <span class="keyword">while</span> (s.<span class="built_in">size</span>() &lt; <span class="number">4</span>) s = <span class="string">&quot;0&quot;</span> + s;</span><br><span class="line">    <span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        string s = <span class="built_in">to4</span>(n);</span><br><span class="line">        string s1 = s, s2 = s;</span><br><span class="line">        <span class="built_in">sort</span>(s<span class="number">1.</span><span class="built_in">begin</span>(), s<span class="number">1.</span><span class="built_in">end</span>(), <span class="built_in">greater</span>&lt;<span class="type">char</span>&gt;()); <span class="comment">// 降序</span></span><br><span class="line">        <span class="built_in">sort</span>(s<span class="number">2.</span><span class="built_in">begin</span>(), s<span class="number">2.</span><span class="built_in">end</span>());                  <span class="comment">// 升序</span></span><br><span class="line">        <span class="type">int</span> a = <span class="built_in">stoi</span>(s1);</span><br><span class="line">        <span class="type">int</span> b = <span class="built_in">stoi</span>(s2);</span><br><span class="line">        n = a - b;</span><br><span class="line">        cout &lt;&lt; s1 &lt;&lt; <span class="string">&quot; - &quot;</span> &lt;&lt; s2 &lt;&lt; <span class="string">&quot; = &quot;</span> &lt;&lt; <span class="built_in">to4</span>(n) &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">0</span> || n == <span class="number">6174</span>) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>保留前导0，纯神人来的。</p><p>to_string：数字转字符串</p><p>stoi()：字符串转数字</p><h2 id="1020"><a href="#1020" class="headerlink" title="1020"></a>1020</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">double</span> d;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">coke</span>&#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">    <span class="type">double</span> k,p;</span><br><span class="line">&#125;a[<span class="number">1010</span>];</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(coke x,coke y)</span></span>&#123;</span><br><span class="line">    <span class="type">double</span> p1=x.p/x.k;</span><br><span class="line">    <span class="type">double</span> p2=y.p/y.k;</span><br><span class="line">    <span class="keyword">return</span> p1&gt;=p2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;d;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;a[i].k;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;a[i].p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(a,a+n,cmp);</span><br><span class="line">    <span class="type">double</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i].k&gt;=d)&#123;</span><br><span class="line">            ans+=(a[i].p/a[i].k)*d;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            ans+=a[i].p;</span><br><span class="line">            d-=a[i].k;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2f&quot;</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>贪心算法模板题，如果不知道什么是贪心就说明你基础不扎实了，建议退出文档补修贪心。</p><h2 id="1021"><a href="#1021" class="headerlink" title="1021"></a>1021</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">string n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">10</span>];</span><br><span class="line">    <span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="built_in">sizeof</span>(a));</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">char</span> c:n)&#123;</span><br><span class="line">        a[c-<span class="string">&#x27;0&#x27;</span>]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">9</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i]!=<span class="number">0</span>)&#123;</span><br><span class="line">            cout&lt;&lt;i&lt;&lt;<span class="string">&quot;:&quot;</span>&lt;&lt;a[i]&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1022"><a href="#1022" class="headerlink" title="1022"></a>1022</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a,b,n,d;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;a&gt;&gt;b&gt;&gt;d;</span><br><span class="line">    n=a+b;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; ans;</span><br><span class="line">    <span class="keyword">if</span> (n==<span class="number">0</span>)&#123;<span class="comment">//记得特判</span></span><br><span class="line">        cout&lt;&lt;<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (n&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        ans.<span class="built_in">push_back</span>(n%d);</span><br><span class="line">        n/=d;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=ans.<span class="built_in">size</span>()<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">        cout&lt;&lt;ans[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>模拟，如果不会进制转化，那么依旧建议是退出文档，补修进制转化相关知识。</p><h2 id="1023"><a href="#1023" class="headerlink" title="1023"></a>1023</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">vector&lt;<span class="type">int</span>&gt; ans,a;</span><br><span class="line"><span class="type">int</span> x,minn=<span class="number">10</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> j=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> t[<span class="number">10</span>];</span><br><span class="line">    <span class="built_in">memset</span>(t,<span class="number">0</span>,<span class="built_in">sizeof</span>(t));</span><br><span class="line">    <span class="keyword">while</span> (j&lt;<span class="number">10</span>)&#123;</span><br><span class="line">        cin&gt;&gt;x;</span><br><span class="line">        t[j]=x;</span><br><span class="line">        j++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">9</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (t[i]==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">while</span> (t[i]--)&#123;</span><br><span class="line">                a.<span class="built_in">push_back</span>(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> flag=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> it:a)&#123;</span><br><span class="line">        <span class="keyword">if</span> (it!=<span class="number">0</span>)&#123;</span><br><span class="line">            minn=<span class="built_in">min</span>(it,minn);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> it:a)&#123;</span><br><span class="line">        <span class="keyword">if</span> (!flag&amp;&amp;it==minn)&#123;</span><br><span class="line">            flag=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            ans.<span class="built_in">push_back</span>(it);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(ans.<span class="built_in">begin</span>(),ans.<span class="built_in">end</span>());</span><br><span class="line">    cout&lt;&lt;minn;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> it:ans)&#123;</span><br><span class="line">        cout&lt;&lt;it;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要注意一下它输入的数字是什么。</p><p>对于首位不能是0这个问题，我采取的方法是先找出这些数字中的非0最小值，然后维护另一个数组，为保证这个最小值只被去除一次，定义了flag变量进行标记，一旦去除，flag立刻重置为1，保证不会再去除第二个。</p><p>输出时只需要将非0最小值输出，紧跟着输出排序后的ans数组即可。</p><h2 id="1024"><a href="#1024" class="headerlink" title="1024"></a>1024</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">string a, num, b;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cin &gt;&gt; a;</span><br><span class="line">    <span class="comment">// 处理数字部分（去掉 &#x27;+&#x27;）</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> c : a) &#123;</span><br><span class="line">        <span class="keyword">if</span> (c == <span class="string">&#x27;E&#x27;</span>) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span> (c == <span class="string">&#x27;+&#x27;</span>) <span class="keyword">continue</span>;</span><br><span class="line">        num += c;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 提取指数部分</span></span><br><span class="line">    <span class="keyword">auto</span> p = a.<span class="built_in">find</span>(<span class="string">&#x27;E&#x27;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = p + <span class="number">1</span>; i &lt; a.<span class="built_in">size</span>(); i++) b += a[i];</span><br><span class="line">    <span class="type">int</span> x = <span class="built_in">stoi</span>(b);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 输出符号</span></span><br><span class="line">    <span class="keyword">if</span> (num[<span class="number">0</span>] == <span class="string">&#x27;-&#x27;</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;-&quot;</span>;</span><br><span class="line">        num = num.<span class="built_in">substr</span>(<span class="number">1</span>); <span class="comment">// 去掉负号</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 分离整数部分和小数部分</span></span><br><span class="line">    <span class="type">int</span> dot = num.<span class="built_in">find</span>(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">    string digits = num.<span class="built_in">substr</span>(<span class="number">0</span>, dot) + num.<span class="built_in">substr</span>(dot + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (x &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">// 小数点右移</span></span><br><span class="line">        <span class="keyword">if</span> (x &gt;= (<span class="type">int</span>)num.<span class="built_in">size</span>() - dot - <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="comment">// 移到末尾或更右 → 直接输出并补0</span></span><br><span class="line">            cout &lt;&lt; digits;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; x - (num.<span class="built_in">size</span>() - dot - <span class="number">1</span>); i++) cout &lt;&lt; <span class="string">&quot;0&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 右移后还在中间 → 插入小数点</span></span><br><span class="line">            <span class="type">int</span> pos = dot + x; </span><br><span class="line">            cout &lt;&lt; digits.<span class="built_in">substr</span>(<span class="number">0</span>, pos) &lt;&lt; <span class="string">&quot;.&quot;</span> &lt;&lt; digits.<span class="built_in">substr</span>(pos);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 小数点左移</span></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;0.&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; -x - <span class="number">1</span>; i++) cout &lt;&lt; <span class="string">&quot;0&quot;</span>;</span><br><span class="line">        cout &lt;&lt; digits;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>字符串处理，很抽象，我不好说，我只看到了陈越满满的恶意</p><h2 id="1025"><a href="#1025" class="headerlink" title="1025"></a>1025</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">node</span>&#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">    <span class="type">int</span> add,data,next;</span><br><span class="line">&#125;;</span><br><span class="line">unordered_map&lt;<span class="type">int</span>,node&gt; a;</span><br><span class="line"><span class="type">int</span> beginn,n,k;</span><br><span class="line">node r;</span><br><span class="line">deque&lt;node&gt; d;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;beginn&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    <span class="keyword">while</span> (n--)&#123;</span><br><span class="line">       cin&gt;&gt;r.add&gt;&gt;r.data&gt;&gt;r.next;</span><br><span class="line">       a[r.add]=r;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(beginn!=<span class="number">-1</span>)&#123;</span><br><span class="line">        d.<span class="built_in">push_back</span>(a[beginn]);</span><br><span class="line">        beginn=a[beginn].next;</span><br><span class="line">    &#125;</span><br><span class="line">    stack&lt;node&gt; s;</span><br><span class="line">    vector&lt;node&gt; ans;</span><br><span class="line">    <span class="keyword">while</span> (!d.<span class="built_in">empty</span>())&#123;</span><br><span class="line">        <span class="keyword">if</span> (d.<span class="built_in">size</span>()&lt;k)&#123;</span><br><span class="line">            <span class="keyword">while</span>(!d.<span class="built_in">empty</span>())&#123;</span><br><span class="line">                ans.<span class="built_in">push_back</span>(d.<span class="built_in">front</span>());</span><br><span class="line">                d.<span class="built_in">pop_front</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="type">int</span> x=k;</span><br><span class="line">            <span class="keyword">while</span>(x--)&#123;</span><br><span class="line">                s.<span class="built_in">push</span>(d.<span class="built_in">front</span>());</span><br><span class="line">                d.<span class="built_in">pop_front</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span>(!s.<span class="built_in">empty</span>())&#123;</span><br><span class="line">                ans.<span class="built_in">push_back</span>(s.<span class="built_in">top</span>());</span><br><span class="line">                s.<span class="built_in">pop</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;(<span class="type">int</span>)ans.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (i!=ans.<span class="built_in">size</span>()<span class="number">-1</span>)&#123;</span><br><span class="line">            ans[i].next=ans[i<span class="number">+1</span>].add;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            ans[i].next=<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;it:ans)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%05d %d &quot;</span>,it.add,it.data);</span><br><span class="line">        <span class="keyword">if</span> (it.next != <span class="number">-1</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%05d\n&quot;</span>,it.next);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;-1\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>前排提醒：如果现在还不知道链表是什么，搓不出来一条完整的单向链表&#x2F;双向链表，那么你需要做的就是退出文档，补修链表相关知识</p><p>这一题我是受到了24年机考原题那题翻转链表的启发，然后劈里啪啦打了一大串代码，然后提交到PTA发生段错误，遂换方法。</p><p>链表类题目的基本套路就是把链表放到数组里面进行存储和处理，要注意的是，这题修改链表不是单纯的把链表结点结构体重新排序，排序完之后要修改链表每个节点的指向，这很重要。</p><p>至于链表地址的存储，我选择使用unordered_map，可以有效防止越界的出现，这个数据结构在哈希表中也有很广泛的应用。</p><p>反转的实现我采用了stack，利用先进后出的特性可以直接输出反转后结果。</p><p>然后就是修改节点指向，没什么好说的</p><p>这题写完之后可以在写一下PTA L2-022。</p><p>顺便附带上双端队列优化后的L2-022答案</p><p>至于优化在哪，时间还是空间，那你别管，更好理解那个过程了不是？</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">node</span>&#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">    <span class="type">int</span> add,data,next;</span><br><span class="line">&#125;;</span><br><span class="line">unordered_map&lt;<span class="type">int</span>,node&gt; m;</span><br><span class="line">deque&lt;node&gt; d;</span><br><span class="line"><span class="type">int</span> tbegin,n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;tbegin&gt;&gt;n;</span><br><span class="line">    node l;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        cin&gt;&gt;l.add&gt;&gt;l.data&gt;&gt;l.next;</span><br><span class="line">        m[l.add]=l;</span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;node&gt; ans;</span><br><span class="line">    <span class="keyword">while</span>(tbegin!=<span class="number">-1</span>)&#123;</span><br><span class="line">        d.<span class="built_in">push_back</span>(m[tbegin]);</span><br><span class="line">        tbegin=m[tbegin].next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (!d.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">    <span class="keyword">if</span> (d.<span class="built_in">size</span>() &gt;= <span class="number">2</span>) &#123;</span><br><span class="line">        ans.<span class="built_in">push_back</span>(d.<span class="built_in">back</span>());</span><br><span class="line">        ans.<span class="built_in">push_back</span>(d.<span class="built_in">front</span>());</span><br><span class="line">        d.<span class="built_in">pop_back</span>();</span><br><span class="line">        d.<span class="built_in">pop_front</span>();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123; </span><br><span class="line">        ans.<span class="built_in">push_back</span>(d.<span class="built_in">front</span>());</span><br><span class="line">        d.<span class="built_in">pop_front</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;ans.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (i==ans.<span class="built_in">size</span>()<span class="number">-1</span>)&#123;</span><br><span class="line">            ans[i].next=<span class="number">-1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            ans[i].next=ans[i<span class="number">+1</span>].add;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> it:ans)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%05d %d &quot;</span>,it.add,it.data);</span><br><span class="line">        <span class="keyword">if</span> (it.next != <span class="number">-1</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%05d\n&quot;</span>,it.next);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;-1\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1026"><a href="#1026" class="headerlink" title="1026"></a>1026</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">double</span> c1,c2;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;c1&gt;&gt;c2;</span><br><span class="line">    <span class="type">double</span> t1=(c2-c1)/<span class="number">100</span>;</span><br><span class="line">    <span class="type">int</span> t2=(c2-c1)/<span class="number">100</span>;</span><br><span class="line">    <span class="type">double</span> s1=t1-t2;</span><br><span class="line">    <span class="keyword">if</span> (s1&gt;=<span class="number">0.5</span>&amp;&amp;s1&lt;<span class="number">1</span>)&#123;</span><br><span class="line">        t2++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> hh=t2/<span class="number">3600</span>;</span><br><span class="line">    <span class="type">int</span> mm=(t2%<span class="number">3600</span>)/<span class="number">60</span>;</span><br><span class="line">    <span class="type">int</span> ss=t2%<span class="number">60</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%02d:%02d:%02d&quot;</span>,hh,mm,ss);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>普通模拟，不讲思路，只需要注意要开头就四舍五入就行。</p><h2 id="1027"><a href="#1027" class="headerlink" title="1027"></a>1027</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(<span class="number">1001</span>)</span></span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">char</span> f;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;f;</span><br><span class="line">    <span class="type">int</span> num=<span class="number">3</span>;</span><br><span class="line">    a[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">1000</span>;i++)&#123;</span><br><span class="line">        a[i]=num*<span class="number">2</span>;</span><br><span class="line">        num+=<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">sum</span><span class="params">(<span class="number">1005</span>)</span></span>;</span><br><span class="line">    <span class="built_in">partial_sum</span>(a.<span class="built_in">begin</span>(),a.<span class="built_in">end</span>(),sum.<span class="built_in">begin</span>());<span class="comment">//前缀和函数，用于快速求前缀和</span></span><br><span class="line">    <span class="type">int</span> c=<span class="number">0</span>;<span class="comment">//层数</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> it:sum)&#123;</span><br><span class="line">        <span class="keyword">if</span> (it&gt;n)&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            c++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> x=<span class="number">0</span>,y=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=c<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">        <span class="keyword">if</span> (i==<span class="number">0</span>)&#123;</span><br><span class="line">            x=((a[c<span class="number">-1</span>]/<span class="number">2</span>)<span class="number">-1</span>)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">while</span>(x--)&#123;</span><br><span class="line">                cout&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            cout&lt;&lt;f&lt;&lt;endl;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            x=((a[c<span class="number">-1</span>]/<span class="number">2</span>)-(a[i]/<span class="number">2</span>))/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">while</span> (x--)&#123;</span><br><span class="line">                cout&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            y=a[i]/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">while</span> (y--)&#123;</span><br><span class="line">                cout&lt;&lt;f;</span><br><span class="line">            &#125;</span><br><span class="line">            cout&lt;&lt;endl;</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;=c<span class="number">-1</span>;i++)&#123;</span><br><span class="line">        x=((a[c<span class="number">-1</span>]/<span class="number">2</span>)-(a[i]/<span class="number">2</span>))/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">while</span> (x--)&#123;</span><br><span class="line">                cout&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            y=a[i]/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">while</span> (y--)&#123;</span><br><span class="line">                cout&lt;&lt;f;</span><br><span class="line">            &#125;</span><br><span class="line">            cout&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;n-sum[c<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>前缀和模板题，最丧心病狂的在于输出那个过程（是的我确实很讨厌模拟）</p><p>模板题没什么可讲的，不知道前缀和的去补修一下，补修完了绝对会做。</p><h2 id="1028"><a href="#1028" class="headerlink" title="1028"></a>1028</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">man</span>&#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">    string name;</span><br><span class="line">    <span class="type">int</span> yyyy,mm,dd;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(man x,man y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x.yyyy==y.yyyy)&#123;</span><br><span class="line">        <span class="keyword">if</span> (x.mm==y.mm)&#123;</span><br><span class="line">            <span class="keyword">return</span> x.dd&lt;y.dd;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> x.mm&lt;y.mm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x.yyyy&lt;y.yyyy;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">vector&lt;man&gt; add;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    man r;</span><br><span class="line">    <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        cin&gt;&gt;r.name;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d/%d/%d&quot;</span>,&amp;r.yyyy,&amp;r.mm,&amp;r.dd);</span><br><span class="line">        <span class="keyword">if</span> (r.yyyy&gt;<span class="number">2014</span>||r.yyyy&lt;<span class="number">1814</span>)&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(r.yyyy==<span class="number">2014</span>&amp;&amp;r.mm&gt;<span class="number">9</span>)&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(r.yyyy==<span class="number">2014</span>&amp;&amp;r.mm==<span class="number">9</span>&amp;&amp;r.dd&gt;<span class="number">6</span>)&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(r.yyyy==<span class="number">1814</span>&amp;&amp;r.mm&lt;<span class="number">9</span>)&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(r.yyyy==<span class="number">1814</span>&amp;&amp;r.mm==<span class="number">9</span>&amp;&amp;r.dd&lt;<span class="number">6</span>)&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(r.mm&gt;<span class="number">12</span>||r.dd&gt;<span class="number">31</span>)&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            add.<span class="built_in">push_back</span>(r);</span><br><span class="line">            sum++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (sum==<span class="number">0</span>)&#123;</span><br><span class="line">        cout&lt;&lt;<span class="number">0</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">sort</span>(add.<span class="built_in">begin</span>(),add.<span class="built_in">end</span>(),cmp);</span><br><span class="line">        cout&lt;&lt;sum&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;add[<span class="number">0</span>].name&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;add[add.<span class="built_in">size</span>()<span class="number">-1</span>].name;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一题很简单的模拟，只需要对年龄判断下一点功夫就可以。</p><h2 id="1029"><a href="#1029" class="headerlink" title="1029"></a>1029</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">string a,b;</span><br><span class="line">unordered_set&lt;<span class="type">char</span>&gt; used;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;b.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        b[i]=<span class="built_in">toupper</span>(b[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">char</span> c:a)&#123;</span><br><span class="line">        <span class="type">char</span> c1=<span class="built_in">toupper</span>(c);</span><br><span class="line">        <span class="keyword">if</span> (b.<span class="built_in">find</span>(c1)==string::npos&amp;&amp;!used.<span class="built_in">count</span>(c1))&#123;</span><br><span class="line">            cout&lt;&lt;c1;</span><br><span class="line">            used.<span class="built_in">insert</span>(c1);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我又死在字符串处理上了。</p><p>这题用STL中的find就很好解答，然后建立一个集合就可以保证只被输出一次，但是陈越搞了个很抽象的东西，大小写一律只输出大写，这个没搞好会晕晕绕绕的。遂干脆把b里面全部转化为大写进行判断。</p><h2 id="1030"><a href="#1030" class="headerlink" title="1030"></a>1030</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">int</span> n,p;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; a;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;p;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="keyword">while</span> (n--)&#123;</span><br><span class="line">        cin&gt;&gt;x;</span><br><span class="line">        a.<span class="built_in">push_back</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(a.<span class="built_in">begin</span>(),a.<span class="built_in">end</span>());</span><br><span class="line">    <span class="type">int</span> l=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> r=<span class="number">0</span>;r&lt;a.<span class="built_in">size</span>();)&#123;</span><br><span class="line">        <span class="keyword">if</span> (a[l]*p&gt;=a[r])&#123;</span><br><span class="line">            ans=<span class="built_in">max</span>(ans,r-l<span class="number">+1</span>);</span><br><span class="line">            r++;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(a[l]*p&lt;a[r])&#123;</span><br><span class="line">            l++;</span><br><span class="line">            <span class="keyword">if</span> (l&gt;r) r=l;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这题主要涉及的算法是双指针，或许可以换一个说法叫做单调性枚举</p><p>思路非常简单，由于要选取最大值和最小值，我们直接采用一个排序，也就是sort。</p><p>sort函数默认是从小到大排序的，因此我们选定的一个区间内的左端点就是最小值，右端点就是最大值。</p><p>一旦满足条件，就说明最大值不够大了，将右指针向右边移动，同理，不满足情况就移动左指针。</p><p>这里有一个小细节需要注意一下啊，如果左指针超过右指针了，需要移动右指针到左指针位置</p><p>在每次满足的地方收集一下答案就可以，最后输出答案。</p><p>这里讲一个题外话啊，我刚开始看这一题的时候看成了要求一个固定区间，就是不让我打乱顺序了，洋洋洒洒写了个单调双端队列，然后直接爆0。</p><p>那都说到这了，就来写一下固定区间的吧，可以自己想一下。</p><p>贴上答案：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,p;</span><br><span class="line">deque&lt;<span class="type">int</span>&gt; maxx;</span><br><span class="line">deque&lt;<span class="type">int</span>&gt; minn;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;p;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; a;</span><br><span class="line">    <span class="keyword">while</span> (n--)&#123;</span><br><span class="line">        cin&gt;&gt;x;</span><br><span class="line">        a.<span class="built_in">push_back</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> l=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> r=<span class="number">0</span>;r&lt;a.<span class="built_in">size</span>();r++)&#123;<span class="comment">//注意，单调双端队列存储的是下标</span></span><br><span class="line">        <span class="keyword">while</span>(!maxx.<span class="built_in">empty</span>()&amp;&amp;a[maxx.<span class="built_in">back</span>()]&lt;=a[r])&#123;</span><br><span class="line">            maxx.<span class="built_in">pop_back</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        maxx.<span class="built_in">push_back</span>(r);</span><br><span class="line">        <span class="keyword">while</span>(!minn.<span class="built_in">empty</span>()&amp;&amp;a[minn.<span class="built_in">back</span>()]&gt;=a[r])&#123;</span><br><span class="line">            minn.<span class="built_in">pop_back</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        minn.<span class="built_in">push_back</span>(r);</span><br><span class="line">        <span class="keyword">while</span>(!maxx.<span class="built_in">empty</span>()&amp;&amp;!minn.<span class="built_in">empty</span>()&amp;&amp;a[minn.<span class="built_in">front</span>()]*p&lt;a[maxx.<span class="built_in">front</span>()])&#123;</span><br><span class="line">            <span class="keyword">if</span> (minn.<span class="built_in">front</span>()==l)&#123;</span><br><span class="line">                minn.<span class="built_in">pop_front</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (maxx.<span class="built_in">front</span>()==l)&#123;</span><br><span class="line">                maxx.<span class="built_in">pop_front</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            l++;</span><br><span class="line">        &#125;</span><br><span class="line">        ans=<span class="built_in">max</span>(ans,r-l<span class="number">+1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个不会也无所谓，因为单调双端队列结合双指针确实太难了。</p><h2 id="1031"><a href="#1031" class="headerlink" title="1031"></a>1031</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">string a;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> q[<span class="number">17</span>]=&#123;<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">2</span>&#125;;</span><br><span class="line"><span class="type">char</span> d[<span class="number">11</span>]=&#123;<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;X&#x27;</span>,<span class="string">&#x27;9&#x27;</span>,<span class="string">&#x27;8&#x27;</span>,<span class="string">&#x27;7&#x27;</span>,<span class="string">&#x27;6&#x27;</span>,<span class="string">&#x27;5&#x27;</span>,<span class="string">&#x27;4&#x27;</span>,<span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;2&#x27;</span>&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="type">int</span> cant=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (n--)&#123;</span><br><span class="line">        cin&gt;&gt;a;</span><br><span class="line">        <span class="type">int</span> sum=<span class="number">0</span>,flag=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">17</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> ((a[i]&gt;=<span class="string">&#x27;A&#x27;</span>&amp;&amp;a[i]&lt;=<span class="string">&#x27;Z&#x27;</span>)||(a[i]&gt;=<span class="string">&#x27;a&#x27;</span>&amp;&amp;a[i]&lt;=<span class="string">&#x27;z&#x27;</span>))&#123;</span><br><span class="line">                flag=<span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="type">int</span> num=(a[i]-<span class="string">&#x27;0&#x27;</span>)*q[i];</span><br><span class="line">                sum+=num;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag)&#123;</span><br><span class="line">            cout&lt;&lt;a&lt;&lt;endl;</span><br><span class="line">            cant++;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (d[sum%<span class="number">11</span>]==a[<span class="number">17</span>])&#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                cout&lt;&lt;a&lt;&lt;endl;</span><br><span class="line">                cant++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (cant==<span class="number">0</span>)&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;All passed&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>简单模拟</p><h2 id="1032"><a href="#1032" class="headerlink" title="1032"></a>1032</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> a[<span class="number">100005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="type">int</span> num,gpa;</span><br><span class="line">    <span class="type">int</span> m=n;</span><br><span class="line">    <span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="built_in">sizeof</span>(a));</span><br><span class="line">    <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">        cin&gt;&gt;num&gt;&gt;gpa;</span><br><span class="line">        a[num]+=gpa;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> maxx=a[<span class="number">1</span>],maxnum=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i]&gt;maxx)&#123;</span><br><span class="line">            maxx=a[i];</span><br><span class="line">            maxnum=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;maxnum&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;maxx;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;<span class="comment">//传统派数组解法</span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    map&lt;<span class="type">int</span>, <span class="type">int</span>&gt; score;  <span class="comment">// key=学校编号，value=总分</span></span><br><span class="line">    <span class="type">int</span> num, gpa;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        cin &gt;&gt; num &gt;&gt; gpa;</span><br><span class="line">        score[num] += gpa;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> maxnum = <span class="number">0</span>, maxx = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;p : score) &#123;</span><br><span class="line">        <span class="keyword">if</span> (p.second &gt; maxx) &#123;</span><br><span class="line">            maxx = p.second;</span><br><span class="line">            maxnum = p.first;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; maxnum &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; maxx;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;<span class="comment">//非传统派map解法</span></span><br></pre></td></tr></table></figure><p>数组解法容易踩坑，就是如果这些人全部都是0分呢。</p><h2 id="1033"><a href="#1033" class="headerlink" title="1033"></a>1033</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">string a,b;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">getline</span>(cin, a)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">getline</span>(cin, b)) b = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    string word;</span><br><span class="line">    <span class="type">int</span> flag=<span class="number">0</span>;<span class="comment">//这个变量用来记录上档键坏掉了没1坏0好</span></span><br><span class="line">    <span class="keyword">auto</span> p=a.<span class="built_in">find</span>(<span class="string">&#x27;+&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (p!=string::npos)&#123;</span><br><span class="line">        flag=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (flag==<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">char</span> c:b)&#123;</span><br><span class="line">            <span class="keyword">if</span> (c&gt;=<span class="string">&#x27;A&#x27;</span>&amp;&amp;c&lt;=<span class="string">&#x27;Z&#x27;</span>)&#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(c&gt;=<span class="string">&#x27;a&#x27;</span>&amp;&amp;c&lt;=<span class="string">&#x27;z&#x27;</span>)&#123;</span><br><span class="line">                p=a.<span class="built_in">find</span>(<span class="built_in">toupper</span>(c));</span><br><span class="line">                <span class="keyword">if</span> (p!=string::npos)&#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    word+=c;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                p=a.<span class="built_in">find</span>(c);</span><br><span class="line">                <span class="keyword">if</span> (p!=string::npos)&#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    word+=c;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">char</span> c:b)&#123;</span><br><span class="line">            <span class="type">char</span> c1=<span class="built_in">toupper</span>(c);</span><br><span class="line">            p=a.<span class="built_in">find</span>(c1);</span><br><span class="line">            <span class="keyword">if</span> (p!=string::npos)&#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                word+=c;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;word;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>思路我觉得应该都看得懂，我来说一个最大最毒瘤的地方</p><p>看到我代码的6和7行，为什么这里要这么写而不是用一般的cin呢？</p><p>很简单，因为题目有一个测试样例是没有坏键，这样的话，读入会发生很严重的错误，用getline就会解决这个问题。</p><blockquote><p>这里我只看到了满满的恶意，我挂在这里了好几次，问GPT好几次它也没找出来，到最后才发现，可见这个点有多么刁钻。</p></blockquote><h2 id="1034"><a href="#1034" class="headerlink" title="1034"></a>1034</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Fraction</span> &#123;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> num, den; <span class="comment">// 分子、分母</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 求最大公约数</span></span><br><span class="line"><span class="function"><span class="type">long</span> <span class="type">long</span> <span class="title">gcd</span><span class="params">(<span class="type">long</span> <span class="type">long</span> a, <span class="type">long</span> <span class="type">long</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b == <span class="number">0</span> ? <span class="built_in">abs</span>(a) : <span class="built_in">gcd</span>(b, a % b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 约分 &amp; 保证分母为正</span></span><br><span class="line"><span class="function">Fraction <span class="title">reduction</span><span class="params">(Fraction f)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (f.den &lt; <span class="number">0</span>) &#123; <span class="comment">// 让分母始终为正</span></span><br><span class="line">        f.den = -f.den;</span><br><span class="line">        f.num = -f.num;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (f.num == <span class="number">0</span>) &#123;</span><br><span class="line">        f.den = <span class="number">1</span>; <span class="comment">// 0 的分母设为 1</span></span><br><span class="line">        <span class="keyword">return</span> f;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> g = <span class="built_in">gcd</span>(f.num, f.den);</span><br><span class="line">    f.num /= g;</span><br><span class="line">    f.den /= g;</span><br><span class="line">    <span class="keyword">return</span> f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出格式化分数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printFraction</span><span class="params">(Fraction f)</span> </span>&#123;</span><br><span class="line">    f = <span class="built_in">reduction</span>(f);</span><br><span class="line">    <span class="type">bool</span> negative = f.num &lt; <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (negative) cout &lt;&lt; <span class="string">&quot;(&quot;</span>;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> n = f.num, d = f.den;</span><br><span class="line">    <span class="keyword">if</span> (n % d == <span class="number">0</span>) &#123;</span><br><span class="line">        cout &lt;&lt; n / d;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">abs</span>(n) &gt; d) &#123;</span><br><span class="line">        cout &lt;&lt; n / d &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; <span class="built_in">abs</span>(n) % d &lt;&lt; <span class="string">&quot;/&quot;</span> &lt;&lt; d;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        cout &lt;&lt; n &lt;&lt; <span class="string">&quot;/&quot;</span> &lt;&lt; d;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (negative) cout &lt;&lt; <span class="string">&quot;)&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 加法</span></span><br><span class="line"><span class="function">Fraction <span class="title">add</span><span class="params">(Fraction a, Fraction b)</span> </span>&#123;</span><br><span class="line">    Fraction r;</span><br><span class="line">    r.num = a.num * b.den + b.num * a.den;</span><br><span class="line">    r.den = a.den * b.den;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">reduction</span>(r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 减法</span></span><br><span class="line"><span class="function">Fraction <span class="title">sub</span><span class="params">(Fraction a, Fraction b)</span> </span>&#123;</span><br><span class="line">    Fraction r;</span><br><span class="line">    r.num = a.num * b.den - b.num * a.den;</span><br><span class="line">    r.den = a.den * b.den;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">reduction</span>(r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 乘法</span></span><br><span class="line"><span class="function">Fraction <span class="title">mul</span><span class="params">(Fraction a, Fraction b)</span> </span>&#123;</span><br><span class="line">    Fraction r;</span><br><span class="line">    r.num = a.num * b.num;</span><br><span class="line">    r.den = a.den * b.den;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">reduction</span>(r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 除法</span></span><br><span class="line"><span class="function">Fraction <span class="title">divide</span><span class="params">(Fraction a, Fraction b)</span> </span>&#123;</span><br><span class="line">    Fraction r;</span><br><span class="line">    r.num = a.num * b.den;</span><br><span class="line">    r.den = a.den * b.num;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">reduction</span>(r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    string s1, s2;</span><br><span class="line">    cin &gt;&gt; s1 &gt;&gt; s2;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 解析输入</span></span><br><span class="line">    Fraction A, B;</span><br><span class="line">    <span class="built_in">sscanf</span>(s<span class="number">1.</span><span class="built_in">c_str</span>(), <span class="string">&quot;%lld/%lld&quot;</span>, &amp;A.num, &amp;A.den);</span><br><span class="line">    <span class="built_in">sscanf</span>(s<span class="number">2.</span><span class="built_in">c_str</span>(), <span class="string">&quot;%lld/%lld&quot;</span>, &amp;B.num, &amp;B.den);</span><br><span class="line"></span><br><span class="line">    A = <span class="built_in">reduction</span>(A);</span><br><span class="line">    B = <span class="built_in">reduction</span>(B);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// A + B</span></span><br><span class="line">    <span class="built_in">printFraction</span>(A);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot; + &quot;</span>;</span><br><span class="line">    <span class="built_in">printFraction</span>(B);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot; = &quot;</span>;</span><br><span class="line">    <span class="built_in">printFraction</span>(<span class="built_in">add</span>(A, B));</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// A - B</span></span><br><span class="line">    <span class="built_in">printFraction</span>(A);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot; - &quot;</span>;</span><br><span class="line">    <span class="built_in">printFraction</span>(B);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot; = &quot;</span>;</span><br><span class="line">    <span class="built_in">printFraction</span>(<span class="built_in">sub</span>(A, B));</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// A * B</span></span><br><span class="line">    <span class="built_in">printFraction</span>(A);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot; * &quot;</span>;</span><br><span class="line">    <span class="built_in">printFraction</span>(B);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot; = &quot;</span>;</span><br><span class="line">    <span class="built_in">printFraction</span>(<span class="built_in">mul</span>(A, B));</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// A / B</span></span><br><span class="line">    <span class="built_in">printFraction</span>(A);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot; / &quot;</span>;</span><br><span class="line">    <span class="built_in">printFraction</span>(B);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot; = &quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (B.num == <span class="number">0</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Inf&quot;</span>; <span class="comment">// 除数为 0</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printFraction</span>(<span class="built_in">divide</span>(A, B));</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1035"><a href="#1035" class="headerlink" title="1035"></a>1035</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n, x;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; a, b;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">        a.<span class="built_in">push_back</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">        b.<span class="built_in">push_back</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; t = a;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 插入排序模拟</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123; <span class="comment">// i 表示正在插入第 i 个元素</span></span><br><span class="line">        <span class="built_in">sort</span>(t.<span class="built_in">begin</span>(), t.<span class="built_in">begin</span>() + i + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (t == b) &#123;</span><br><span class="line">            <span class="built_in">sort</span>(t.<span class="built_in">begin</span>(), t.<span class="built_in">begin</span>() + i + <span class="number">2</span>);</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;Insertion Sort\n&quot;</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (j) cout &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">                cout &lt;&lt; t[j];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 归并排序模拟</span></span><br><span class="line">    t = a;</span><br><span class="line">    <span class="type">int</span> s = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (s &lt; n) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i += <span class="number">2</span> * s) &#123;</span><br><span class="line">            <span class="type">int</span> r = <span class="built_in">min</span>(i + <span class="number">2</span> * s, n);</span><br><span class="line">            <span class="built_in">sort</span>(t.<span class="built_in">begin</span>() + i, t.<span class="built_in">begin</span>() + r);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (t == b) &#123;</span><br><span class="line">            s *= <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i += <span class="number">2</span> * s) &#123;</span><br><span class="line">                <span class="type">int</span> r = <span class="built_in">min</span>(i + <span class="number">2</span> * s, n);</span><br><span class="line">                <span class="built_in">sort</span>(t.<span class="built_in">begin</span>() + i, t.<span class="built_in">begin</span>() + r);</span><br><span class="line">            &#125;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;Merge Sort\n&quot;</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (j) cout &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">                cout &lt;&lt; t[j];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        s *= <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>难点：什么是插入排序什么是归并排序。</p><p>插入排序好理解，这里重点介绍一下归并排序</p><blockquote><h1 id="归并排序（特别是题目里常用的“自底向上”-迭代版本）详解"><a href="#归并排序（特别是题目里常用的“自底向上”-迭代版本）详解" class="headerlink" title="归并排序（特别是题目里常用的“自底向上”&#x2F;迭代版本）详解"></a>归并排序（特别是题目里常用的“自底向上”&#x2F;迭代版本）详解</h1><p>下面我用通俗的语言＋具体例子把归并排序每一步都拆开讲清楚，顺便说明 PAT B1035 里为什么要按 <code>s=1,2,4...</code> 这样检查中间状态，以及如何得到“下一步”的结果。</p><hr><h3 id="一、归并排序的核心思想（概念）"><a href="#一、归并排序的核心思想（概念）" class="headerlink" title="一、归并排序的核心思想（概念）"></a>一、归并排序的核心思想（概念）</h3><p>归并排序是分治（divide-and-conquer）：</p><ol><li>把数组拆成若干个有序的小段（初始每个段长度为 1，显然已排序）。</li><li>把相邻的两个有序段合并成一个更长的有序段（长度翻倍）。</li><li>重复第 2 步直到整段有序。</li></ol><p>两种常见实现：</p><ul><li>递归（自顶向下）：把区间不断二分，底层合并上来。</li><li>迭代&#x2F;自底向上：从段长 <code>s=1</code> 开始，每轮把相邻两段（各长 s）合并成长度 <code>2s</code> 的段，s *&#x3D; 2。</li></ul><p>PAT B1035 常用的是第二种（便于模拟并逐轮检查中间状态）。</p><hr><h3 id="二、合并（merge）具体做法"><a href="#二、合并（merge）具体做法" class="headerlink" title="二、合并（merge）具体做法"></a>二、合并（merge）具体做法</h3><p>合并两个已排序的子数组 <code>L</code> 和 <code>R</code>（长度分别为 s 或可能不足 s）：</p><ul><li>用两个指针 <code>i, j</code> 指向 <code>L</code> 和 <code>R</code> 的起始位置，</li><li>比较 <code>L[i]</code> 和 <code>R[j]</code>，把较小的放到结果中，移动对应指针，</li><li>直到一个子数组耗尽，把另一个剩余部分直接追加到结果。</li></ul><p>这个过程是稳定的，时间复杂度是 <code>O(len(L)+len(R))</code>。</p><p>实现上可以用手写合并（两个指针）或用 <code>std::inplace_merge</code> &#x2F; <code>std::merge</code> &#x2F; 甚至 <code>sort</code> 对那一整块做排序（但 <code>sort</code> 的语义更重，时间复杂度也高一点，但在 PAT 模拟中用 <code>sort</code> 对每个 2s 区间做排序也能得到相同的结果）。</p><hr><h3 id="三、逐轮（s-1-2-4-8…）示例（完整演示）"><a href="#三、逐轮（s-1-2-4-8…）示例（完整演示）" class="headerlink" title="三、逐轮（s&#x3D;1,2,4,8…）示例（完整演示）"></a>三、逐轮（s&#x3D;1,2,4,8…）示例（完整演示）</h3><p>假设初始数组：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A = [3, 1, 2, 8, 7, 5, 9, 4, 6, 0]</span><br></pre></td></tr></table></figure><p><strong>s &#x3D; 1</strong>（把每对长度为1的相邻块合并）<br> 处理块对： [3] &amp; [1], [2] &amp; [8], [7] &amp; [5], [9] &amp; [4], [6] &amp; [0]<br> 合并后得到：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">after s=1: [1,3, 2,8, 5,7, 4,9, 0,6]</span><br></pre></td></tr></table></figure><p><strong>s &#x3D; 2</strong>（把每对长度为2的相邻块合并）<br> 处理块对： [1,3] &amp; [2,8] → [1,2,3,8]<br> [5,7] &amp; [4,9] → [4,5,7,9]<br> [0,6] （尾段没有伴侣，保持 [0,6]）<br> 合并后：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">after s=2: [1,2,3,8, 4,5,7,9, 0,6]</span><br></pre></td></tr></table></figure><p><strong>s &#x3D; 4</strong>（合并长度为4的块）<br> 处理块对： [1,2,3,8] &amp; [4,5,7,9] → [1,2,3,4,5,7,8,9]<br> [0,6] 仍为尾段<br> 合并后：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">after s=4: [1,2,3,4,5,7,8,9, 0,6]</span><br></pre></td></tr></table></figure><p><strong>s &#x3D; 8</strong>（合并长度为8的块）<br> 合并 [1..8] 和 [9..10]（即前 8 个与最后 2 个）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">最终排序: [0,1,2,3,4,5,6,7,8,9]</span><br></pre></td></tr></table></figure><blockquote><p>注意：每一步（每次 s 倍增完成）你得到的数组就是一个“可观测的中间状态”。PAT 的 <code>B</code> 就可能等于其中某一轮结束后的数组。</p></blockquote><hr><h3 id="四、如何在题目中判定和给出“下一步”结果（实战要点）"><a href="#四、如何在题目中判定和给出“下一步”结果（实战要点）" class="headerlink" title="四、如何在题目中判定和给出“下一步”结果（实战要点）"></a>四、如何在题目中判定和给出“下一步”结果（实战要点）</h3><ul><li>在模拟时，每完成一轮（即把所有 <code>i</code> 从 <code>0</code> 到 <code>n</code> 的 <code>2*s</code> 块处理完），就把当前数组和给定的 <code>B</code> 比较。</li><li>如果相等，说明 <code>B</code> 是在当前 <code>s</code> 完成后的状态。<strong>接下来你需要把 <code>s</code> 翻倍（<code>s \*= 2</code>），再做一次完整的合并（对所有长度为 <code>2\*s</code> 的区间合并&#x2F;排序）得到“下一步”的数组并输出。</strong></li><li>特别注意：<strong>不要在单个块处理完成后就比较</strong>（题目要求快照是每轮结束后的状态）；也不要漏掉初始数组（<code>s=1</code> 之前的状态）这种边界。</li></ul><p>举例流程（伪步骤）：</p><ol><li>t &#x3D; A，s &#x3D; 1</li><li>对所有 i (步长 2*s) 做合并 -&gt; 得到 t</li><li>如果 t &#x3D;&#x3D; B：那说明当前是 <code>s</code> 的状态，令 s *&#x3D; 2，做一轮合并得到 next，输出 next。</li><li>否则 s *&#x3D; 2，回到第2步，直到 s &gt;&#x3D; n。</li></ol><hr><h3 id="五、代码提示（迭代合并，用-inplace-merge-更“正宗”）"><a href="#五、代码提示（迭代合并，用-inplace-merge-更“正宗”）" class="headerlink" title="五、代码提示（迭代合并，用 inplace_merge 更“正宗”）"></a>五、代码提示（迭代合并，用 <code>inplace_merge</code> 更“正宗”）</h3><p>下面是把上面逻辑写成的关键片段（在完整程序里用来检测并输出下一步）。<code>inplace_merge</code> 会把 <code>[l, mid)</code> 与 <code>[mid, r)</code> 两个已排序区间合并为一个已排序区间。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// t 为当前数组拷贝，n 为长度</span></span><br><span class="line"><span class="type">int</span> s = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (s &lt; n) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i += <span class="number">2</span>*s) &#123;</span><br><span class="line">        <span class="type">int</span> mid = <span class="built_in">min</span>(i + s, n);</span><br><span class="line">        <span class="type">int</span> r = <span class="built_in">min</span>(i + <span class="number">2</span>*s, n);</span><br><span class="line">        <span class="keyword">if</span> (mid &lt; r) &#123;</span><br><span class="line">            <span class="built_in">inplace_merge</span>(t.<span class="built_in">begin</span>() + i, t.<span class="built_in">begin</span>() + mid, t.<span class="built_in">begin</span>() + r);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (t == B) &#123;</span><br><span class="line">        <span class="comment">// 找到匹配，执行下一轮</span></span><br><span class="line">        s *= <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i += <span class="number">2</span>*s) &#123;</span><br><span class="line">            <span class="type">int</span> mid = <span class="built_in">min</span>(i + s, n);</span><br><span class="line">            <span class="type">int</span> r = <span class="built_in">min</span>(i + <span class="number">2</span>*s, n);</span><br><span class="line">            <span class="keyword">if</span> (mid &lt; r) <span class="built_in">inplace_merge</span>(t.<span class="built_in">begin</span>() + i, t.<span class="built_in">begin</span>() + mid, t.<span class="built_in">begin</span>() + r);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 输出 t 即为下一步结果</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    s *= <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>说明：之前很多同学用 <code>sort(t.begin()+i, t.begin()+r)</code> 来代替 <code>inplace_merge</code>，结果在行为上等价（因为合并后那段是有序的），在 PAT 的题目下用 <code>sort</code> 也能通过，写法更简单，但 <code>inplace_merge</code> 更接近真实归并逻辑且更高效。</p></blockquote><hr><h3 id="六、常见陷阱（注意点总结）"><a href="#六、常见陷阱（注意点总结）" class="headerlink" title="六、常见陷阱（注意点总结）"></a>六、常见陷阱（注意点总结）</h3><ul><li><strong>比较时机</strong>：必须在每轮合并结束后比较 <code>t</code> 和 <code>B</code>，不是在合并单个块中间比较。</li><li><strong>尾段长度</strong>：当尾段不足 <code>s</code> 或不足 <code>2*s</code> 时也要正确处理（<code>mid=min(i+s,n)</code>， <code>r=min(i+2*s,n)</code>）。</li><li><strong>初始状态</strong>：有可能 <code>B</code> 等于初始数组（还没做任何合并），要考虑这种情况（通常在循环前比较一次或在 s&#x3D;1 的循环中就能捕获）。</li><li><strong>稳定性&#x2F;相等判断</strong>：务必用完整的数组比较（<code>t == B</code>），元素顺序必须完全一致。</li></ul><hr><p>如果你愿意，我可以：</p><ul><li>用你提供的具体 <code>A</code> 和 <code>B</code> 做一次可视化演示（逐轮列出数组），或者</li><li>把上面的 <code>inplace_merge</code> 版本写成完整的、可直接提交的 C++ 程序（包含插入排序判定 + 归并判定），方便你直接测试。</li></ul><p>你想要哪一个？</p></blockquote><h2 id="1036"><a href="#1036" class="headerlink" title="1036"></a>1036</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">char</span> b;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;b;</span><br><span class="line">    <span class="type">int</span> h;</span><br><span class="line">    <span class="keyword">if</span> (n%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">        h=n/<span class="number">2</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        h=n/<span class="number">2</span><span class="number">+1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">char</span>&gt;&gt; <span class="built_in">a</span>(h,<span class="built_in">vector</span>&lt;<span class="type">char</span>&gt;(n));</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;h;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (i==<span class="number">0</span>||i==h<span class="number">-1</span>)&#123;</span><br><span class="line">                a[i][j]=b;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (j==<span class="number">0</span>||j==n<span class="number">-1</span>)&#123;</span><br><span class="line">                    a[i][j]=b;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    a[i][j]=<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;h;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">            cout&lt;&lt;a[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>太简单了，没什么好说的。</p><h2 id="1037"><a href="#1037" class="headerlink" title="1037"></a>1037</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">int</span> pg,ps,pk;</span><br><span class="line"><span class="type">int</span> ag,as,ak;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld.%lld.%lld %lld.%lld.%lld&quot;</span>,&amp;pg,&amp;ps,&amp;pk,&amp;ag,&amp;as,&amp;ak);</span><br><span class="line">    <span class="type">int</span> ansg,anss,ansk;</span><br><span class="line">    <span class="type">int</span> sump=pk+ps*<span class="number">29</span>+pg*<span class="number">29</span>*<span class="number">17</span>;</span><br><span class="line">    <span class="type">int</span> suma=ak+as*<span class="number">29</span>+ag*<span class="number">29</span>*<span class="number">17</span>;</span><br><span class="line">    <span class="type">int</span> c=suma-sump;</span><br><span class="line">    <span class="keyword">if</span> (c&lt;<span class="number">0</span>)&#123;</span><br><span class="line">        c=-c;</span><br><span class="line">        ansg=c/<span class="number">493</span>;</span><br><span class="line">        anss=(c%<span class="number">493</span>)/<span class="number">29</span>;</span><br><span class="line">        ansk=c%<span class="number">29</span>;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;-&quot;</span>&lt;&lt;ansg&lt;&lt;<span class="string">&quot;.&quot;</span>&lt;&lt;anss&lt;&lt;<span class="string">&quot;.&quot;</span>&lt;&lt;ansk;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(c&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        ansg=c/<span class="number">493</span>;</span><br><span class="line">        anss=(c%<span class="number">493</span>)/<span class="number">29</span>;</span><br><span class="line">        ansk=c%<span class="number">29</span>;</span><br><span class="line">        cout&lt;&lt;ansg&lt;&lt;<span class="string">&quot;.&quot;</span>&lt;&lt;anss&lt;&lt;<span class="string">&quot;.&quot;</span>&lt;&lt;ansk;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;0.0.0&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>简单模拟。</p><h2 id="1038"><a href="#1038" class="headerlink" title="1038"></a>1038</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,score,k;</span><br><span class="line">unordered_map&lt;<span class="type">int</span>,<span class="type">int</span>&gt; hash1;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span> (n--)&#123;</span><br><span class="line">        cin&gt;&gt;score;</span><br><span class="line">        hash1[score]++;</span><br><span class="line">    &#125;</span><br><span class="line">    cin&gt;&gt;k;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line">        <span class="type">int</span> finds;</span><br><span class="line">        cin&gt;&gt;finds;</span><br><span class="line">        <span class="keyword">if</span> (i==k)&#123;</span><br><span class="line">            cout&lt;&lt;hash1[finds];</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            cout&lt;&lt;hash1[finds]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>哈希表模板题，以分数为key，其实我觉得其他方法应该也可以是实现一样的效果。</p><p>但哈希表在极端数据下可能会更好用一点。</p><h2 id="1039"><a href="#1039" class="headerlink" title="1039"></a>1039</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">string a,b;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">getline</span>(cin,a);</span><br><span class="line">    <span class="built_in">getline</span>(cin,b);</span><br><span class="line">    unordered_map&lt;<span class="type">char</span>,<span class="type">int</span>&gt; hasha;</span><br><span class="line">    unordered_map&lt;<span class="type">char</span>,<span class="type">int</span>&gt; hashb;</span><br><span class="line">    <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="type">bool</span> flag=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">char</span> c:a)&#123;</span><br><span class="line">        hasha[c]++;</span><br><span class="line">    &#125;</span><br><span class="line">    set&lt;<span class="type">char</span>&gt; keyb;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">char</span> c:b)&#123;</span><br><span class="line">        hashb[c]++;</span><br><span class="line">        keyb.<span class="built_in">insert</span>(c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> c:keyb)&#123;</span><br><span class="line">        <span class="keyword">if</span> (hashb[c]&gt;hasha[c])&#123;</span><br><span class="line">            flag=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (flag)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> c:keyb)&#123;</span><br><span class="line">            <span class="keyword">if</span> (hashb[c]&gt;hasha[c])&#123;</span><br><span class="line">                sum+=hashb[c]-hasha[c];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        sum=a.<span class="built_in">size</span>()-b.<span class="built_in">size</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (flag)&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;No &quot;</span>&lt;&lt;sum;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Yes &quot;</span>&lt;&lt;sum;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>依旧哈希表，将字符作为key，字符的数量就是值</p><p>将目标串和给定串里面每个字符的个数都统计出来，然后对目标串的元素进行去重，这里我采用的方法是利用set的自动去重特性（set的底层结构是红黑树，会把里面的元素自动排序，这一点要注意，不过这一题是顺序无关的，所以也就无所谓了）</p><p>我们最开始去遍历这个集合中所有的字符，如果发现有不足的，立马将flag重置为1，然后进行下一步处理，统计到底有多少个不足，把这个结果加到sum里面，最后输出即可。</p><p>如果flag是0，那sum等于什么还要我说吗？</p><blockquote><p>如果不想unordered_map的，可以试试看字符串哈希，当然这种方法我不推荐就是了，对这题有点太杀鸡焉用牛刀了。</p></blockquote><h2 id="1040"><a href="#1040" class="headerlink" title="1040"></a>1040</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    string s;</span><br><span class="line">    cin &gt;&gt; s;</span><br><span class="line">    <span class="type">const</span> <span class="type">long</span> <span class="type">long</span> MOD = <span class="number">1000000007LL</span>;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> cntP = <span class="number">0</span>, cntT = <span class="number">0</span>, ans = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 统计所有 T</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">char</span> c : s) <span class="keyword">if</span> (c == <span class="string">&#x27;T&#x27;</span>) cntT++;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 一次遍历计算</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">char</span> c : s) &#123;</span><br><span class="line">        <span class="keyword">if</span> (c == <span class="string">&#x27;P&#x27;</span>) &#123;</span><br><span class="line">            cntP++;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">&#x27;A&#x27;</span>) &#123;</span><br><span class="line">            ans = (ans + cntP * cntT) % MOD;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">&#x27;T&#x27;</span>) &#123;</span><br><span class="line">            cntT--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; ans % MOD &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我想的搜索，但发现不对，这个不是找连续子串，后来想的栈，但发现又不对。</p><p>然后我放弃了。</p><p>问了一下GPT，他给我的思路是这样的：</p><blockquote><p>先统计字符串中 <code>T</code> 的总数 <code>cntT</code>。</p><p>从左到右遍历：</p><ul><li>遇到 <code>P</code>：<code>cntP++</code></li><li>遇到 <code>A</code>：<code>ans += cntP * cntT</code>（模 <code>1e9+7</code>）</li><li>遇到 <code>T</code>：<code>cntT--</code></li></ul><p>时间 O(n)，空间 O(1)。</p></blockquote><p>纯数学题。</p><h2 id="1041"><a href="#1041" class="headerlink" title="1041"></a>1041</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">map&lt;<span class="type">int</span>,<span class="type">int</span>&gt; a;</span><br><span class="line">map&lt;<span class="type">int</span>,string&gt; b;</span><br><span class="line"><span class="type">int</span> n,m,x,y;</span><br><span class="line">string s;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span> (n--)&#123;</span><br><span class="line">        cin&gt;&gt;s&gt;&gt;x&gt;&gt;y;</span><br><span class="line">        a[x]=y;</span><br><span class="line">        b[x]=s;</span><br><span class="line">    &#125;</span><br><span class="line">    cin&gt;&gt;m;</span><br><span class="line">    <span class="keyword">while</span> (m--)&#123;</span><br><span class="line">        cin&gt;&gt;x;</span><br><span class="line">        cout&lt;&lt;b[x]&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;a[x]&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一秒想map，其他方法没试过。</p><h2 id="1042"><a href="#1042" class="headerlink" title="1042"></a>1042</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">string a;</span><br><span class="line">map&lt;<span class="type">char</span>,<span class="type">int</span>&gt; m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">getline</span>(cin,a);<span class="comment">//注意，测试样例里面的句子有空格，所以要记得用getline，否则会输入错误</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">char</span> &amp;c:a)&#123;</span><br><span class="line">        c=<span class="built_in">tolower</span>(c);</span><br><span class="line">    &#125;</span><br><span class="line">    set&lt;<span class="type">char</span>&gt; s;<span class="comment">//会自动按照字典序排序，很好用吧</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">char</span> c:a)&#123;</span><br><span class="line">        <span class="keyword">if</span> (c&gt;=<span class="string">&#x27;a&#x27;</span>&amp;&amp;c&lt;=<span class="string">&#x27;z&#x27;</span>)&#123;</span><br><span class="line">            s.<span class="built_in">insert</span>(c);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">char</span> c:a)&#123;</span><br><span class="line">        <span class="keyword">if</span> (c&gt;=<span class="string">&#x27;a&#x27;</span>&amp;&amp;c&lt;=<span class="string">&#x27;z&#x27;</span>)&#123;</span><br><span class="line">            m[c]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">char</span> ans;</span><br><span class="line">    <span class="type">int</span> maxx=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> c:s)&#123;</span><br><span class="line">        <span class="keyword">if</span> (m[c]&gt;maxx)&#123;</span><br><span class="line">            ans=c;</span><br><span class="line">            maxx=m[c];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;m[ans];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1043"><a href="#1043" class="headerlink" title="1043"></a>1043</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">string a;</span><br><span class="line">string res=<span class="string">&quot;PATest&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">getline</span>(cin,a);</span><br><span class="line">    <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    map&lt;<span class="type">char</span>,<span class="type">int</span>&gt; count;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">char</span> c:a)&#123;</span><br><span class="line">        count[c]++;</span><br><span class="line">        <span class="keyword">if</span> (c==<span class="string">&#x27;P&#x27;</span>||c==<span class="string">&#x27;A&#x27;</span>||c==<span class="string">&#x27;T&#x27;</span>||c==<span class="string">&#x27;e&#x27;</span>||c==<span class="string">&#x27;s&#x27;</span>||c==<span class="string">&#x27;t&#x27;</span>)&#123;</span><br><span class="line">            sum++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (sum&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">char</span> c:res)&#123;</span><br><span class="line">            <span class="keyword">if</span> (count[c]!=<span class="number">0</span>)&#123;</span><br><span class="line">                cout&lt;&lt;c;</span><br><span class="line">                count[c]--;</span><br><span class="line">                sum--;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我第一遍看错题了，以为是要把原字符串的字符提取出来然后还要保留原顺序。</p><p>当时在想，这东西怎么这么变态？</p><p>后来再看了一下题，发现也还好。</p><p>简单来说，我们是要疯狂去用PATest这三个字母去组成目标字符串，那我们就统计一下这几个字符的数量，并且要记得统计这几个字符串的总数量。</p><p>17行开始是这串代码最重要的部分，我设置了一个while循环，循环进行的内部条件是sum大于0，在内部，我们重复遍历目标串，一旦发现这个字符还可以添加，那我们就输出，同时减掉这个字符的数目以及总数目，当sum为0时就可以退出循环了。</p><p>涉及的算法？只是个模拟罢了。</p><h2 id="1044"><a href="#1044" class="headerlink" title="1044"></a>1044</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    vector&lt;string&gt; low=&#123;<span class="string">&quot;tret&quot;</span>,<span class="string">&quot;jan&quot;</span>,<span class="string">&quot;feb&quot;</span>,<span class="string">&quot;mar&quot;</span>,<span class="string">&quot;apr&quot;</span>,<span class="string">&quot;may&quot;</span>,<span class="string">&quot;jun&quot;</span>,<span class="string">&quot;jly&quot;</span>,<span class="string">&quot;aug&quot;</span>,<span class="string">&quot;sep&quot;</span>,<span class="string">&quot;oct&quot;</span>,<span class="string">&quot;nov&quot;</span>,<span class="string">&quot;dec&quot;</span>&#125;;</span><br><span class="line">    vector&lt;string&gt; high=&#123;<span class="string">&quot;tam&quot;</span>,<span class="string">&quot;hel&quot;</span>,<span class="string">&quot;maa&quot;</span>,<span class="string">&quot;huh&quot;</span>,<span class="string">&quot;tou&quot;</span>,<span class="string">&quot;kes&quot;</span>,<span class="string">&quot;hei&quot;</span>,<span class="string">&quot;elo&quot;</span>,<span class="string">&quot;syy&quot;</span>,<span class="string">&quot;lok&quot;</span>,<span class="string">&quot;mer&quot;</span>,<span class="string">&quot;jou&quot;</span>&#125;;</span><br><span class="line">    unordered_map&lt;string,<span class="type">int</span>&gt; mp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">13</span>;i++) mp[low[i]]=i;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">12</span>;i++) mp[high[i]]=(i<span class="number">+1</span>)*<span class="number">13</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> N;cin&gt;&gt;N;cin.<span class="built_in">ignore</span>();</span><br><span class="line">    <span class="keyword">while</span>(N--)&#123;</span><br><span class="line">        string s;<span class="built_in">getline</span>(cin,s);</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">isdigit</span>(s[<span class="number">0</span>]))&#123; <span class="comment">// 数字 -&gt; 火星文</span></span><br><span class="line">            <span class="type">int</span> x=<span class="built_in">stoi</span>(s),hi=x/<span class="number">13</span>,lo=x%<span class="number">13</span>;</span><br><span class="line">            <span class="keyword">if</span>(hi&amp;&amp;lo) cout&lt;&lt;high[hi<span class="number">-1</span>]&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;low[lo]&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(hi) cout&lt;&lt;high[hi<span class="number">-1</span>]&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">            <span class="keyword">else</span> cout&lt;&lt;low[lo]&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123; <span class="comment">// 火星文 -&gt; 数字</span></span><br><span class="line">            stringstream <span class="built_in">ss</span>(s);string a,b;ss&gt;&gt;a;</span><br><span class="line">            <span class="type">int</span> x=mp[a];</span><br><span class="line">            <span class="keyword">if</span>(ss&gt;&gt;b) x+=mp[b];</span><br><span class="line">            cout&lt;&lt;x&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>题目很简单，但你知道的，PAT乙级思路基础，那写起来就不基础</p><p>这个东西就是要建立四个映射，两个用数组，两个用map，然后就很无聊了</p><p>这里讲一下20行的stringstream函数，这个可以快速拆分空格，有点好用，当然其实自己手搓也是可以。</p><p>用法如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    string s = <span class="string">&quot;123 456 abc&quot;</span>;</span><br><span class="line">    <span class="function">stringstream <span class="title">ss</span><span class="params">(s)</span></span>; <span class="comment">// 把 s 放进 ss</span></span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> a, b;</span><br><span class="line">    string c;</span><br><span class="line">    ss &gt;&gt; a &gt;&gt; b &gt;&gt; c; <span class="comment">// 像 cin 一样读</span></span><br><span class="line">    cout &lt;&lt; a &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; b &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; c; <span class="comment">// 123 456 abc</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>关键点：</strong></p><ul><li><code>stringstream ss(s)</code> 就像把字符串 <code>s</code> 变成一个 <code>cin</code>，可以用 <code>&gt;&gt;</code> 依次读取。</li><li>自动按空格、换行分割，不用自己写 <code>split</code>。</li></ul><blockquote><p>我要吐槽啊，陈越真的很喜欢思路基础code起来不基础的那种题，反正体验感不是很好（小声bb）</p></blockquote><h2 id="1045"><a href="#1045" class="headerlink" title="1045"></a>1045</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; num;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;x;</span><br><span class="line">        num.<span class="built_in">push_back</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">uppp</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">loww</span><span class="params">(n)</span></span>;</span><br><span class="line">    stack&lt;<span class="type">int</span>&gt; s1,s2;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">while</span>(!s<span class="number">1.</span><span class="built_in">empty</span>()&amp;&amp;num[s<span class="number">1.</span><span class="built_in">top</span>()]&lt;=num[i])&#123;</span><br><span class="line">            s<span class="number">1.</span><span class="built_in">pop</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        uppp[i]=s<span class="number">1.</span><span class="built_in">empty</span>()?<span class="number">-1</span>:s<span class="number">1.</span><span class="built_in">top</span>();</span><br><span class="line">        s<span class="number">1.</span><span class="built_in">push</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">        <span class="keyword">while</span>(!s<span class="number">2.</span><span class="built_in">empty</span>()&amp;&amp;num[s<span class="number">2.</span><span class="built_in">top</span>()]&gt;=num[i])&#123;</span><br><span class="line">            s<span class="number">2.</span><span class="built_in">pop</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        loww[i]=s<span class="number">2.</span><span class="built_in">empty</span>()?<span class="number">-1</span>:s<span class="number">2.</span><span class="built_in">top</span>();</span><br><span class="line">        s<span class="number">2.</span><span class="built_in">push</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; ans;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (loww[i]==<span class="number">-1</span>&amp;&amp;uppp[i]==<span class="number">-1</span>)&#123;</span><br><span class="line">            ans.<span class="built_in">push_back</span>(num[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(ans.<span class="built_in">begin</span>(),ans.<span class="built_in">end</span>());</span><br><span class="line">    cout&lt;&lt;ans.<span class="built_in">size</span>()&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;ans.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (i) cout&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        cout&lt;&lt;ans[i];</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这题还是很有意思的。</p><p>我看到这一题的第一反应是单调栈，第二反应是前后缀最大最小值。</p><p>不知道单调栈的下面几行可以不用看了，等下我会写一篇前后缀最大最小值的题解</p><p>由于我前几天刚刚温习了一下单调栈，就用单调栈写了，实际上前后缀的做法是更好理解的。</p><p>如果这个元素满足条件，那么在它前面一定没有比它大的元素，在它的后面一定没有比他小的元素，那么很简单，单调栈就呼之欲出了。</p><p>单调栈算法比较常见的应用场景是寻找左右边第一个大于&#x2F;小于自己的元素，并且在另一个数组容器中存储下标。而这一题我们也去找找。如果能找到，就存他的下标，找不到就把这个值设定为-1。</p><p>最后我们去遍历数组中元素，如果他的两个单调栈数组值都是-1，那么就说明这个元素符合条件，存入ans数组（这里我一定要吐槽啊，其实可以直接输出的，但是PAT天天都要求最后一个元素不能有空格）</p><p>然后输出ans数组就可以了。</p><p>小心有一个测试点很毒瘤，会报格式错误，我找了半天格式问题。</p><p>前后缀和最大最小值解：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);<span class="comment">//这两行可以不用在意</span></span><br><span class="line">    <span class="type">int</span> n; <span class="keyword">if</span>(!(cin&gt;&gt;n)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) cin&gt;&gt;a[i];</span><br><span class="line"></span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">leftMax</span><span class="params">(n)</span>, <span class="title">rightMin</span><span class="params">(n)</span></span>;</span><br><span class="line">    leftMax[<span class="number">0</span>]=a[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++) leftMax[i]=<span class="built_in">max</span>(leftMax[i<span class="number">-1</span>], a[i]);</span><br><span class="line">    rightMin[n<span class="number">-1</span>]=a[n<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=n<span class="number">-2</span>;i&gt;=<span class="number">0</span>;i--) rightMin[i]=<span class="built_in">min</span>(rightMin[i<span class="number">+1</span>], a[i]);</span><br><span class="line"></span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; ans;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> ( (i==<span class="number">0</span> || a[i] &gt;= leftMax[i<span class="number">-1</span>]) &amp;&amp; (i==n<span class="number">-1</span> || a[i] &lt;= rightMin[i<span class="number">+1</span>]) )</span><br><span class="line">            ans.<span class="built_in">push_back</span>(a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(ans.<span class="built_in">begin</span>(), ans.<span class="built_in">end</span>());</span><br><span class="line">    cout &lt;&lt; ans.<span class="built_in">size</span>() &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;ans.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (i) cout &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        cout &lt;&lt; ans[i];</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个的做法也相当简单了，就是找到左右边的最大最小值，然后判断条件就行了，和leetcode那题接雨水有点像。</p><p>我是推荐写第二种方法的，当然第一种方法也是不错的，更有“算法竞赛”味不是？</p><p>单调栈win在复用性和模板性更强，前缀和win在更好理解。</p><h2 id="1046"><a href="#1046" class="headerlink" title="1046"></a>1046</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,numa,numb,ha,hb,wina=<span class="number">0</span>,winb=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span> (n--)&#123;</span><br><span class="line">        cin&gt;&gt;numa&gt;&gt;ha&gt;&gt;numb&gt;&gt;hb;</span><br><span class="line">        <span class="type">int</span> sum=numa+numb;</span><br><span class="line">        <span class="keyword">if</span> (sum==ha&amp;&amp;sum!=hb)&#123;</span><br><span class="line">            wina++;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(sum==hb&amp;sum!=ha)&#123;</span><br><span class="line">            winb++;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;winb&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;wina;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个不会做抓出去打，放在洛谷最多红题。</p><h2 id="1047"><a href="#1047" class="headerlink" title="1047"></a>1047</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,team,man,score;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    unordered_map&lt;<span class="type">int</span>,<span class="type">int</span>&gt; sum;</span><br><span class="line">    set&lt;<span class="type">int</span>&gt; key1;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d-%d %d&quot;</span>,&amp;team,&amp;man,&amp;score);</span><br><span class="line">        sum[team]+=score;</span><br><span class="line">        key<span class="number">1.</span><span class="built_in">insert</span>(team);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> maxx=<span class="number">0</span>,maxteam;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> it:key1)&#123;</span><br><span class="line">        <span class="keyword">if</span> (sum[it]&gt;maxx)&#123;</span><br><span class="line">            maxx=sum[it];</span><br><span class="line">            maxteam=it;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;maxteam&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;maxx;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>关于map类的应用我已经懒得赘述了，前面考了那么多应该要会了。</p><h2 id="1048"><a href="#1048" class="headerlink" title="1048"></a>1048</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">string a, b;</span><br><span class="line"><span class="type">char</span> s[<span class="number">15</span>] = &#123;<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;4&#x27;</span>,<span class="string">&#x27;5&#x27;</span>,<span class="string">&#x27;6&#x27;</span>,<span class="string">&#x27;7&#x27;</span>,<span class="string">&#x27;8&#x27;</span>,<span class="string">&#x27;9&#x27;</span>,<span class="string">&#x27;J&#x27;</span>,<span class="string">&#x27;Q&#x27;</span>,<span class="string">&#x27;K&#x27;</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 右对齐：补齐长度</span></span><br><span class="line">    <span class="keyword">while</span> (a.<span class="built_in">size</span>() &lt; b.<span class="built_in">size</span>()) a = <span class="string">&quot;0&quot;</span> + a;</span><br><span class="line">    <span class="keyword">while</span> (b.<span class="built_in">size</span>() &lt; a.<span class="built_in">size</span>()) b = <span class="string">&quot;0&quot;</span> + b;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> x, y, n;</span><br><span class="line">    <span class="type">int</span> len = b.<span class="built_in">size</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = len - <span class="number">1</span>, k = <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--, k++) &#123;  <span class="comment">// k 从 1 开始，表示第 k 位（从右往左数）</span></span><br><span class="line">        x = b[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        y = a[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> (k % <span class="number">2</span> == <span class="number">1</span>) &#123; <span class="comment">// 奇数位</span></span><br><span class="line">            n = (x + y) % <span class="number">13</span>;</span><br><span class="line">            b[i] = s[n];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;          <span class="comment">// 偶数位</span></span><br><span class="line">            n = x - y;</span><br><span class="line">            <span class="keyword">if</span> (n &lt; <span class="number">0</span>) n += <span class="number">10</span>;</span><br><span class="line">            b[i] = s[n];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; b &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意一下a和b不一样长的问题。</p><h2 id="1049"><a href="#1049" class="headerlink" title="1049"></a>1049</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="type">long</span> <span class="type">double</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">long</span> <span class="type">long</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">        <span class="type">long</span> <span class="type">double</span> x;</span><br><span class="line">        cin&gt;&gt;x;</span><br><span class="line">        sum+=x*(<span class="type">long</span> <span class="type">double</span>)(i<span class="number">+1</span>)*(n-i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2Lf\n&quot;</span>,sum); <span class="comment">// 末尾加换行避免格式错误</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我想，一定有小聪明蛋一开始想着前缀和，然后写出一个前缀和加双向遍历，喜提15分挂了两个测试点</p><p>因为时间复杂度n2了啊还能因为什么，自己想想是不是每个元素都被遍历了两次（</p><p>但这题本质上是数学题。</p><p>具体思路自己ai一下，我打不出公式</p><h2 id="1050"><a href="#1050" class="headerlink" title="1050"></a>1050</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(a.<span class="built_in">begin</span>(),a.<span class="built_in">end</span>(),<span class="built_in">greater</span>&lt;<span class="type">int</span>&gt;());</span><br><span class="line">    <span class="type">int</span> x=<span class="number">1</span>,y=n,j,minn=<span class="number">10000</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i*i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (n%i==<span class="number">0</span>)&#123;</span><br><span class="line">            j=n/i;</span><br><span class="line">            <span class="keyword">if</span> (j-i&lt;minn)&#123;</span><br><span class="line">                x=i;</span><br><span class="line">                y=j;</span><br><span class="line">                minn=j-i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> left=<span class="number">0</span>,right=x<span class="number">-1</span>,topp=<span class="number">0</span>,bottom=y<span class="number">-1</span>;</span><br><span class="line">    <span class="type">int</span> cur=<span class="number">0</span>;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">ans</span>(y,<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(x));</span><br><span class="line">    <span class="keyword">while</span> (topp&lt;=bottom&amp;&amp;left&lt;=right)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=left;i&lt;=right;i++)&#123;</span><br><span class="line">            ans[topp][i]=a[cur];</span><br><span class="line">            cur++;</span><br><span class="line">        &#125;</span><br><span class="line">        ++topp;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=topp;i&lt;=bottom;i++)&#123;</span><br><span class="line">            ans[i][right]=a[cur];</span><br><span class="line">            cur++;</span><br><span class="line">        &#125;</span><br><span class="line">        --right;</span><br><span class="line">        <span class="keyword">if</span> (topp&lt;=bottom)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i=right;i&gt;=left;i--)&#123;</span><br><span class="line">                ans[bottom][i]=a[cur];</span><br><span class="line">                cur++;</span><br><span class="line">            &#125;</span><br><span class="line">            --bottom;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (left&lt;=right)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i=bottom;i&gt;=topp;i--)&#123;</span><br><span class="line">                ans[i][left]=a[cur];</span><br><span class="line">                cur++;</span><br><span class="line">            &#125;</span><br><span class="line">            left++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;y;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>;j&lt;x;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (j==x<span class="number">-1</span>)&#123;</span><br><span class="line">                cout&lt;&lt;ans[i][j];</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                cout&lt;&lt;ans[i][j]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>螺旋矩阵，数组类模拟最长的河最高的山，在2014年的NOIP普及组T3就是这个</p><p>螺旋矩阵事实上有一个用DFS的做法，但是别想那个了，那个包超时的，我以前练搜索的时候写过一次，递归层数太高了（等下下面贴上洛谷螺旋矩阵我的DFS做法）（找不到了，怎么回事呢）</p><p>为什么用模拟，很简单，模拟是最优算法。</p><p>这一题还和普通的螺旋矩阵不一样，它顺带要自己求长和宽。我们直接预设长和宽，然后从1开始到sqrt（n）进行遍历，这样子做可以确保我们用于遍历的变量i始终是相对小的那一个，然后用常规方法就可以求出长和宽了。</p><p>由于PTA的神必测评机，我特别喜欢把数据先存到数组里面然后再统一输出答案，然后看看螺旋矩阵最核心的部分，我们建立一个while循环，并且确定这个矩阵左右上下边界，先从最上面从左到右，接着再从上到下。每一次这个过程结束我们都需要剥去已经被填充了数字的那一层，即类似于我31行和36行的写法。最后输出答案。</p><h2 id="1051"><a href="#1051" class="headerlink" title="1051"></a>1051</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">double</span> r1,p1,r2,p2;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;r1&gt;&gt;p1&gt;&gt;r2&gt;&gt;p2;</span><br><span class="line">    <span class="type">double</span> r=r1*r2;</span><br><span class="line">    <span class="type">double</span> p=p1+p2;</span><br><span class="line">    <span class="type">double</span> a=r*<span class="built_in">cos</span>(p);</span><br><span class="line">    <span class="type">double</span> b=r*<span class="built_in">sin</span>(p);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">fabs</span>(a)&lt;<span class="number">0.005</span>) a=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">fabs</span>(b)&lt;<span class="number">0.005</span>) b=<span class="number">0</span>;<span class="comment">//注意浮点误差</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (b&lt;<span class="number">0</span>)&#123;</span><br><span class="line">        b=-b;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.2f-%.2fi&quot;</span>,a,b);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.2f+%.2fi&quot;</span>,a,b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>题目只有一个坑点，但是这个坑点覆盖了两个测试点，如果不注意你将失去两分。</p><p>浮点误差，很重要。</p><h2 id="1052"><a href="#1052" class="headerlink" title="1052"></a>1052</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">vector&lt;string&gt; hand, eyes, mouth;</span><br><span class="line">string s;</span><br><span class="line"><span class="type">int</span> n, a, b, c, d, e;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">parse</span><span class="params">(vector&lt;string&gt; &amp;v)</span> </span>&#123;</span><br><span class="line">    string word;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; (<span class="type">int</span>)s.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (s[i] == <span class="string">&#x27;[&#x27;</span>) &#123;</span><br><span class="line">            word.<span class="built_in">clear</span>();</span><br><span class="line">            <span class="type">bool</span> found = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = i + <span class="number">1</span>; j &lt; (<span class="type">int</span>)s.<span class="built_in">size</span>(); j++) &#123; <span class="comment">// ✅ 加上 j &lt; s.size()</span></span><br><span class="line">                <span class="keyword">if</span> (s[j] == <span class="string">&#x27;]&#x27;</span>) &#123;</span><br><span class="line">                    v.<span class="built_in">push_back</span>(word);</span><br><span class="line">                    i = j;  <span class="comment">// ✅ 跳过已经处理的区间，避免重复</span></span><br><span class="line">                    found = <span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    word += s[j];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (!found) <span class="keyword">break</span>; <span class="comment">// ✅ 没找到 &#x27;]&#x27; 直接退出，避免死循环</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">getline</span>(cin, s);</span><br><span class="line">    <span class="built_in">parse</span>(hand);</span><br><span class="line">    <span class="built_in">getline</span>(cin, s);</span><br><span class="line">    <span class="built_in">parse</span>(eyes);</span><br><span class="line">    <span class="built_in">getline</span>(cin, s);</span><br><span class="line">    <span class="built_in">parse</span>(mouth);</span><br><span class="line"></span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">while</span> (n--) &#123;</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; b &gt;&gt; c &gt;&gt; d &gt;&gt; e;</span><br><span class="line">        <span class="comment">// ✅ 增加下界检查，避免 0 和负数导致崩溃</span></span><br><span class="line">        <span class="keyword">if</span> (a &lt; <span class="number">1</span> || b &lt; <span class="number">1</span> || c &lt; <span class="number">1</span> || d &lt; <span class="number">1</span> || e &lt; <span class="number">1</span> ||</span><br><span class="line">            a &gt; (<span class="type">int</span>)hand.<span class="built_in">size</span>() || b &gt; (<span class="type">int</span>)eyes.<span class="built_in">size</span>() ||</span><br><span class="line">            c &gt; (<span class="type">int</span>)mouth.<span class="built_in">size</span>() || d &gt; (<span class="type">int</span>)eyes.<span class="built_in">size</span>() ||</span><br><span class="line">            e &gt; (<span class="type">int</span>)hand.<span class="built_in">size</span>()) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;Are you kidding me? @\\/@\n&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            cout &lt;&lt; hand[a - <span class="number">1</span>] &lt;&lt; <span class="string">&quot;(&quot;</span> &lt;&lt; eyes[b - <span class="number">1</span>] &lt;&lt; mouth[c - <span class="number">1</span>] &lt;&lt; eyes[d - <span class="number">1</span>] &lt;&lt; <span class="string">&quot;)&quot;</span> &lt;&lt; hand[e - <span class="number">1</span>] &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最难的地方在于把那几个符号全部搓出来，然后没了。</p><h2 id="1053"><a href="#1053" class="headerlink" title="1053"></a>1053</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n, d;</span><br><span class="line">    <span class="type">double</span> e;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;e&gt;&gt;d;</span><br><span class="line">    <span class="type">int</span> maybe=<span class="number">0</span>, must=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt;n;i++) &#123;</span><br><span class="line">        <span class="type">int</span> k;</span><br><span class="line">        cin&gt;&gt;k;</span><br><span class="line">        <span class="type">int</span> day=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>;j&lt;k;j++) &#123;</span><br><span class="line">            <span class="type">double</span> ei;</span><br><span class="line">            cin&gt;&gt;ei;</span><br><span class="line">            <span class="keyword">if</span> (ei&lt;e) day++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (k&lt;=d&amp;&amp;day&gt;k/<span class="number">2.0</span>) &#123;</span><br><span class="line">            maybe++;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (k&gt;d&amp;&amp;day&gt;k/<span class="number">2.0</span>) &#123; </span><br><span class="line">            must++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.1f%% %.1f%%&quot;</span>,maybe*<span class="number">100.0</span>/n,must*<span class="number">100.0</span>/n);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1054"><a href="#1054" class="headerlink" title="1054"></a>1054</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n; string num;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isnum</span><span class="params">(string a)</span></span>&#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        <span class="type">size_t</span> idx;</span><br><span class="line">        <span class="built_in">stod</span>(a,&amp;idx);</span><br><span class="line">        <span class="keyword">if</span>(idx!=a.<span class="built_in">size</span>()) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;<span class="built_in">catch</span>(...)&#123; <span class="keyword">return</span> <span class="literal">false</span>; &#125;</span><br><span class="line">    <span class="type">int</span> dot=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">char</span> c:a) <span class="keyword">if</span>(c==<span class="string">&#x27;.&#x27;</span>) dot++;</span><br><span class="line">    <span class="keyword">if</span>(dot&gt;<span class="number">1</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="type">size_t</span> pos=a.<span class="built_in">find</span>(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span>(pos!=string::npos &amp;&amp; a.<span class="built_in">size</span>()-pos<span class="number">-1</span>&gt;<span class="number">2</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="type">double</span> val=<span class="built_in">stod</span>(a);</span><br><span class="line">    <span class="keyword">return</span> !(val&lt;<span class="number">-1000</span>||val&gt;<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="type">double</span> sum=<span class="number">0</span>; <span class="type">int</span> m=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;num;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">isnum</span>(num)) sum+=<span class="built_in">stod</span>(num),m++;</span><br><span class="line">        <span class="keyword">else</span> cout&lt;&lt;<span class="string">&quot;ERROR: &quot;</span>&lt;&lt;num&lt;&lt;<span class="string">&quot; is not a legal number&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(m==<span class="number">0</span>) cout&lt;&lt;<span class="string">&quot;The average of 0 numbers is Undefined\n&quot;</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(m==<span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">&quot;The average of 1 number is %.2f\n&quot;</span>,sum);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;The average of %d numbers is %.2f\n&quot;</span>,m,sum/m);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>依旧字符串模拟</p><p>讲一下那个try怎么用的</p><blockquote><p>你上一题的代码里 <code>try</code> 的作用就是<strong>安全地用 <code>stod</code> 把字符串转换成数字</strong>，防止程序崩溃。</p><p>我们看一下关键部分：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isnum</span><span class="params">(string a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="type">size_t</span> idx;</span><br><span class="line">        <span class="built_in">stod</span>(a, &amp;idx);</span><br><span class="line">        <span class="keyword">if</span> (idx != a.<span class="built_in">size</span>()) <span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">// 有多余字符</span></span><br><span class="line">    &#125; <span class="built_in">catch</span> (...) &#123;  <span class="comment">// ← 这里就是 try 的作用</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>🔎 <strong>执行流程：</strong></p><ol><li><p><code>stod(a, &amp;idx)</code> 试图把字符串 <code>a</code> 转成 <code>double</code>。</p></li><li><p>如果 <code>a</code> 是非法字符串（比如 <code>&quot;abc&quot;</code>, <code>&quot;12..3&quot;</code>, <code>&quot;1e9999&quot;</code>），<code>stod</code> 会<strong>抛出异常</strong>：</p><ul><li><code>std::invalid_argument</code>（无法转换，比如 <code>abc</code>）</li><li><code>std::out_of_range</code>（数字太大，比如 <code>1e9999</code>）</li></ul></li><li><p><code>try</code> 会捕获到异常，不让程序崩溃，立刻跳到 <code>catch(...)</code> 执行：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">catch</span> (...) &#123; <span class="keyword">return</span> <span class="literal">false</span>; &#125;</span><br></pre></td></tr></table></figure><p>表示这个字符串不合法。</p></li></ol><p>如果没有 <code>try/catch</code>，遇到非法字符串时程序会直接终止（运行时错误）。</p><hr><p>✅ <strong>简化理解：</strong></p><ul><li><code>try</code> &#x3D; 让程序“试一试”执行里面的代码</li><li>如果成功就继续往下走</li><li>如果失败（抛异常），就去 <code>catch</code> 执行，把错误“接住”</li><li>不会让程序崩溃</li></ul></blockquote><h2 id="1055"><a href="#1055" class="headerlink" title="1055"></a>1055</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">stu</span>&#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">    <span class="type">int</span> h;</span><br><span class="line">    string name;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(stu x,stu y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x.h==y.h)&#123;</span><br><span class="line">        <span class="keyword">return</span> x.name&lt;y.name;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x.h&gt;y.h;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> n,k;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    <span class="function">vector&lt;stu&gt; <span class="title">a</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;a[i].name&gt;&gt;a[i].h;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(a.<span class="built_in">begin</span>(),a.<span class="built_in">end</span>(),cmp);</span><br><span class="line">    <span class="type">int</span> aft=n%k+n/k;</span><br><span class="line">    deque&lt;string&gt; d;</span><br><span class="line">    <span class="type">int</span> flag=<span class="number">0</span>,cur=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (d.<span class="built_in">size</span>()&lt;aft)&#123;</span><br><span class="line">        <span class="keyword">if</span> (flag==<span class="number">0</span>)&#123;</span><br><span class="line">            d.<span class="built_in">push_back</span>(a[cur].name);</span><br><span class="line">            flag=<span class="number">1</span>;</span><br><span class="line">            cur++;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            d.<span class="built_in">push_front</span>(a[cur].name);</span><br><span class="line">            flag=<span class="number">0</span>;</span><br><span class="line">            cur++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;string&gt; after;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> it:d)&#123;</span><br><span class="line">        after.<span class="built_in">push_back</span>(d.<span class="built_in">front</span>());</span><br><span class="line">        d.<span class="built_in">pop_front</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;after.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (i==after.<span class="built_in">size</span>()<span class="number">-1</span>)&#123;</span><br><span class="line">            cout&lt;&lt;after[i]&lt;&lt;endl;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            cout&lt;&lt;after[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    d.<span class="built_in">clear</span>();</span><br><span class="line">    <span class="keyword">while</span> (cur&lt;n)&#123;</span><br><span class="line">        vector&lt;string&gt; ans;</span><br><span class="line">        <span class="type">int</span> flag1=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (d.<span class="built_in">size</span>()&lt;n/k)&#123;</span><br><span class="line">            <span class="keyword">if</span> (flag1==<span class="number">0</span>)&#123;</span><br><span class="line">                d.<span class="built_in">push_back</span>(a[cur].name);</span><br><span class="line">                cur++;</span><br><span class="line">                flag1=<span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                d.<span class="built_in">push_front</span>(a[cur].name);</span><br><span class="line">                cur++;</span><br><span class="line">                flag1=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> it:d)&#123;</span><br><span class="line">            ans.<span class="built_in">push_back</span>(d.<span class="built_in">front</span>());</span><br><span class="line">            d.<span class="built_in">pop_front</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;ans.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (i==ans.<span class="built_in">size</span>()<span class="number">-1</span>)&#123;</span><br><span class="line">                cout&lt;&lt;ans[i]&lt;&lt;endl;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                cout&lt;&lt;ans[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ans.<span class="built_in">clear</span>();</span><br><span class="line">        d.<span class="built_in">clear</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>双端队列最王朝的一集，还有人质疑吗？</p><p>我们把最特殊的最后一排单独拉出来处理，最后一排的计算公式是n%k+n&#x2F;k，如果n可以被k整除，那么每排就是n&#x2F;k人，如果不能，我们就把余数的那些人（n%k）加上去，也就是最后得到了n%k+n&#x2F;k。</p><p>依次读入每个学生类的名字与身高，再写一个cmp函数用来对这些同学进行排序（其实这里可以用匿名函数的写法，不过那样子写会让代码可读性降低）</p><p>先处理最后一排的人，我们让排序后数组的元素依次交错入列，这样子就可以保证类似“山”形的排列，一旦队列中的元素数量等于我们预先设定好的人数，那么就直接退出。</p><p>其实这里可以直接遍历队列输出的，但你知道的，PTA的神必测评机对最后一个数据的空格要求比较严苛，所以我这里还是另外开了一个数组用来输出答案。</p><p>处理完最后一排，应该可以发现我预先设定的cur变量已经指向了非最后一排的第一个元素，那么接下来处理常规情况，建立一个while循环，当cur&lt;n的时候持续进行。在循环内部，设置一个答案数组，以及原本的双端队列，然后处理方式和上面一样，只不过要记得使用完清理掉数组和队列中的元素。</p><h2 id="1056"><a href="#1056" class="headerlink" title="1056"></a>1056</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> u=<span class="number">1</span>&lt;&lt;n;</span><br><span class="line">    <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    set&lt;<span class="type">int</span>&gt; s;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;u;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (__builtin_popcount(i)==<span class="number">2</span>)&#123;<span class="comment">//这个内层的意思是这个二进制数里有几个1.</span></span><br><span class="line">            vector&lt;<span class="type">int</span>&gt; b;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (i&amp;(<span class="number">1</span>&lt;&lt;j))&#123;</span><br><span class="line">                    b.<span class="built_in">push_back</span>(a[j]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">int</span> x=<span class="number">10</span>*b[<span class="number">0</span>]+b[<span class="number">1</span>];</span><br><span class="line">            <span class="type">int</span> y=<span class="number">10</span>*b[<span class="number">1</span>]+b[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">if</span> (s.<span class="built_in">find</span>(x)==s.<span class="built_in">end</span>()&amp;&amp;s.<span class="built_in">find</span>(y)==s.<span class="built_in">end</span>())&#123;</span><br><span class="line">                <span class="keyword">if</span> (x==y)&#123;</span><br><span class="line">                    sum+=x;</span><br><span class="line">                    s.<span class="built_in">insert</span>(x);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    sum+=(x+y);</span><br><span class="line">                    s.<span class="built_in">insert</span>(x);</span><br><span class="line">                    s.<span class="built_in">insert</span>(y);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;sum&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>选数类问题是一系列比较抽象的问题，在不同的数据范围内有不同的解法，例如这一题最优的解法其实应该是双重循环，但我用了位掩码的做法只是想练一下这个写法。</p><p>一般而言，在选的数数量非常小的情况下，循环是更快的，虽然很笨，但真的很快。但是一旦要选取的数数量变多了，循环就会显的非常繁琐，这时候位掩码的作用就出来了。</p><p>事实上，位掩码也有很大的局限性，例如在总共数数量大于20，那么就会立刻超时，适用范围是总数少，但要选的数数量多。</p><table><thead><tr><th>n 的规模</th><th>k 的规模</th><th>最优解法建议</th></tr></thead><tbody><tr><td><strong>n ≤ 20</strong></td><td>任意 k</td><td><strong>位掩码枚举</strong>，复杂度 O(2^n · n)，暴力可行</td></tr><tr><td><strong>n ≤ 30, k 很小</strong></td><td>k ≤ 5~6</td><td><strong>回溯&#x2F;DFS 枚举组合</strong>，复杂度 O( C(n,k) · k )</td></tr><tr><td><strong>n 很大 (n ≥ 10^5)</strong></td><td>k&#x3D;2 或 k&#x3D;3</td><td><strong>双重&#x2F;三重循环</strong> 或者 <strong>数学公式</strong>，复杂度 O(n²) 或 O(n³)，注意优化</td></tr><tr><td><strong>n 很大 (n ≥ 10^5)</strong></td><td>k 不固定</td><td>需要 <strong>动态规划 &#x2F; 前缀和 &#x2F; 状态压缩 DP</strong>，避免显式枚举子集</td></tr></tbody></table><p>所以这题其实挺有意思的，分数虽然不多，但是可以引申出一类题目。</p><h2 id="1057"><a href="#1057" class="headerlink" title="1057"></a>1057</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">string a;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">getline</span>(cin,a);</span><br><span class="line">    <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">char</span> c:a)&#123;</span><br><span class="line">        <span class="keyword">if</span> (c&gt;=<span class="string">&#x27;a&#x27;</span>&amp;&amp;c&lt;=<span class="string">&#x27;z&#x27;</span>)&#123;</span><br><span class="line">            sum+=c-<span class="string">&#x27;a&#x27;</span><span class="number">+1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(c&gt;=<span class="string">&#x27;A&#x27;</span>&amp;&amp;c&lt;=<span class="string">&#x27;Z&#x27;</span>)&#123;</span><br><span class="line">            sum+=c-<span class="string">&#x27;A&#x27;</span><span class="number">+1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (sum!=<span class="number">0</span>)&#123;</span><br><span class="line">    <span class="type">int</span> ans1=<span class="number">0</span>,ans0=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (sum&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="type">int</span> t=sum%<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (t==<span class="number">1</span>)&#123;</span><br><span class="line">            ans1++;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            ans0++;</span><br><span class="line">        &#125;</span><br><span class="line">        sum/=<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans0&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;ans1;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="number">0</span>&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1058"><a href="#1058" class="headerlink" title="1058"></a>1058</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> N, M;</span><br><span class="line">    <span class="keyword">if</span> (!(cin &gt;&gt; N &gt;&gt; M)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">score</span><span class="params">(M)</span></span>;</span><br><span class="line">    vector&lt; set&lt;<span class="type">char</span>&gt; &gt; <span class="built_in">correct</span>(M);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; M; ++i) &#123;</span><br><span class="line">        <span class="type">int</span> full, optCnt, corCnt;</span><br><span class="line">        cin &gt;&gt; full &gt;&gt; optCnt &gt;&gt; corCnt;</span><br><span class="line">        score[i] = full;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; corCnt; ++j) &#123;</span><br><span class="line">            <span class="type">char</span> c; cin &gt;&gt; c;</span><br><span class="line">            correct[i].<span class="built_in">insert</span>(c);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 读取到行尾，准备读取学生每一行</span></span><br><span class="line">    string line;</span><br><span class="line">    <span class="built_in">getline</span>(cin, line); <span class="comment">// 吃掉当前行末的换行</span></span><br><span class="line"></span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">wrong_cnt</span><span class="params">(M, <span class="number">0</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> stu = <span class="number">0</span>; stu &lt; N; ++stu) &#123;</span><br><span class="line">        <span class="built_in">getline</span>(cin, line);</span><br><span class="line">        <span class="type">int</span> total = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 逐题解析：按每个 &#x27;(&#x27; ... &#x27;)&#x27; 块解析</span></span><br><span class="line">        <span class="type">int</span> idx = <span class="number">0</span>; <span class="comment">// 当前题目索引</span></span><br><span class="line">        <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> L = (<span class="type">int</span>)line.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">while</span> (i &lt; L &amp;&amp; idx &lt; M) &#123;</span><br><span class="line">            <span class="comment">// 寻找 &#x27;(&#x27;</span></span><br><span class="line">            <span class="keyword">while</span> (i &lt; L &amp;&amp; line[i] != <span class="string">&#x27;(&#x27;</span>) ++i;</span><br><span class="line">            <span class="keyword">if</span> (i &gt;= L) <span class="keyword">break</span>;</span><br><span class="line">            ++i; <span class="comment">// 跳过 &#x27;(&#x27;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 读取选中个数（整数，可能多位）</span></span><br><span class="line">            <span class="keyword">while</span> (i &lt; L &amp;&amp; line[i] == <span class="string">&#x27; &#x27;</span>) ++i;</span><br><span class="line">            <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (i &lt; L &amp;&amp; <span class="built_in">isdigit</span>(line[i])) &#123;</span><br><span class="line">                cnt = cnt * <span class="number">10</span> + (line[i] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">                ++i;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 读取 cnt 个选项字母</span></span><br><span class="line">            set&lt;<span class="type">char</span>&gt; chosen;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> t = <span class="number">0</span>; t &lt; cnt; ++t) &#123;</span><br><span class="line">                <span class="keyword">while</span> (i &lt; L &amp;&amp; !<span class="built_in">isalpha</span>(line[i])) ++i;</span><br><span class="line">                <span class="keyword">if</span> (i &lt; L &amp;&amp; <span class="built_in">isalpha</span>(line[i])) &#123;</span><br><span class="line">                    chosen.<span class="built_in">insert</span>(line[i]);</span><br><span class="line">                    ++i;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 跳到 &#x27;)&#x27; （或者继续）</span></span><br><span class="line">            <span class="keyword">while</span> (i &lt; L &amp;&amp; line[i] != <span class="string">&#x27;)&#x27;</span>) ++i;</span><br><span class="line">            <span class="keyword">if</span> (i &lt; L &amp;&amp; line[i] == <span class="string">&#x27;)&#x27;</span>) ++i;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 判分：全部正确才给分</span></span><br><span class="line">            <span class="keyword">if</span> (chosen == correct[idx]) &#123;</span><br><span class="line">                total += score[idx];</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                wrong_cnt[idx] += <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            ++idx; <span class="comment">// 处理下一题</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        cout &lt;&lt; total &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 统计错得最多的题</span></span><br><span class="line">    <span class="type">int</span> max_wrong = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; M; ++i) max_wrong = <span class="built_in">max</span>(max_wrong, wrong_cnt[i]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (max_wrong == <span class="number">0</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Too simple\n&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 收集所有达到最大错题数的题号（1-based）</span></span><br><span class="line">        vector&lt;<span class="type">int</span>&gt; ans;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; M; ++i) <span class="keyword">if</span> (wrong_cnt[i] == max_wrong) ans.<span class="built_in">push_back</span>(i + <span class="number">1</span>);</span><br><span class="line">        <span class="comment">// 输出格式：次数 + 空格 + 题号列表</span></span><br><span class="line">        cout &lt;&lt; max_wrong;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> x : ans) cout &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; x;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>很无趣，纯粹的大模拟，就单纯恶心你来的，你看我用AI你就知道了。</p><p>出题人超级喜欢字符串分割，我已经无力去喷了。</p><h2 id="1059"><a href="#1059" class="headerlink" title="1059"></a>1059</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,k,mm;</span><br><span class="line">string a;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isprime</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x==<span class="number">1</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (x==<span class="number">2</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">2</span>;i*i&lt;=x;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (x%i==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="function">vector&lt;string&gt; <span class="title">add</span><span class="params">(n)</span></span>;</span><br><span class="line">    set&lt;string&gt; s;</span><br><span class="line">    unordered_map&lt;string,<span class="type">int</span>&gt; m;</span><br><span class="line">    unordered_map&lt;string,string&gt; ans;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;add[i];</span><br><span class="line">        s.<span class="built_in">insert</span>(add[i]);</span><br><span class="line">        m[add[i]]++;</span><br><span class="line">        <span class="keyword">if</span> (i==<span class="number">0</span>)&#123;</span><br><span class="line">            ans[add[i]]=<span class="string">&quot;Mystery Award&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">isprime</span>(i<span class="number">+1</span>))&#123;</span><br><span class="line">            ans[add[i]]=<span class="string">&quot;Minion&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            ans[add[i]]=<span class="string">&quot;Chocolate&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cin&gt;&gt;mm;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;mm;i++)&#123;</span><br><span class="line">        cin&gt;&gt;a;</span><br><span class="line">        <span class="keyword">if</span> (s.<span class="built_in">find</span>(a)==s.<span class="built_in">end</span>())&#123;</span><br><span class="line">            cout&lt;&lt;a&lt;&lt;<span class="string">&quot;: Are you kidding?&quot;</span>&lt;&lt;endl;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(s.<span class="built_in">find</span>(a)!=s.<span class="built_in">end</span>()&amp;&amp;m[a]&gt;<span class="number">1</span>)&#123;</span><br><span class="line">            cout&lt;&lt;a&lt;&lt;<span class="string">&quot;: Checked&quot;</span>&lt;&lt;endl;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(s.<span class="built_in">find</span>(a)!=s.<span class="built_in">end</span>()&amp;&amp;m[a]==<span class="number">1</span>)&#123;</span><br><span class="line">            m[a]++;</span><br><span class="line">            cout&lt;&lt;a&lt;&lt;<span class="string">&quot;: &quot;</span>&lt;&lt;ans[a]&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1060"><a href="#1060" class="headerlink" title="1060"></a>1060</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> l,r,ans=<span class="number">0</span>;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; a;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">can</span><span class="params">(<span class="type">int</span> m)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i]&gt;m)&#123;<span class="comment">//我头几次这里写成&gt;=了没发现，改了半天才找到。</span></span><br><span class="line">            sum++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (sum&gt;m)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        cin&gt;&gt;x;</span><br><span class="line">        a.<span class="built_in">push_back</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(a.<span class="built_in">begin</span>(),a.<span class="built_in">end</span>());<span class="comment">//多余的，我拿来调试用的。</span></span><br><span class="line">    l=<span class="number">0</span>;</span><br><span class="line">    r=<span class="number">100010</span>;</span><br><span class="line">    <span class="keyword">while</span> (l&lt;=r)&#123;</span><br><span class="line">        <span class="type">int</span> mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">can</span>(mid))&#123;</span><br><span class="line">            l=mid<span class="number">+1</span>;</span><br><span class="line">            ans=mid;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            r=mid<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>纯粹的二分答案，极致的享受。</p><p>我们找到上下界，然后进行二分答案，写一个函数来判断这个答案能否满足结果，如果可以，修改边界收集答案，如果不行，再修改边界。循环结束就是答案。</p><p>如果对STL函数熟悉的应该可以知道，这题还有一个更加超标的解法那就是lower_bound与upper_bound函数</p><blockquote><h1 id="lower-bound-与-upper-bound-函数详解"><a href="#lower-bound-与-upper-bound-函数详解" class="headerlink" title="lower_bound 与 upper_bound 函数详解"></a><code>lower_bound</code> 与 <code>upper_bound</code> 函数详解</h1><p>在 C++ 标准库中，<code>lower_bound</code> 和 <code>upper_bound</code> 是两个非常实用的二分查找算法函数，它们都定义在 <code>&lt;algorithm&gt;</code> 头文件中。这两个函数用于在<strong>已排序</strong>的序列中查找特定值的位置。</p><h2 id="1-lower-bound"><a href="#1-lower-bound" class="headerlink" title="1. lower_bound"></a>1. <code>lower_bound</code></h2><h3 id="功能："><a href="#功能：" class="headerlink" title="功能："></a>功能：</h3><p>在有序序列中查找第一个<strong>大于或等于</strong>目标值的元素位置。</p><h3 id="函数原型："><a href="#函数原型：" class="headerlink" title="函数原型："></a>函数原型：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">template &lt;class ForwardIterator, class T&gt;</span><br><span class="line">ForwardIterator lower_bound(ForwardIterator first, ForwardIterator last, const T&amp; val);</span><br></pre></td></tr></table></figure><h3 id="参数："><a href="#参数：" class="headerlink" title="参数："></a>参数：</h3><ul><li><code>first</code>, <code>last</code>：前向迭代器，表示要查找的范围（左闭右开区间）</li><li><code>val</code>：要查找的目标值</li></ul><h3 id="返回值："><a href="#返回值：" class="headerlink" title="返回值："></a>返回值：</h3><ul><li>返回指向序列中第一个<strong>大于或等于</strong><code>val</code> 的元素的迭代器</li><li>如果所有元素都小于<code>val</code>，则返回<code>last</code></li></ul><h3 id="示例："><a href="#示例：" class="headerlink" title="示例："></a>示例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vector&lt;int&gt; v = &#123;1, 3, 3, 5, 7, 9&#125;;</span><br><span class="line"></span><br><span class="line">// 查找第一个 &gt;= 3 的元素</span><br><span class="line">auto it = lower_bound(v.begin(), v.end(), 3); // 指向第一个3（索引1）</span><br><span class="line"></span><br><span class="line">// 查找第一个 &gt;= 4 的元素</span><br><span class="line">it = lower_bound(v.begin(), v.end(), 4); // 指向5（索引3）</span><br><span class="line"></span><br><span class="line">// 查找第一个 &gt;= 10 的元素</span><br><span class="line">it = lower_bound(v.begin(), v.end(), 10); // 返回 v.end()</span><br></pre></td></tr></table></figure><h2 id="2-upper-bound"><a href="#2-upper-bound" class="headerlink" title="2. upper_bound"></a>2. <code>upper_bound</code></h2><h3 id="功能：-1"><a href="#功能：-1" class="headerlink" title="功能："></a>功能：</h3><p>在有序序列中查找第一个<strong>大于</strong>目标值的元素位置。</p><h3 id="函数原型：-1"><a href="#函数原型：-1" class="headerlink" title="函数原型："></a>函数原型：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">template &lt;class ForwardIterator, class T&gt;</span><br><span class="line">ForwardIterator upper_bound(ForwardIterator first, ForwardIterator last, const T&amp; val);</span><br></pre></td></tr></table></figure><h3 id="参数：-1"><a href="#参数：-1" class="headerlink" title="参数："></a>参数：</h3><p>同 <code>lower_bound</code></p><h3 id="返回值：-1"><a href="#返回值：-1" class="headerlink" title="返回值："></a>返回值：</h3><ul><li>返回指向序列中第一个<strong>大于</strong><code>val</code> 的元素的迭代器</li><li>如果所有元素都小于或等于<code>val</code>，则返回<code>last</code></li></ul><h3 id="示例：-1"><a href="#示例：-1" class="headerlink" title="示例："></a>示例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vector&lt;int&gt; v = &#123;1, 3, 3, 5, 7, 9&#125;;</span><br><span class="line"></span><br><span class="line">// 查找第一个 &gt; 3 的元素</span><br><span class="line">auto it = upper_bound(v.begin(), v.end(), 3); // 指向5（索引3）</span><br><span class="line"></span><br><span class="line">// 查找第一个 &gt; 5 的元素</span><br><span class="line">it = upper_bound(v.begin(), v.end(), 5); // 指向7（索引4）</span><br><span class="line"></span><br><span class="line">// 查找第一个 &gt; 9 的元素</span><br><span class="line">it = upper_bound(v.begin(), v.end(), 9); // 返回 v.end()</span><br></pre></td></tr></table></figure><h2 id="3-关键区别"><a href="#3-关键区别" class="headerlink" title="3. 关键区别"></a>3. 关键区别</h2><table><thead><tr><th>特性</th><th><code>lower_bound</code></th><th><code>upper_bound</code></th></tr></thead><tbody><tr><td>查找条件</td><td>第一个<strong>大于或等于</strong>目标值</td><td>第一个<strong>大于</strong>目标值</td></tr><tr><td>对于重复元素</td><td>指向第一个匹配元素</td><td>指向最后一个匹配元素的下一个位置</td></tr><tr><td>返回值关系</td><td><code>lower_bound &lt;= upper_bound</code></td><td><code>lower_bound &lt;= upper_bound</code></td></tr></tbody></table><h2 id="4-实用技巧"><a href="#4-实用技巧" class="headerlink" title="4. 实用技巧"></a>4. 实用技巧</h2><h3 id="统计特定值出现的次数："><a href="#统计特定值出现的次数：" class="headerlink" title="统计特定值出现的次数："></a>统计特定值出现的次数：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vector&lt;int&gt; v = &#123;1, 3, 3, 3, 5, 7&#125;;</span><br><span class="line">int target = 3;</span><br><span class="line"></span><br><span class="line">auto low = lower_bound(v.begin(), v.end(), target);</span><br><span class="line">auto up = upper_bound(v.begin(), v.end(), target);</span><br><span class="line"></span><br><span class="line">int count = distance(low, up); // 3</span><br></pre></td></tr></table></figure><h3 id="在有序序列中插入元素："><a href="#在有序序列中插入元素：" class="headerlink" title="在有序序列中插入元素："></a>在有序序列中插入元素：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vector&lt;int&gt; v = &#123;1, 3, 5, 7&#125;;</span><br><span class="line">int new_val = 4;</span><br><span class="line"></span><br><span class="line">// 找到第一个 &gt;= 4 的位置</span><br><span class="line">auto pos = lower_bound(v.begin(), v.end(), new_val);</span><br><span class="line">v.insert(pos, new_val); // v = &#123;1, 3, 4, 5, 7&#125;</span><br></pre></td></tr></table></figure><h3 id="检查元素是否存在："><a href="#检查元素是否存在：" class="headerlink" title="检查元素是否存在："></a>检查元素是否存在：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">vector&lt;int&gt; v = &#123;1, 3, 5, 7&#125;;</span><br><span class="line">int target = 5;</span><br><span class="line"></span><br><span class="line">// 检查元素是否存在</span><br><span class="line">bool exists = binary_search(v.begin(), v.end(), target); // true</span><br><span class="line"></span><br><span class="line">// 等价于：</span><br><span class="line">bool exists2 = (lower_bound(v.begin(), v.end(), target) != v.end() &amp;&amp; </span><br><span class="line">               *lower_bound(v.begin(), v.end(), target) == target); // true</span><br></pre></td></tr></table></figure><h2 id="5-性能特点"><a href="#5-性能特点" class="headerlink" title="5. 性能特点"></a>5. 性能特点</h2><ul><li><strong>时间复杂度</strong>：O(log n)，其中 n 是序列长度</li><li><strong>前提条件</strong>：序列必须是有序的（通常是非降序）</li><li><strong>优势</strong>：比线性查找高效，特别适合大型数据集</li></ul><h2 id="6-在爱丁顿数问题中的应用"><a href="#6-在爱丁顿数问题中的应用" class="headerlink" title="6. 在爱丁顿数问题中的应用"></a>6. 在爱丁顿数问题中的应用</h2><p>在爱丁顿数问题中，我们需要统计大于某个值 E 的天数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">bool can(int m) &#123;</span><br><span class="line">    // 使用 upper_bound 找到第一个大于 m 的元素位置</span><br><span class="line">    auto it = upper_bound(a.begin(), a.end(), m);</span><br><span class="line">    int sum = a.end() - it; // 计算大于 m 的元素数量</span><br><span class="line">    return sum &gt;= m;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这种方法比遍历整个数组更高效，时间复杂度从 O(n) 降为 O(log n)。</p></blockquote><p>这里打个岔，我刚开始写了二分答案但是挂了三个测试点，我都开始怀疑自己了二分答案怎么还能错，想了各种原因后面才发现</p><p>我&gt;写成&gt;&#x3D;了……题没审好。</p><h2 id="1061"><a href="#1061" class="headerlink" title="1061"></a>1061</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; score;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        cin&gt;&gt;x;</span><br><span class="line">        score.<span class="built_in">push_back</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; ans;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        <span class="type">int</span> y;</span><br><span class="line">        cin&gt;&gt;y;</span><br><span class="line">        ans.<span class="built_in">push_back</span>(y);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (n--)&#123;</span><br><span class="line">        <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">b</span><span class="params">(m)</span></span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">            cin&gt;&gt;b[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (b[i]==ans[i])&#123;</span><br><span class="line">                sum+=score[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;sum&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1062"><a href="#1062" class="headerlink" title="1062"></a>1062</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">gcd</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span>&#123;<span class="keyword">return</span> b?<span class="built_in">gcd</span>(b,a%b):a;&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n1,m1,n2,m2,k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d/%d&quot;</span>,&amp;n1,&amp;m1);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d/%d&quot;</span>,&amp;n2,&amp;m2);</span><br><span class="line">    cin&gt;&gt;k;</span><br><span class="line">    <span class="keyword">if</span>(n1*m2&gt;n2*m1)&#123;<span class="built_in">swap</span>(n1,n2);<span class="built_in">swap</span>(m1,m2);&#125;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; ans;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=k*n2/m2;i++)</span><br><span class="line">        <span class="keyword">if</span>(i*m1&gt;k*n1&amp;&amp;i*m2&lt;k*n2&amp;&amp;<span class="built_in">gcd</span>(i,k)==<span class="number">1</span>)</span><br><span class="line">            ans.<span class="built_in">push_back</span>(i);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;ans.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i)cout&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        cout&lt;&lt;ans[i]&lt;&lt;<span class="string">&quot;/&quot;</span>&lt;&lt;k;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>很恶毒啊，题目并不保证输入数据的大小顺序，不注意这个就会挂了一个测试点。</p><h2 id="1063"><a href="#1063" class="headerlink" title="1063"></a>1063</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">dis</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sqrt</span>(a*a+b*b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="type">double</span> maxx=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="type">int</span> x,y;</span><br><span class="line">        cin&gt;&gt;x&gt;&gt;y;</span><br><span class="line">        maxx=<span class="built_in">max</span>(maxx,<span class="built_in">dis</span>(x,y));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2f&quot;</span>,maxx);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>入门题</p><h2 id="1064"><a href="#1064" class="headerlink" title="1064"></a>1064</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">sum</span><span class="params">(<span class="type">int</span> a)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (a&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="type">int</span> t=a%<span class="number">10</span>;</span><br><span class="line">        res+=t;</span><br><span class="line">        a/=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="comment">//unordered_map&lt;int,int&gt; hash1;</span></span><br><span class="line">    set&lt;<span class="type">int</span>&gt; ans;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="type">int</span> b;</span><br><span class="line">        cin&gt;&gt;b;</span><br><span class="line">        <span class="comment">//hash1[sum(b)]++;</span></span><br><span class="line">        ans.<span class="built_in">insert</span>(<span class="built_in">sum</span>(b));</span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; p;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> it:ans)&#123;</span><br><span class="line">        p.<span class="built_in">push_back</span>(it);</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;p.<span class="built_in">size</span>()&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;p.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (i==p.<span class="built_in">size</span>()<span class="number">-1</span>)&#123;</span><br><span class="line">            cout&lt;&lt;p[i];</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            cout&lt;&lt;p[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>给我看笑了。</p><p>你以为这个朋友数一定是要有人和它相同吗，不不不，只要这个数字有就行了。</p><p>那你还说啥啊，直接set就完了呗。</p><h2 id="1065"><a href="#1065" class="headerlink" title="1065"></a>1065</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">string a,b;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(string x,string y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x&lt;y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    unordered_map&lt;string,string&gt; h1;</span><br><span class="line">    set&lt;string&gt; people;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line">        h1[a]=b;</span><br><span class="line">        h1[b]=a;</span><br><span class="line">        people.<span class="built_in">insert</span>(a);</span><br><span class="line">        people.<span class="built_in">insert</span>(b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> m;</span><br><span class="line">    cin&gt;&gt;m;</span><br><span class="line">    set&lt;string&gt; id;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        string s;</span><br><span class="line">        cin&gt;&gt;s;</span><br><span class="line">        id.<span class="built_in">insert</span>(s);</span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;string&gt; ans;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> it:id)&#123;</span><br><span class="line">        <span class="keyword">if</span> (people.<span class="built_in">find</span>(it)==people.<span class="built_in">end</span>())&#123;</span><br><span class="line">            ans.<span class="built_in">push_back</span>(it);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(people.<span class="built_in">find</span>(it)!=people.<span class="built_in">end</span>()&amp;&amp;id.<span class="built_in">find</span>(h1[it])==id.<span class="built_in">end</span>())&#123;</span><br><span class="line">            ans.<span class="built_in">push_back</span>(it);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans.<span class="built_in">size</span>()&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">sort</span>(ans.<span class="built_in">begin</span>(),ans.<span class="built_in">end</span>(),cmp);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;ans.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (i==ans.<span class="built_in">size</span>()<span class="number">-1</span>)&#123;</span><br><span class="line">            cout&lt;&lt;ans[i];</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            cout&lt;&lt;ans[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>又是STL熟练度检测题，用unordered_map建立夫妻相互映射就行，然后在目标集合中查询即可。</p><h2 id="1066"><a href="#1066" class="headerlink" title="1066"></a>1066</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> m,n,a,b,r;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;m&gt;&gt;n&gt;&gt;a&gt;&gt;b&gt;&gt;r;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">image</span>(m,<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(n));</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">            cin&gt;&gt;image[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (image[i][j]&gt;=a&amp;&amp;image[i][j]&lt;=b)&#123;</span><br><span class="line">                image[i][j]=r;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%03d&quot;</span>,image[i][j]);</span><br><span class="line">            <span class="keyword">if</span> (j!=n<span class="number">-1</span>) cout&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1067"><a href="#1067" class="headerlink" title="1067"></a>1067</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">string cipher;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;cipher&gt;&gt;n;</span><br><span class="line">    cin.<span class="built_in">ignore</span>();<span class="comment">//记得忽略掉最后面的换行，这里不忽略包完蛋的.</span></span><br><span class="line">    string try_cipher;</span><br><span class="line">    <span class="type">int</span> try_num=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (try_num&gt;=n)&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;Account locked&quot;</span>&lt;&lt;endl;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">getline</span>(cin,try_cipher);<span class="comment">//输入可能有空格哦</span></span><br><span class="line">        <span class="keyword">if</span> (try_cipher==<span class="string">&quot;#&quot;</span>)&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(try_cipher!=cipher)&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;Wrong password: &quot;</span>&lt;&lt;try_cipher&lt;&lt;endl;</span><br><span class="line">            try_num++;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(try_cipher==cipher)&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;Welcome in&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我保证正确密码无空格！&#x3D;我保证你输入的密码无空格</p><h2 id="1068"><a href="#1068" class="headerlink" title="1068"></a>1068</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> m,n,tol;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;m&gt;&gt;n&gt;&gt;tol;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">image</span>(n<span class="number">+2</span>,<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(m<span class="number">+2</span>));</span><br><span class="line">    set&lt;<span class="type">int</span>&gt; key1;</span><br><span class="line">    unordered_map&lt;<span class="type">int</span>,<span class="type">int</span>&gt; h;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n<span class="number">+2</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>;j&lt;m<span class="number">+2</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (i==<span class="number">0</span>||i==n<span class="number">+1</span>)&#123;</span><br><span class="line">                image[i][j]=<span class="number">-1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (j==<span class="number">0</span>||j==m<span class="number">+1</span>)&#123;</span><br><span class="line">                    image[i][j]=<span class="number">-1</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    cin&gt;&gt;image[i][j];</span><br><span class="line">                    key<span class="number">1.</span><span class="built_in">insert</span>(image[i][j]);</span><br><span class="line">                    h[image[i][j]]++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    set&lt;<span class="type">int</span>&gt; ans_key;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> it:key1)&#123;</span><br><span class="line">        <span class="keyword">if</span> (h[it]==<span class="number">1</span>)&#123;</span><br><span class="line">            ans_key.<span class="built_in">insert</span>(it);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (ans_key.<span class="built_in">size</span>()==<span class="number">0</span>)&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Not Exist&quot;</span>&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> x,y,ans;</span><br><span class="line">        <span class="type">int</span> dx[<span class="number">8</span>]=&#123;<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>&#125;;</span><br><span class="line">        <span class="type">int</span> dy[<span class="number">8</span>]=&#123;<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">-1</span>,<span class="number">1</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> it:ans_key)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">                    <span class="keyword">if</span> (image[i][j]==it)&#123;</span><br><span class="line">                        <span class="type">bool</span> ok=<span class="literal">true</span>;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="type">int</span> k=<span class="number">0</span>;k&lt;<span class="number">8</span>;k++)&#123;</span><br><span class="line">                            <span class="type">int</span> ni=i+dx[k],nj=j+dy[k];</span><br><span class="line">                            <span class="keyword">if</span> (<span class="built_in">abs</span>(image[ni][nj]-image[i][j])&lt;=tol)&#123;</span><br><span class="line">                                ok=<span class="literal">false</span>;</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">if</span> (ok)&#123;</span><br><span class="line">                            sum++;</span><br><span class="line">                            x=j;</span><br><span class="line">                            y=i;</span><br><span class="line">                            ans=image[i][j];</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (sum==<span class="number">0</span>) cout&lt;&lt;<span class="string">&quot;Not Exist&quot;</span>&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (sum&gt;<span class="number">1</span>) cout&lt;&lt;<span class="string">&quot;Not Unique&quot;</span>&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">else</span> cout&lt;&lt;<span class="string">&quot;(&quot;</span>&lt;&lt;x&lt;&lt;<span class="string">&quot;, &quot;</span>&lt;&lt;y&lt;&lt;<span class="string">&quot;): &quot;</span>&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我的天啊这没超时，数据怎么能弱成这样……</p><p>简单来说就是按照题目要求模拟而已，我在外面加了一圈-1其实是为了防止数组越界。</p><p>更优的做法是存储ans_key的时候就把坐标一起存储了，这样就算加强数据了也不会有问题。</p><h2 id="1069"><a href="#1069" class="headerlink" title="1069"></a>1069</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> m,n,s;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;m&gt;&gt;n&gt;&gt;s;</span><br><span class="line">    <span class="function">vector&lt;string&gt; <span class="title">list_tran</span><span class="params">(m)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        cin&gt;&gt;list_tran[i];</span><br><span class="line">    &#125;</span><br><span class="line">    set&lt;string&gt; award;</span><br><span class="line">    <span class="type">int</span> cur=s;</span><br><span class="line">    <span class="keyword">if</span> (m&lt;cur)&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Keep going...&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (cur&lt;=m)&#123;</span><br><span class="line">            <span class="keyword">if</span> (award.<span class="built_in">find</span>(list_tran[cur<span class="number">-1</span>])==award.<span class="built_in">end</span>())&#123;</span><br><span class="line">                cout&lt;&lt;list_tran[cur<span class="number">-1</span>]&lt;&lt;endl;</span><br><span class="line">                award.<span class="built_in">insert</span>(list_tran[cur<span class="number">-1</span>]);</span><br><span class="line">                cur+=n;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;，</span><br><span class="line">                cur++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>我第一遍这个代码挂了俩测试点，百思不得其解，后面改了半天才发现是我Keep going后面没写省略号，气笑了</p></blockquote><h2 id="1070"><a href="#1070" class="headerlink" title="1070"></a>1070</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">cord</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;cord[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(cord.<span class="built_in">begin</span>(),cord.<span class="built_in">end</span>());</span><br><span class="line">    <span class="type">int</span> ans=cord[<span class="number">0</span>];</span><br><span class="line">    <span class="type">int</span> sum=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (sum&lt;n)&#123;</span><br><span class="line">        ans=(ans+cord[sum])/<span class="number">2</span>;</span><br><span class="line">        sum++;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我已经很久没有写过这么简单的贪心了，这个贪心策略也太傻瓜了，每次选取最短的就行。</p><h2 id="1071"><a href="#1071" class="headerlink" title="1071"></a>1071</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> t,k;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;t&gt;&gt;k;</span><br><span class="line">    <span class="keyword">while</span>(k--)&#123;</span><br><span class="line">        <span class="keyword">if</span> (t&lt;=<span class="number">0</span>)&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;Game Over.&quot;</span>&lt;&lt;endl;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="type">int</span> n1,b,t1,n2;</span><br><span class="line">            cin&gt;&gt;n1&gt;&gt;b&gt;&gt;t1&gt;&gt;n2;</span><br><span class="line">            <span class="keyword">if</span> (t1&gt;t)&#123;</span><br><span class="line">                cout&lt;&lt;<span class="string">&quot;Not enough tokens.  Total = &quot;</span>&lt;&lt;t&lt;&lt;<span class="string">&quot;.&quot;</span>&lt;&lt;endl;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (n1&gt;n2&amp;&amp;b==<span class="number">0</span>)&#123;</span><br><span class="line">                    t+=t1;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;Win %d!  Total = %d.\n&quot;</span>,t1,t);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (n1&gt;n2&amp;&amp;b==<span class="number">1</span>)&#123;</span><br><span class="line">                    t-=t1;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;Lose %d.  Total = %d.\n&quot;</span>,t1,t);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (n1&lt;n2&amp;&amp;b==<span class="number">1</span>)&#123;</span><br><span class="line">                    t+=t1;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;Win %d!  Total = %d.\n&quot;</span>,t1,t);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (n1&lt;n2&amp;&amp;b==<span class="number">0</span>)&#123;</span><br><span class="line">                    t-=t1;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;Lose %d.  Total = %d.\n&quot;</span>,t1,t);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1072"><a href="#1072" class="headerlink" title="1072"></a>1072</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line">string name;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    set&lt;<span class="type">int</span>&gt; ob;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        <span class="type">int</span> y;</span><br><span class="line">        cin&gt;&gt;y;</span><br><span class="line">        ob.<span class="built_in">insert</span>(y);</span><br><span class="line">    &#125;</span><br><span class="line">    unordered_map&lt;string,vector&lt;<span class="type">int</span>&gt;&gt; add;</span><br><span class="line">    vector&lt;string&gt; keyy;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;name;</span><br><span class="line">        keyy.<span class="built_in">push_back</span>(name);</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        cin&gt;&gt;x;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>;j&lt;x;j++)&#123;</span><br><span class="line">            <span class="type">int</span> t;</span><br><span class="line">            cin&gt;&gt;t;</span><br><span class="line">            add[name].<span class="built_in">push_back</span>(t);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    unordered_map&lt;string,vector&lt;<span class="type">int</span>&gt;&gt; ans;</span><br><span class="line">    set&lt;string&gt; sum_stu;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; sum_ob;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;keyy.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        string it=keyy[i];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>;j&lt;add[it].<span class="built_in">size</span>();j++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (ob.<span class="built_in">find</span>(add[it][j])!=ob.<span class="built_in">end</span>())&#123;</span><br><span class="line">                sum_stu.<span class="built_in">insert</span>(it);</span><br><span class="line">                sum_ob.<span class="built_in">push_back</span>(add[it][j]);</span><br><span class="line">                ans[it].<span class="built_in">push_back</span>(add[it][j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ans[it].<span class="built_in">size</span>()!=<span class="number">0</span>)&#123;</span><br><span class="line">            cout&lt;&lt;it&lt;&lt;<span class="string">&quot;: &quot;</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k=<span class="number">0</span>;k&lt;ans[it].<span class="built_in">size</span>();k++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (k==ans[it].<span class="built_in">size</span>()<span class="number">-1</span>)&#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;%04d&quot;</span>,ans[it][k]);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;%04d &quot;</span>,ans[it][k]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            cout&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;sum_stu.<span class="built_in">size</span>()&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;sum_ob.<span class="built_in">size</span>()&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这题很类似于2024年机考的那题鱼和熊掌，都是在查找物品的所属关系，这一题我的做法相当大胆，在unordered_map里内嵌了一个动态数组用于存储每个人的物品，同时把每个key存起来用于最后遍历。</p><p>统计人数用了一个比较呆瓜的做法，就是把违规者和违禁品全部存入set和vector，然后输出他们的大小就行。</p><h2 id="1073"><a href="#1073" class="headerlink" title="1073"></a>1073</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> N, M;</span><br><span class="line">    <span class="keyword">if</span> (!(cin &gt;&gt; N &gt;&gt; M)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">fullScore</span><span class="params">(M)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">optCnt</span><span class="params">(M)</span></span>;</span><br><span class="line">    vector&lt; vector&lt;<span class="type">bool</span>&gt; &gt; <span class="built_in">correct</span>(M); <span class="comment">// correct[q][i] for option i (0-based)</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; M; ++i) &#123;</span><br><span class="line">        <span class="type">int</span> score, opts, correctNum;</span><br><span class="line">        cin &gt;&gt; score &gt;&gt; opts &gt;&gt; correctNum;</span><br><span class="line">        fullScore[i] = score;</span><br><span class="line">        optCnt[i] = opts;</span><br><span class="line">        correct[i].<span class="built_in">assign</span>(opts, <span class="literal">false</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; correctNum; ++j) &#123;</span><br><span class="line">            <span class="type">char</span> c; cin &gt;&gt; c;</span><br><span class="line">            correct[i][c - <span class="string">&#x27;a&#x27;</span>] = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// wrongCount[q][opt]</span></span><br><span class="line">    vector&lt; vector&lt;<span class="type">int</span>&gt; &gt; <span class="built_in">wrongCount</span>(M);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; M; ++i) wrongCount[i].<span class="built_in">assign</span>(optCnt[i], <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function">vector&lt;<span class="type">double</span>&gt; <span class="title">scores</span><span class="params">(N, <span class="number">0.0</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    string line;</span><br><span class="line">    <span class="built_in">getline</span>(cin, line); <span class="comment">// consume endline after reading question data</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> stu = <span class="number">0</span>; stu &lt; N; ++stu) &#123;</span><br><span class="line">        <span class="built_in">getline</span>(cin, line);</span><br><span class="line">        <span class="comment">// parse line like: (2 a b) (1 c) ...</span></span><br><span class="line">        <span class="type">int</span> pos = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> qIndex = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (pos &lt; (<span class="type">int</span>)line.<span class="built_in">size</span>() &amp;&amp; qIndex &lt; M) &#123;</span><br><span class="line">            <span class="comment">// find &#x27;(&#x27;</span></span><br><span class="line">            <span class="keyword">while</span> (pos &lt; (<span class="type">int</span>)line.<span class="built_in">size</span>() &amp;&amp; line[pos] != <span class="string">&#x27;(&#x27;</span>) ++pos;</span><br><span class="line">            <span class="keyword">if</span> (pos &gt;= (<span class="type">int</span>)line.<span class="built_in">size</span>()) <span class="keyword">break</span>;</span><br><span class="line">            ++pos; <span class="comment">// skip &#x27;(&#x27;</span></span><br><span class="line">            <span class="comment">// read number k</span></span><br><span class="line">            <span class="keyword">while</span> (pos &lt; (<span class="type">int</span>)line.<span class="built_in">size</span>() &amp;&amp; <span class="built_in">isspace</span>(line[pos])) ++pos;</span><br><span class="line">            <span class="type">int</span> k = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (pos &lt; (<span class="type">int</span>)line.<span class="built_in">size</span>() &amp;&amp; <span class="built_in">isdigit</span>(line[pos])) &#123;</span><br><span class="line">                k = k * <span class="number">10</span> + (line[pos] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">                ++pos;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// read k options (letters)</span></span><br><span class="line">            <span class="function">vector&lt;<span class="type">bool</span>&gt; <span class="title">sel</span><span class="params">(optCnt[qIndex], <span class="literal">false</span>)</span></span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> t = <span class="number">0</span>; t &lt; k; ++t) &#123;</span><br><span class="line">                <span class="comment">// skip spaces</span></span><br><span class="line">                <span class="keyword">while</span> (pos &lt; (<span class="type">int</span>)line.<span class="built_in">size</span>() &amp;&amp; <span class="built_in">isspace</span>(line[pos])) ++pos;</span><br><span class="line">                <span class="keyword">if</span> (pos &lt; (<span class="type">int</span>)line.<span class="built_in">size</span>() &amp;&amp; <span class="built_in">isalpha</span>(line[pos])) &#123;</span><br><span class="line">                    <span class="type">char</span> c = line[pos];</span><br><span class="line">                    sel[c - <span class="string">&#x27;a&#x27;</span>] = <span class="literal">true</span>;</span><br><span class="line">                    ++pos;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// move to &#x27;)&#x27; (skip until &#x27;)&#x27;)</span></span><br><span class="line">            <span class="keyword">while</span> (pos &lt; (<span class="type">int</span>)line.<span class="built_in">size</span>() &amp;&amp; line[pos] != <span class="string">&#x27;)&#x27;</span>) ++pos;</span><br><span class="line">            <span class="keyword">if</span> (pos &lt; (<span class="type">int</span>)line.<span class="built_in">size</span>() &amp;&amp; line[pos] == <span class="string">&#x27;)&#x27;</span>) ++pos;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// update wrongCount for this question:</span></span><br><span class="line">            <span class="comment">// any option where sel differs from correct =&gt; wrongCount++</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> opt = <span class="number">0</span>; opt &lt; optCnt[qIndex]; ++opt) &#123;</span><br><span class="line">                <span class="keyword">if</span> ( (opt &lt; (<span class="type">int</span>)correct[qIndex].<span class="built_in">size</span>() &amp;&amp; sel[opt] != correct[qIndex][opt]) ) &#123;</span><br><span class="line">                    wrongCount[qIndex][opt]++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// compute score for this question</span></span><br><span class="line">            <span class="type">bool</span> anyWrongSelected = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> opt = <span class="number">0</span>; opt &lt; optCnt[qIndex]; ++opt) &#123;</span><br><span class="line">                <span class="keyword">if</span> (sel[opt] &amp;&amp; (opt &gt;= (<span class="type">int</span>)correct[qIndex].<span class="built_in">size</span>() || !correct[qIndex][opt]) ) &#123;</span><br><span class="line">                    anyWrongSelected = <span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (anyWrongSelected) &#123;</span><br><span class="line">                <span class="comment">// 0 point</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// no wrong selected. Check if selected set equals correct set</span></span><br><span class="line">                <span class="type">bool</span> equal = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> opt = <span class="number">0</span>; opt &lt; optCnt[qIndex]; ++opt) &#123;</span><br><span class="line">                    <span class="type">bool</span> corr = correct[qIndex][opt];</span><br><span class="line">                    <span class="type">bool</span> s = sel[opt];</span><br><span class="line">                    <span class="keyword">if</span> (corr != s) &#123; equal = <span class="literal">false</span>; <span class="keyword">break</span>; &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (equal) &#123;</span><br><span class="line">                    scores[stu] += fullScore[qIndex];</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    scores[stu] += fullScore[qIndex] / <span class="number">2.0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            ++qIndex;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 输出每个学生分数，保留一位小数</span></span><br><span class="line">    cout.<span class="built_in">setf</span>(ios::fixed);</span><br><span class="line">    cout &lt;&lt; <span class="built_in">setprecision</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; ++i) &#123;</span><br><span class="line">        cout &lt;&lt; scores[i] &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 寻找最大错误次数</span></span><br><span class="line">    <span class="type">int</span> maxErr = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> q = <span class="number">0</span>; q &lt; M; ++q) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> opt = <span class="number">0</span>; opt &lt; optCnt[q]; ++opt) &#123;</span><br><span class="line">            maxErr = <span class="built_in">max</span>(maxErr, wrongCount[q][opt]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (maxErr == <span class="number">0</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Too simple\n&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 按题号(从1开始)递增，选项字母递增输出所有等于 maxErr 的项</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> q = <span class="number">0</span>; q &lt; M; ++q) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> opt = <span class="number">0</span>; opt &lt; optCnt[q]; ++opt) &#123;</span><br><span class="line">                <span class="keyword">if</span> (wrongCount[q][opt] == maxErr) &#123;</span><br><span class="line">                    cout &lt;&lt; maxErr &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; (q<span class="number">+1</span>) &lt;&lt; <span class="string">&quot;-&quot;</span> &lt;&lt; <span class="built_in">char</span>(<span class="string">&#x27;a&#x27;</span> + opt) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>写不动了，思路不难，但自己看看代码量吧。</p><p>其中要用到的不仅有STL容器，你还要知道字符串分割的方法，我是真写不下去了。</p><h2 id="1074"><a href="#1074" class="headerlink" title="1074"></a>1074</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">string n;</span><br><span class="line">string a,b;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;a&gt;&gt;b;</span><br><span class="line">    <span class="keyword">while</span> (a.<span class="built_in">size</span>()&lt;b.<span class="built_in">size</span>())&#123;</span><br><span class="line">        a=<span class="string">&quot;0&quot;</span>+a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (b.<span class="built_in">size</span>()&lt;a.<span class="built_in">size</span>())&#123;</span><br><span class="line">        b=<span class="string">&quot;0&quot;</span>+b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> num=a.<span class="built_in">size</span>();</span><br><span class="line">    string ans1;</span><br><span class="line">    <span class="type">int</span> t=<span class="number">0</span>;</span><br><span class="line">    <span class="type">char</span> c;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=num<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">        <span class="type">int</span> x=a[i]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        <span class="type">int</span> y=b[i]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        <span class="type">int</span> u=n[i]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> (u==<span class="number">0</span>)&#123;</span><br><span class="line">            u=<span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> s=(x+y+t)%u;</span><br><span class="line">        c=<span class="string">&#x27;0&#x27;</span>+s;</span><br><span class="line">        ans1=c+ans1;</span><br><span class="line">        t=(x+y+t)/u;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (t&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        ans1=<span class="built_in">char</span>(<span class="string">&#x27;0&#x27;</span>+t)+ans1;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">bool</span> flag=<span class="number">0</span>;</span><br><span class="line">    string ans;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;ans<span class="number">1.</span><span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (flag)&#123;</span><br><span class="line">            ans+=ans1[i];</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(!flag&amp;&amp;ans1[i]!=<span class="string">&#x27;0&#x27;</span>)&#123;</span><br><span class="line">            ans+=ans1[i];</span><br><span class="line">            flag=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (ans.<span class="built_in">empty</span>())&#123;</span><br><span class="line">        cout&lt;&lt;<span class="number">0</span>&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先这个题实际上很简单，就是普通的模拟加法，无非只是加了一个进制处理的问题，但没什么差别，如果你会高精度加法那你肯定这个也会了。</p><p>去除前导0，这个也应该都懂，就是要注意的是，如果ans是空串要输出0。</p><blockquote><p>我写代码要写出幻觉了——2025.9.20</p></blockquote><h2 id="1075"><a href="#1075" class="headerlink" title="1075"></a>1075</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">node</span>&#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">    <span class="type">int</span> add,data,next;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> tbegin,n,k;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;tbegin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    vector&lt;node&gt; list_node;</span><br><span class="line">    unordered_map&lt;<span class="type">int</span>,node&gt; m;</span><br><span class="line">    node l;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;l.add&gt;&gt;l.data&gt;&gt;l.next;</span><br><span class="line">        m[l.add]=l;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (tbegin!=<span class="number">-1</span>)&#123;</span><br><span class="line">        list_node.<span class="built_in">push_back</span>(m[tbegin]);</span><br><span class="line">        tbegin=m[tbegin].next;</span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;node&gt; under_zero,upper_k,mid,ans;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;list_node.<span class="built_in">size</span>();i++)&#123;<span class="comment">//这里注意i小于什么，测试点里面有无用节点</span></span><br><span class="line">        <span class="keyword">if</span> (list_node[i].data&lt;<span class="number">0</span>)&#123;</span><br><span class="line">            under_zero.<span class="built_in">push_back</span>(list_node[i]);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(list_node[i].data&gt;k)&#123;</span><br><span class="line">            upper_k.<span class="built_in">push_back</span>(list_node[i]);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            mid.<span class="built_in">push_back</span>(list_node[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;under_zero.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        ans.<span class="built_in">push_back</span>(under_zero[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;mid.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        ans.<span class="built_in">push_back</span>(mid[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;upper_k.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        ans.<span class="built_in">push_back</span>(upper_k[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;ans.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (i==ans.<span class="built_in">size</span>()<span class="number">-1</span>)&#123;</span><br><span class="line">            ans[i].next=<span class="number">-1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            ans[i].next=ans[i<span class="number">+1</span>].add;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;ans.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (i==ans.<span class="built_in">size</span>()<span class="number">-1</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%05d %d -1&quot;</span>,ans[i].add,ans[i].data);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%05d %d %05d\n&quot;</span>,ans[i].add,ans[i].data,ans[i].next);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>和前面几题处理链表的方式一模一样，只不过这个地方要记得分三次存链表元素</p><p>都写到这里了应该不可能不知道链表是什么了吧。</p><blockquote><p>这个题面真的是懒得喷啊。</p><p>我第一遍以为[0,K]是指的数组中链表元素下标，然后大脑都快给我整宕机了都没想出来这到底是个什么排序方法。</p><p>后来才想到这个该不会指的是链表元素的值吧……</p></blockquote><h2 id="1076"><a href="#1076" class="headerlink" title="1076"></a>1076</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">string ans,a;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++)&#123;</span><br><span class="line">            cin&gt;&gt;a;</span><br><span class="line">            <span class="keyword">if</span> (a[<span class="number">2</span>]==<span class="string">&#x27;T&#x27;</span>)&#123;</span><br><span class="line">                ans+=<span class="string">&#x27;0&#x27;</span>+(a[<span class="number">0</span>]-<span class="string">&#x27;A&#x27;</span><span class="number">+1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>简单字符串模拟</p><h2 id="1077"><a href="#1077" class="headerlink" title="1077"></a>1077</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="type">int</span> tch_score;</span><br><span class="line">        cin&gt;&gt;tch_score;</span><br><span class="line">        vector&lt;<span class="type">int</span>&gt; stu_score;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>;j&lt;n<span class="number">-1</span>;j++)&#123;</span><br><span class="line">            <span class="type">int</span> score;</span><br><span class="line">            cin&gt;&gt;score;</span><br><span class="line">            <span class="keyword">if</span> (score&lt;=m&amp;&amp;score&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">                stu_score.<span class="built_in">push_back</span>(score);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">sort</span>(stu_score.<span class="built_in">begin</span>(),stu_score.<span class="built_in">end</span>());</span><br><span class="line">        <span class="type">double</span> ans=<span class="number">0</span>,sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> k=<span class="number">1</span>;k&lt;=stu_score.<span class="built_in">size</span>()<span class="number">-2</span>;k++)&#123;</span><br><span class="line">            sum+=stu_score[k];</span><br><span class="line">        &#125;</span><br><span class="line">        ans=((sum/(stu_score.<span class="built_in">size</span>()<span class="number">-2</span>))+tch_score)/<span class="number">2</span>;</span><br><span class="line">        cout&lt;&lt;(<span class="type">int</span>)(ans<span class="number">+0.5</span>)&lt;&lt;endl;<span class="comment">//注意这个四舍五入</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果你使用的是VScode作为IDE，那么你大概率会遇到在24行写printf时在本地运行和在PAT测评机运行不同的情况。</p><p>这个东西就涉及到了一些比较底层的东西，现在暂时不用了解，只需要知道以后四舍五入都按照24行那么写就行了</p><p>另外，笔者本人的IDE是VScode，不知道Dev C++是不是也会产生这种情况，如果不会可以向我反馈一下。</p><h2 id="1078"><a href="#1078" class="headerlink" title="1078"></a>1078</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> fun;</span><br><span class="line">string a,ans;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;fun;</span><br><span class="line">    cin.<span class="built_in">ignore</span>();</span><br><span class="line">    <span class="built_in">getline</span>(cin,a);</span><br><span class="line">    <span class="keyword">if</span>(fun==<span class="string">&#x27;C&#x27;</span>)&#123;</span><br><span class="line">        queue&lt;<span class="type">char</span>&gt; q;</span><br><span class="line">        string n;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">char</span> c:a)&#123;</span><br><span class="line">            <span class="keyword">if</span>(q.<span class="built_in">empty</span>())&#123;</span><br><span class="line">                q.<span class="built_in">push</span>(c);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(c==q.<span class="built_in">front</span>())&#123;</span><br><span class="line">                q.<span class="built_in">push</span>(c);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(q.<span class="built_in">size</span>()==<span class="number">1</span>)&#123;</span><br><span class="line">                    ans+=q.<span class="built_in">front</span>();</span><br><span class="line">                    q.<span class="built_in">pop</span>();</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    n=<span class="built_in">to_string</span>(q.<span class="built_in">size</span>());</span><br><span class="line">                    ans+=n;</span><br><span class="line">                    ans+=q.<span class="built_in">front</span>();</span><br><span class="line">                    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>())&#123;</span><br><span class="line">                        q.<span class="built_in">pop</span>();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                q.<span class="built_in">push</span>(c);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!q.<span class="built_in">empty</span>())&#123;</span><br><span class="line">            <span class="keyword">if</span>(q.<span class="built_in">size</span>()==<span class="number">1</span>)&#123;</span><br><span class="line">                ans+=q.<span class="built_in">front</span>();</span><br><span class="line">                q.<span class="built_in">pop</span>();</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                n=<span class="built_in">to_string</span>(q.<span class="built_in">size</span>());</span><br><span class="line">                ans+=n;</span><br><span class="line">                ans+=q.<span class="built_in">front</span>();</span><br><span class="line">                <span class="keyword">while</span>(!q.<span class="built_in">empty</span>())&#123;</span><br><span class="line">                    q.<span class="built_in">pop</span>();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(fun==<span class="string">&#x27;D&#x27;</span>)&#123;</span><br><span class="line">        <span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;a.<span class="built_in">size</span>())&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">isdigit</span>(a[i]))&#123;</span><br><span class="line">                string num;</span><br><span class="line">                <span class="keyword">while</span>(i&lt;a.<span class="built_in">size</span>()&amp;&amp;<span class="built_in">isdigit</span>(a[i]))&#123;</span><br><span class="line">                    num+=a[i];</span><br><span class="line">                    i++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(i&lt;a.<span class="built_in">size</span>())&#123;</span><br><span class="line">                    <span class="type">char</span> c=a[i];</span><br><span class="line">                    <span class="type">int</span> count=<span class="built_in">stoi</span>(num);</span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;count;j++)&#123;</span><br><span class="line">                        ans+=c;</span><br><span class="line">                    &#125;</span><br><span class="line">                    i++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                ans+=a[i];</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>超级字符串大模拟，极致的磨性子，极致的享受。</p><p>思路很简单，压缩部分用队列存储相同元素，遇到不同的就立刻输出并且清空队列，而解压部分要读入数字然后再读入目标字符</p><p>我附带一个23年机考敲笨钟的答案，我趁热打铁写的。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">string a;</span><br><span class="line">vector&lt;string&gt; word1,word2;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">yes</span><span class="params">(string a)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> b=a.<span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">if</span> (a[b<span class="number">-1</span>]==<span class="string">&#x27;g&#x27;</span>&amp;&amp;a[b<span class="number">-2</span>]==<span class="string">&#x27;n&#x27;</span>&amp;&amp;a[b<span class="number">-3</span>]==<span class="string">&#x27;o&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    cin.<span class="built_in">ignore</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">getline</span>(cin,a);</span><br><span class="line">        string fir,sec;</span><br><span class="line">        <span class="type">int</span> m=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>;j&lt;a.<span class="built_in">size</span>();j++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (a[j]==<span class="string">&#x27;,&#x27;</span>)&#123;</span><br><span class="line">                m=j;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                fir+=a[j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j=m<span class="number">+2</span>;j&lt;a.<span class="built_in">size</span>();j++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (a[j]==<span class="string">&#x27;.&#x27;</span>)&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                sec+=a[j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function">stringstream <span class="title">ss</span><span class="params">(fir)</span></span>;</span><br><span class="line">        string s;</span><br><span class="line">        <span class="keyword">while</span> (ss&gt;&gt;s)&#123;</span><br><span class="line">            word<span class="number">1.</span><span class="built_in">push_back</span>(s);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function">stringstream <span class="title">sss</span><span class="params">(sec)</span></span>;</span><br><span class="line">        <span class="keyword">while</span> (sss&gt;&gt;s)&#123;</span><br><span class="line">            word<span class="number">2.</span><span class="built_in">push_back</span>(s);</span><br><span class="line">        &#125;</span><br><span class="line">        string r1=word1[word<span class="number">1.</span><span class="built_in">size</span>()<span class="number">-1</span>];</span><br><span class="line">        string r2=word2[word<span class="number">2.</span><span class="built_in">size</span>()<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">yes</span>(r1)&amp;&amp;<span class="built_in">yes</span>(r2))&#123;</span><br><span class="line">            word2[word<span class="number">2.</span><span class="built_in">size</span>()<span class="number">-1</span>]=<span class="string">&quot;zhong&quot;</span>;</span><br><span class="line">            word2[word<span class="number">2.</span><span class="built_in">size</span>()<span class="number">-2</span>]=<span class="string">&quot;ben&quot;</span>;</span><br><span class="line">            word2[word<span class="number">2.</span><span class="built_in">size</span>()<span class="number">-3</span>]=<span class="string">&quot;qiao&quot;</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;word<span class="number">1.</span><span class="built_in">size</span>();i++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (i==word<span class="number">1.</span><span class="built_in">size</span>()<span class="number">-1</span>)&#123;</span><br><span class="line">                    cout&lt;&lt;word1[i]&lt;&lt;<span class="string">&quot;, &quot;</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    cout&lt;&lt;word1[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;word<span class="number">2.</span><span class="built_in">size</span>();i++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (i==word<span class="number">2.</span><span class="built_in">size</span>()<span class="number">-1</span>)&#123;</span><br><span class="line">                    cout&lt;&lt;word2[i]&lt;&lt;<span class="string">&quot;.&quot;</span>&lt;&lt;endl;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    cout&lt;&lt;word2[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;Skipped&quot;</span>&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">        word<span class="number">1.</span><span class="built_in">clear</span>();</span><br><span class="line">        word<span class="number">2.</span><span class="built_in">clear</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1079"><a href="#1079" class="headerlink" title="1079"></a>1079</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function">string <span class="title">addition</span><span class="params">(string a,string b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(a.<span class="built_in">size</span>()&lt;b.<span class="built_in">size</span>())&#123;</span><br><span class="line">        a=<span class="string">&#x27;0&#x27;</span>+a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(b.<span class="built_in">size</span>()&lt;a.<span class="built_in">size</span>())&#123;</span><br><span class="line">        b=<span class="string">&#x27;0&#x27;</span>+b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> n=a.<span class="built_in">size</span>();</span><br><span class="line">    string ans1,ans;</span><br><span class="line">    <span class="type">int</span> t=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">        <span class="type">int</span> x=a[i]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        <span class="type">int</span> y=b[i]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        <span class="type">char</span> c=(x+y+t)%<span class="number">10</span>+<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        t=(x+y+t)/<span class="number">10</span>;</span><br><span class="line">        ans1=c+ans1;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (t!=<span class="number">0</span>)&#123;</span><br><span class="line">        ans1=<span class="built_in">char</span>(<span class="string">&#x27;0&#x27;</span>+t)+ans1;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">bool</span> flag=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;ans<span class="number">1.</span><span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (flag)&#123;</span><br><span class="line">            ans+=ans1[i];</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(!flag&amp;&amp;ans1[i]!=<span class="string">&#x27;0&#x27;</span>)&#123;</span><br><span class="line">            ans+=ans1[i];</span><br><span class="line">            flag=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isback_num</span><span class="params">(string a)</span></span>&#123;</span><br><span class="line">    string b;</span><br><span class="line">    <span class="type">int</span> n=a.<span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">        b+=a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a==b)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">string <span class="title">back_num</span><span class="params">(string a)</span></span>&#123;</span><br><span class="line">    string b,ans;</span><br><span class="line">    <span class="type">int</span> n=a.<span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">        b+=a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    string x;</span><br><span class="line">    cin&gt;&gt;x;</span><br><span class="line">    <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">isback_num</span>(x))&#123;</span><br><span class="line">        cout&lt;&lt;x&lt;&lt;<span class="string">&quot; is a palindromic number.&quot;</span>&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (sum&gt;=<span class="number">10</span>)&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;Not found in 10 iterations.&quot;</span>&lt;&lt;endl;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        string a=<span class="built_in">back_num</span>(x);</span><br><span class="line">        string b=<span class="built_in">addition</span>(x,a);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isback_num</span>(b))&#123;</span><br><span class="line">            cout&lt;&lt;x&lt;&lt;<span class="string">&quot; + &quot;</span>&lt;&lt;a&lt;&lt;<span class="string">&quot; = &quot;</span>&lt;&lt;b&lt;&lt;endl;</span><br><span class="line">            cout&lt;&lt;b&lt;&lt;<span class="string">&quot; is a palindromic number.&quot;</span>&lt;&lt;endl;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            cout&lt;&lt;x&lt;&lt;<span class="string">&quot; + &quot;</span>&lt;&lt;a&lt;&lt;<span class="string">&quot; = &quot;</span>&lt;&lt;b&lt;&lt;endl;</span><br><span class="line">            x=b;</span><br><span class="line">            sum++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我气笑了。</p><p>这一题涉及的模板有，高精度计算，回文数判断，回文数输出，最鬼的其实是高精，但其实也还好。</p><p>你看我前面打板子打了54行。</p><p>还有这一题不用去除前导零，我第一次严格去了前导0，然后给我挂了几个测试点，后面一看样例，不用去。</p><p>那还说什么，算我小丑呗。这题就是典型的磨磨性子你总能写出来的类型。</p><p>记得提前判定一下你输入的数是不是一开始就是回文数。</p><p>题外话，有没有人试试看不打高精会不会爆</p><h2 id="1080"><a href="#1080" class="headerlink" title="1080"></a>1080</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> p,m,n;</span><br><span class="line">set&lt;string&gt; all_stu;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">okstu</span>&#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">    string na;</span><br><span class="line">    <span class="type">int</span> pt,midt,fint,st;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(okstu a,okstu b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a.st!=b.st)&#123;</span><br><span class="line">        <span class="keyword">return</span> a.st&gt;b.st;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a.na&lt;b.na;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;p&gt;&gt;m&gt;&gt;n;</span><br><span class="line">    string name;</span><br><span class="line">    <span class="type">int</span> score;</span><br><span class="line">    unordered_map&lt;string,<span class="type">int</span>&gt; stu_p;</span><br><span class="line">    set&lt;string&gt; key_p;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;p;i++)&#123;</span><br><span class="line">        cin&gt;&gt;name&gt;&gt;score;</span><br><span class="line">        stu_p[name]=score;</span><br><span class="line">        key_p.<span class="built_in">insert</span>(name);</span><br><span class="line">        all_stu.<span class="built_in">insert</span>(name);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    unordered_map&lt;string,<span class="type">int</span>&gt; stu_mid;</span><br><span class="line">    set&lt;string&gt; key_mid;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        cin&gt;&gt;name&gt;&gt;score;</span><br><span class="line">        stu_mid[name]=score;</span><br><span class="line">        key_mid.<span class="built_in">insert</span>(name);</span><br><span class="line">        all_stu.<span class="built_in">insert</span>(name);</span><br><span class="line">    &#125;</span><br><span class="line">    unordered_map&lt;string,<span class="type">int</span>&gt; stu_fin;</span><br><span class="line">    set&lt;string&gt; key_fin;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;name&gt;&gt;score;</span><br><span class="line">        stu_fin[name]=score;</span><br><span class="line">        key_fin.<span class="built_in">insert</span>(name);</span><br><span class="line">        all_stu.<span class="built_in">insert</span>(name);</span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;okstu&gt; ok_stu;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> it:all_stu)&#123;</span><br><span class="line">        <span class="keyword">if</span> (key_p.<span class="built_in">find</span>(it)!=key_p.<span class="built_in">end</span>()&amp;&amp;stu_p[it]&gt;=<span class="number">200</span>)&#123;</span><br><span class="line">            <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span> (key_mid.<span class="built_in">find</span>(it)!=key_mid.<span class="built_in">end</span>())&#123;</span><br><span class="line">                <span class="keyword">if</span> (key_fin.<span class="built_in">find</span>(it)!=key_fin.<span class="built_in">end</span>())&#123;</span><br><span class="line">                    <span class="keyword">if</span> (stu_mid[it]&gt;stu_fin[it])&#123;</span><br><span class="line">                        sum=(<span class="type">int</span>)(stu_mid[it]*<span class="number">0.4</span>+stu_fin[it]*<span class="number">0.6</span><span class="number">+0.5</span>);</span><br><span class="line">                        <span class="keyword">if</span> (sum&gt;=<span class="number">60</span>)&#123;</span><br><span class="line">                            ok_stu.<span class="built_in">push_back</span>((okstu)&#123;it,stu_p[it],stu_mid[it],stu_fin[it],sum&#125;);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        sum=(<span class="type">int</span>)(stu_fin[it]<span class="number">+0.5</span>);</span><br><span class="line">                        <span class="keyword">if</span> (sum&gt;=<span class="number">60</span>)&#123;</span><br><span class="line">                            ok_stu.<span class="built_in">push_back</span>((okstu)&#123;it,stu_p[it],stu_mid[it],stu_fin[it],sum&#125;);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    sum=(<span class="type">int</span>)(stu_mid[it]*<span class="number">0.4</span><span class="number">+0.5</span>);</span><br><span class="line">                    <span class="keyword">if</span> (sum&gt;=<span class="number">60</span>)&#123;</span><br><span class="line">                        ok_stu.<span class="built_in">push_back</span>((okstu)&#123;it,stu_p[it],stu_mid[it],<span class="number">-1</span>,sum&#125;);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                sum=(<span class="type">int</span>)(stu_fin[it]<span class="number">+0.5</span>);</span><br><span class="line">                <span class="keyword">if</span> (sum&gt;=<span class="number">60</span>)&#123;</span><br><span class="line">                    ok_stu.<span class="built_in">push_back</span>((okstu)&#123;it,stu_p[it],<span class="number">-1</span>,stu_fin[it],sum&#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(ok_stu.<span class="built_in">begin</span>(),ok_stu.<span class="built_in">end</span>(),cmp);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;ok_stu.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        cout&lt;&lt;ok_stu[i].na&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;ok_stu[i].pt&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;ok_stu[i].midt&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;ok_stu[i].fint&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;ok_stu[i].st&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一题更比十题强。</p><p>首先我们读入数据的时候需要在一个大集合中存入每一个学生的数据，只要这个学生参加过一次学习活动你就要记录这个学生的名字。</p><p>在每次读入编程成绩，期中成绩，期末成绩，就要各开一个容器来记录每个参加的学生，后面有大用。</p><p>核心部分，我们去遍历全学生集合中的人数，然后按照题目的描述写一大堆选择语句就可以了，记得四舍五入的问题，上面有四舍五入的板子。</p><p>最后就排序，写一个自定义排序函数就好了</p><blockquote><p>这东西给我的感觉不像在写算法，更像在写项目。</p></blockquote><h2 id="1081"><a href="#1081" class="headerlink" title="1081"></a>1081</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">string password;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    cin.<span class="built_in">ignore</span>();</span><br><span class="line">    <span class="keyword">while</span> (n--)&#123;</span><br><span class="line">        <span class="built_in">getline</span>(cin,password);</span><br><span class="line">        <span class="keyword">if</span> (password.<span class="built_in">size</span>()&lt;<span class="number">6</span>)&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;Your password is tai duan le.&quot;</span>&lt;&lt;endl;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">bool</span> flag_num=<span class="number">0</span>,flag_letter=<span class="number">0</span>,flag_cant=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">char</span> c:password)&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">isdigit</span>(c))&#123;</span><br><span class="line">                flag_num=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">isalpha</span>(c))&#123;</span><br><span class="line">                flag_letter=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (!<span class="built_in">isdigit</span>(c)&amp;&amp;!<span class="built_in">isalpha</span>(c)&amp;&amp;c!=<span class="string">&#x27;.&#x27;</span>)&#123;</span><br><span class="line">                flag_cant=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag_cant)&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;Your password is tai luan le.&quot;</span>&lt;&lt;endl;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(flag_num&amp;&amp;!flag_letter)&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;Your password needs zi mu.&quot;</span>&lt;&lt;endl;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(!flag_num&amp;&amp;flag_letter)&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;Your password needs shu zi.&quot;</span>&lt;&lt;endl;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;Your password is wan mei.&quot;</span>&lt;&lt;endl;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1082"><a href="#1082" class="headerlink" title="1082"></a>1082</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">dis</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sqrt</span>(x*x+y*y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">player</span>&#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">    string id;</span><br><span class="line">    <span class="type">int</span> x,y;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(player a,player b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">dis</span>(a.x,a.y)&lt;<span class="built_in">dis</span>(b.x,b.y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="function">vector&lt;player&gt; <span class="title">add</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;add[i].id&gt;&gt;add[i].x&gt;&gt;add[i].y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(add.<span class="built_in">begin</span>(),add.<span class="built_in">end</span>(),cmp);</span><br><span class="line">    cout&lt;&lt;add[<span class="number">0</span>].id&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;add[n<span class="number">-1</span>].id&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1083"><a href="#1083" class="headerlink" title="1083"></a>1083</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">poker</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;poker[i];</span><br><span class="line">    &#125;</span><br><span class="line">    set&lt;<span class="type">int</span>&gt; nums;</span><br><span class="line">    unordered_map&lt;<span class="type">int</span>,<span class="type">int</span>&gt; m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="type">int</span> dis;</span><br><span class="line">        dis=<span class="built_in">abs</span>((i<span class="number">+1</span>)-poker[i]);</span><br><span class="line">        nums.<span class="built_in">insert</span>(dis);</span><br><span class="line">        m[dis]++;</span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; ans;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> it:nums)&#123;</span><br><span class="line">        <span class="keyword">if</span>(m[it]&gt;<span class="number">1</span>) ans.<span class="built_in">push_back</span>(it);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=ans.<span class="built_in">size</span>()<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">        cout&lt;&lt;ans[i]&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;m[ans[i]]&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>太简单，不讲。</p><h2 id="1084"><a href="#1084" class="headerlink" title="1084"></a>1084</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">char</span> d;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    string ans;</span><br><span class="line">    cin&gt;&gt;d&gt;&gt;n;</span><br><span class="line">    ans+=d;</span><br><span class="line">    <span class="keyword">if</span> (n==<span class="number">1</span>)&#123;</span><br><span class="line">        cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">            string next;</span><br><span class="line">            <span class="type">int</span> pos=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(pos&lt;ans.<span class="built_in">size</span>())&#123;</span><br><span class="line">                <span class="type">char</span> c=ans[pos];</span><br><span class="line">                <span class="type">int</span> m=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">while</span> (pos<span class="number">+1</span>&lt;ans.<span class="built_in">size</span>()&amp;&amp;ans[pos<span class="number">+1</span>]==c)&#123;</span><br><span class="line">                    m++;</span><br><span class="line">                    pos++;</span><br><span class="line">                &#125;</span><br><span class="line">                next+=c;</span><br><span class="line">                next+=<span class="built_in">to_string</span>(m);</span><br><span class="line">                pos++;</span><br><span class="line">            &#125;</span><br><span class="line">            ans=next;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>题目没讲清楚。</p><p>这个题面可能会让人误以为是统计原本字符串中所有的数字，实际上是要统计连续的数字。</p><h2 id="1085"><a href="#1085" class="headerlink" title="1085"></a>1085</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">school</span>&#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">    string name;</span><br><span class="line">    <span class="type">int</span> s;</span><br><span class="line">    <span class="type">int</span> man;</span><br><span class="line">    <span class="type">int</span> p;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(school a,school b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a.s==b.s)&#123;</span><br><span class="line">        <span class="keyword">if</span> (a.man==b.man)&#123;</span><br><span class="line">            <span class="keyword">return</span> a.name&lt;b.name;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> a.man&lt;b.man;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a.s&gt;b.s;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">double</span> score;</span><br><span class="line">string test,where;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    unordered_map&lt;string,<span class="type">double</span>&gt; sum;</span><br><span class="line">    unordered_map&lt;string,<span class="type">int</span>&gt; m1;</span><br><span class="line">    set&lt;string&gt; keyy;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;test&gt;&gt;score&gt;&gt;where;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">char</span> &amp;c:where)&#123;</span><br><span class="line">            c=<span class="built_in">tolower</span>(c);</span><br><span class="line">        &#125;</span><br><span class="line">        m1[where]++;</span><br><span class="line">        <span class="keyword">if</span> (keyy.<span class="built_in">find</span>(where)==keyy.<span class="built_in">end</span>())&#123;</span><br><span class="line">            sum[where]=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        keyy.<span class="built_in">insert</span>(where);</span><br><span class="line">        <span class="type">char</span> m=test[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">if</span>(m==<span class="string">&#x27;A&#x27;</span>)&#123;</span><br><span class="line">            sum[where]+=score;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(m==<span class="string">&#x27;B&#x27;</span>)&#123;</span><br><span class="line">            score/=<span class="number">1.5</span>;</span><br><span class="line">            <span class="comment">//score=(int)(score+0.5);</span></span><br><span class="line">            sum[where]+=score;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(m==<span class="string">&#x27;T&#x27;</span>)&#123;</span><br><span class="line">            score*=<span class="number">1.5</span>;</span><br><span class="line">            <span class="comment">//score=(int)(score+0.5);</span></span><br><span class="line">            sum[where]+=score;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;school&gt; ans;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> it:keyy)&#123;</span><br><span class="line">        school r;</span><br><span class="line">        r.man=m1[it];</span><br><span class="line">        r.s=(<span class="type">int</span>)sum[it];</span><br><span class="line">        r.name=it;</span><br><span class="line">        ans.<span class="built_in">push_back</span>(r);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(ans.<span class="built_in">begin</span>(),ans.<span class="built_in">end</span>(),cmp);</span><br><span class="line">    ans[<span class="number">0</span>].p=<span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> cur=<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;ans.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (ans[i].s==ans[i<span class="number">-1</span>].s)&#123;</span><br><span class="line">            ans[i].p=ans[i<span class="number">-1</span>].p;</span><br><span class="line">            cur++;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            ans[i].p=cur;</span><br><span class="line">            cur++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans.<span class="built_in">size</span>()&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">if</span> (ans.<span class="built_in">size</span>()==<span class="number">0</span>)&#123;</span><br><span class="line">        cout&lt;&lt;<span class="number">0</span>&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;ans.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        cout&lt;&lt;ans[i].p&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;ans[i].name&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,ans[i].s);</span><br><span class="line">        cout&lt;&lt;ans[i].man&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>小心浮点误差。</p><p>这就是一个很纯粹的大模拟，难度尚且在B1080之下</p><p>我一个浮点误差处理了半节课之久。</p><h2 id="1086"><a href="#1086" class="headerlink" title="1086"></a>1086</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">back_num</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (x&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="type">int</span> t=x%<span class="number">10</span>;</span><br><span class="line">        res=res*<span class="number">10</span>+t;</span><br><span class="line">        x/=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> a,b;</span><br><span class="line">    cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line">    <span class="type">int</span> ans=<span class="built_in">back_num</span>(a*b);</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1087"><a href="#1087" class="headerlink" title="1087"></a>1087</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">set&lt;<span class="type">int</span>&gt; num;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="type">double</span> a=i/<span class="number">2.0</span>;</span><br><span class="line">        <span class="type">double</span> b=i/<span class="number">3.0</span>;</span><br><span class="line">        <span class="type">double</span> c=i/<span class="number">5.0</span>;</span><br><span class="line">        <span class="type">int</span> sum=(<span class="type">int</span>)a+(<span class="type">int</span>)b+(<span class="type">int</span>)c;</span><br><span class="line">        num.<span class="built_in">insert</span>(sum);</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;num.<span class="built_in">size</span>()&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1088"><a href="#1088" class="headerlink" title="1088"></a>1088</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">reverse_num</span><span class="params">(<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (n % <span class="number">10</span>) * <span class="number">10</span> + (n / <span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> m, x, y;</span><br><span class="line">    cin &gt;&gt; m &gt;&gt; x &gt;&gt; y;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> best_a = <span class="number">0</span>;</span><br><span class="line">    <span class="type">double</span> best_b = <span class="number">0</span>, best_c = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> a = <span class="number">10</span>; a &lt; <span class="number">100</span>; a++) &#123;</span><br><span class="line">        <span class="type">int</span> b = <span class="built_in">reverse_num</span>(a);</span><br><span class="line">        <span class="type">double</span> diff = <span class="built_in">abs</span>(a - b) * <span class="number">1.0</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 关键修改：使用浮点数计算和比较</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">fabs</span>(diff / x - b * <span class="number">1.0</span> / y) &lt; <span class="number">1e-5</span>) &#123;</span><br><span class="line">            <span class="type">double</span> c = diff / x;</span><br><span class="line">            <span class="keyword">if</span> (a &gt; best_a) &#123;</span><br><span class="line">                best_a = a;</span><br><span class="line">                best_b = b;</span><br><span class="line">                best_c = c;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (best_a == <span class="number">0</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;No Solution&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    cout &lt;&lt; best_a &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 输出比较结果</span></span><br><span class="line">    vector&lt;<span class="type">double</span>&gt; values = &#123;best_a * <span class="number">1.0</span>, best_b, best_c&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">fabs</span>(m - values[i]) &lt; <span class="number">1e-5</span>) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;Ping&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (m &gt; values[i]) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;Gai&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;Cong&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (i &lt; <span class="number">2</span>) cout &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>你牛大了，4测试点塞了一个什么数据你心里有数</p><p>简单来说，a是整数，b是整数，但谁告诉你c也一定要是整数了？</p><p>如果是这个地方我只能说两分送你了，我改不出来了。</p><blockquote><p>这一题是个什么情况，我问遍了三四个ai都没有找出来错误点，可见这个恶意有多么明显。</p></blockquote><h2 id="1089"><a href="#1089" class="headerlink" title="1089"></a>1089</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">statements</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        cin &gt;&gt; statements[i];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = i + <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">            <span class="comment">// 假设i和j是狼人</span></span><br><span class="line">            <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">identity</span><span class="params">(n + <span class="number">1</span>, <span class="number">1</span>)</span></span>; <span class="comment">// 1表示平民，-1表示狼人</span></span><br><span class="line">            identity[i] = <span class="number">-1</span>;</span><br><span class="line">            identity[j] = <span class="number">-1</span>;</span><br><span class="line">            </span><br><span class="line">            vector&lt;<span class="type">int</span>&gt; liars; <span class="comment">// 存储说谎者的索引</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">1</span>; k &lt;= n; k++) &#123;</span><br><span class="line">                <span class="type">int</span> said = statements[k];</span><br><span class="line">                <span class="type">int</span> target = <span class="built_in">abs</span>(said);</span><br><span class="line">                <span class="comment">// 判断说话内容与实际情况是否一致</span></span><br><span class="line">                <span class="keyword">if</span> ((said &gt; <span class="number">0</span> &amp;&amp; identity[target] == <span class="number">-1</span>) || (said &lt; <span class="number">0</span> &amp;&amp; identity[target] == <span class="number">1</span>)) &#123;</span><br><span class="line">                    liars.<span class="built_in">push_back</span>(k);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 检查条件：恰好有两个说谎者，且一个狼人一个平民</span></span><br><span class="line">            <span class="keyword">if</span> (liars.<span class="built_in">size</span>() == <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="type">int</span> wolf_count = <span class="number">0</span>, human_count = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> liar : liars) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (identity[liar] == <span class="number">-1</span>) wolf_count++;</span><br><span class="line">                    <span class="keyword">else</span> human_count++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (wolf_count == <span class="number">1</span> &amp;&amp; human_count == <span class="number">1</span>) &#123;</span><br><span class="line">                    cout &lt;&lt; i &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; j &lt;&lt; endl;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;No Solution&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>遍历元素然后查找，目前想不出更优的解法。</p><h2 id="1090"><a href="#1090" class="headerlink" title="1090"></a>1090</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    unordered_map&lt;<span class="type">int</span>,set&lt;<span class="type">int</span>&gt;&gt; listing;</span><br><span class="line">    set&lt;<span class="type">int</span>&gt; keyy;</span><br><span class="line">    <span class="type">int</span> x,y;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;x&gt;&gt;y;</span><br><span class="line">        listing[x].<span class="built_in">insert</span>(y);</span><br><span class="line">        listing[y].<span class="built_in">insert</span>(x);</span><br><span class="line">        keyy.<span class="built_in">insert</span>(x);</span><br><span class="line">        keyy.<span class="built_in">insert</span>(y);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        <span class="type">int</span> k;</span><br><span class="line">        cin&gt;&gt;k;</span><br><span class="line">        set&lt;<span class="type">int</span>&gt; g;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>;j&lt;k;j++)&#123;</span><br><span class="line">            <span class="type">int</span> z;</span><br><span class="line">            cin&gt;&gt;z;</span><br><span class="line">            g.<span class="built_in">insert</span>(z);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> flag=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> it:g)&#123;</span><br><span class="line">            <span class="keyword">if</span> (keyy.<span class="built_in">find</span>(it)!=keyy.<span class="built_in">end</span>())&#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">auto</span> a:listing[it])&#123;</span><br><span class="line">                    <span class="keyword">if</span> (g.<span class="built_in">find</span>(a)!=g.<span class="built_in">end</span>())&#123;</span><br><span class="line">                        flag=<span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag==<span class="number">0</span>)&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;Yes&quot;</span>&lt;&lt;endl;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;No&quot;</span>&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1091"><a href="#1091" class="headerlink" title="1091"></a>1091</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> m;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">num_size</span><span class="params">(<span class="type">int</span> a)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (a&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        sum++;</span><br><span class="line">        a/=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">self_num</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b,<span class="type">int</span> c)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> d=a*c;</span><br><span class="line">    <span class="type">int</span> sum=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (b--)&#123;</span><br><span class="line">        sum*=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> res=d%sum;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;m;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="keyword">while</span> (m--)&#123;</span><br><span class="line">        cin&gt;&gt;x;</span><br><span class="line">        <span class="type">int</span> y=x*x;</span><br><span class="line">        <span class="type">int</span> flag=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">            <span class="comment">//cout&lt;&lt;num_size(x)&lt;&lt;&quot; &quot;&lt;&lt;self_num(y,num_size(x),i)&lt;&lt;endl;</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">self_num</span>(y,<span class="built_in">num_size</span>(x),i)==x)&#123;</span><br><span class="line">                cout&lt;&lt;i&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;y*i&lt;&lt;endl;</span><br><span class="line">                flag=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag==<span class="number">0</span>)&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;No&quot;</span>&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1092"><a href="#1092" class="headerlink" title="1092"></a>1092</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">cookie</span>&#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">    <span class="type">int</span> num;</span><br><span class="line">    <span class="type">int</span> sell;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(cookie a,cookie b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.sell&gt;b.sell;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="function">vector&lt;cookie&gt; <span class="title">a</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        a[i].num=i<span class="number">+1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (m--)&#123;</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">b</span><span class="params">(n)</span></span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            cin&gt;&gt;b[i];</span><br><span class="line">            a[i].sell+=b[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(a.<span class="built_in">begin</span>(),a.<span class="built_in">end</span>(),cmp);</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; ans;</span><br><span class="line">    <span class="type">int</span> maxx=a[<span class="number">0</span>].sell;</span><br><span class="line">    ans.<span class="built_in">push_back</span>(a[<span class="number">0</span>].num);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i].sell==maxx)&#123;</span><br><span class="line">            ans.<span class="built_in">push_back</span>(a[i].num);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(a[i].sell&lt;maxx)&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;a[<span class="number">0</span>].sell&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">if</span> (ans.<span class="built_in">size</span>()==<span class="number">1</span>)&#123;</span><br><span class="line">        cout&lt;&lt;ans[<span class="number">0</span>]&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(ans.<span class="built_in">begin</span>(),ans.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;ans.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (i==ans.<span class="built_in">size</span>()<span class="number">-1</span>) cout&lt;&lt;ans[i];</span><br><span class="line">        <span class="keyword">else</span> cout&lt;&lt;ans[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1093"><a href="#1093" class="headerlink" title="1093"></a>1093</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">string a,b;</span><br><span class="line">set&lt;<span class="type">char</span>&gt; s;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">getline</span>(cin,a);</span><br><span class="line">    <span class="comment">//cin.ignore();</span></span><br><span class="line">    <span class="built_in">getline</span>(cin,b);</span><br><span class="line">    string n=a+b;</span><br><span class="line">    string ans;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">char</span> c:n)&#123;</span><br><span class="line">        <span class="keyword">if</span> (s.<span class="built_in">find</span>(c)==s.<span class="built_in">end</span>())&#123;</span><br><span class="line">            ans+=c;</span><br><span class="line">            s.<span class="built_in">insert</span>(c);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>set的模板题</p><h2 id="1094"><a href="#1094" class="headerlink" title="1094"></a>1094</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isprime</span><span class="params">(<span class="type">int</span> a)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a==<span class="number">1</span>||a==<span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (a==<span class="number">2</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">2</span>;i*i&lt;=a;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (a%i==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">turn_num</span><span class="params">(string a)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;a.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="type">int</span> tem=a[i]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        res=res*<span class="number">10</span>+tem;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> n,k;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    string num,s;</span><br><span class="line">    cin&gt;&gt;num;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;=n-k;i++)&#123;</span><br><span class="line">        s=num.<span class="built_in">substr</span>(i,k);</span><br><span class="line">        <span class="type">int</span> x=<span class="built_in">turn_num</span>(s);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isprime</span>(x))&#123;</span><br><span class="line">            cout&lt;&lt;s&lt;&lt;endl;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;404&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>很模板的一道题，没什么好说的，记住在判断素数的那一串里面要判断一下为0的情况。</p><h2 id="1095"><a href="#1095" class="headerlink" title="1095"></a>1095</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">stu</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="type">char</span> type;</span><br><span class="line">    string num;</span><br><span class="line">    string date;</span><br><span class="line">    string id;</span><br><span class="line">    <span class="type">int</span> score;</span><br><span class="line">    string test;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">stage</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    string nums;</span><br><span class="line">    <span class="type">int</span> man;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">stage</span>(string n, <span class="type">int</span> m) : <span class="built_in">nums</span>(n), <span class="built_in">man</span>(m) &#123;&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">bool</span> <span class="keyword">operator</span>&lt;(<span class="type">const</span> stage&amp; other) <span class="type">const</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (man == other.man) &#123;</span><br><span class="line">            <span class="keyword">return</span> nums &lt; other.nums;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> man &gt; other.man;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(<span class="type">const</span> stu&amp; a, <span class="type">const</span> stu&amp; b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a.score == b.score) &#123;</span><br><span class="line">        <span class="keyword">return</span> a.test &lt; b.test;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> a.score &gt; b.score;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    </span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="function">vector&lt;stu&gt; <span class="title">add</span><span class="params">(n)</span></span>;</span><br><span class="line">    string s;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 预处理：按日期组织数据</span></span><br><span class="line">    unordered_map&lt;string, vector&lt;stu&gt;&gt; dateMap;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        cin &gt;&gt; s &gt;&gt; x;</span><br><span class="line">        add[i].test = s;</span><br><span class="line">        add[i].type = s[<span class="number">0</span>];</span><br><span class="line">        add[i].num = s.<span class="built_in">substr</span>(<span class="number">1</span>, <span class="number">3</span>);</span><br><span class="line">        add[i].date = s.<span class="built_in">substr</span>(<span class="number">4</span>, <span class="number">6</span>);</span><br><span class="line">        add[i].id = s.<span class="built_in">substr</span>(<span class="number">10</span>);</span><br><span class="line">        add[i].score = x;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 添加到日期映射中</span></span><br><span class="line">        dateMap[add[i].date].<span class="built_in">push_back</span>(add[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 预处理：按考场组织数据</span></span><br><span class="line">    unordered_map&lt;string, pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;&gt; siteMap; <span class="comment">// site -&gt; (count, total)</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">const</span> <span class="keyword">auto</span>&amp; student : add) &#123;</span><br><span class="line">        siteMap[student.num].first++;</span><br><span class="line">        siteMap[student.num].second += student.score;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 预处理：按类型组织数据</span></span><br><span class="line">    unordered_map&lt;<span class="type">char</span>, vector&lt;stu&gt;&gt; typeMap;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">const</span> <span class="keyword">auto</span>&amp; student : add) &#123;</span><br><span class="line">        typeMap[student.type].<span class="built_in">push_back</span>(student);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 对预处理的数据进行排序</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span>&amp; pair : typeMap) &#123;</span><br><span class="line">        <span class="built_in">sort</span>(pair.second.<span class="built_in">begin</span>(), pair.second.<span class="built_in">end</span>(), cmp);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">        <span class="type">int</span> a;</span><br><span class="line">        cin &gt;&gt; a;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Case &quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;: &quot;</span> &lt;&lt; a &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (a == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="type">char</span> c;</span><br><span class="line">            cin &gt;&gt; c;</span><br><span class="line">            cout &lt;&lt; c &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (typeMap.<span class="built_in">find</span>(c) == typeMap.<span class="built_in">end</span>() || typeMap[c].<span class="built_in">empty</span>()) &#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;NA\n&quot;</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">const</span> <span class="keyword">auto</span>&amp; student : typeMap[c]) &#123;</span><br><span class="line">                    cout &lt;&lt; student.test &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; student.score &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (a == <span class="number">2</span>) &#123;</span><br><span class="line">            string h;</span><br><span class="line">            cin &gt;&gt; h;</span><br><span class="line">            cout &lt;&lt; h &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (siteMap.<span class="built_in">find</span>(h) == siteMap.<span class="built_in">end</span>()) &#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;NA\n&quot;</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                cout &lt;&lt; siteMap[h].first &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; siteMap[h].second &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (a == <span class="number">3</span>) &#123;</span><br><span class="line">            string ymd;</span><br><span class="line">            cin &gt;&gt; ymd;</span><br><span class="line">            cout &lt;&lt; ymd &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (dateMap.<span class="built_in">find</span>(ymd) == dateMap.<span class="built_in">end</span>() || dateMap[ymd].<span class="built_in">empty</span>()) &#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;NA\n&quot;</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                unordered_map&lt;string, <span class="type">int</span>&gt; siteCount;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">const</span> <span class="keyword">auto</span>&amp; student : dateMap[ymd]) &#123;</span><br><span class="line">                    siteCount[student.num]++;</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                vector&lt;stage&gt; result;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">const</span> <span class="keyword">auto</span>&amp; pair : siteCount) &#123;</span><br><span class="line">                    result.<span class="built_in">emplace_back</span>(pair.first, pair.second);</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                <span class="built_in">sort</span>(result.<span class="built_in">begin</span>(), result.<span class="built_in">end</span>());</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">const</span> <span class="keyword">auto</span>&amp; site : result) &#123;</span><br><span class="line">                    cout &lt;&lt; site.nums &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; site.man &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            string temp;</span><br><span class="line">            cin &gt;&gt; temp;</span><br><span class="line">            cout &lt;&lt; temp &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;NA\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>超级麻烦，我写的代码太丑陋了，遂贴一下ai写的。</p><p>这种东西感觉意义不大，转专业考试不可能真考这种东西。</p><h2 id="1096"><a href="#1096" class="headerlink" title="1096"></a>1096</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> k,n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;k;</span><br><span class="line">    <span class="keyword">while</span> (k--)&#123;</span><br><span class="line">        cin&gt;&gt;n;</span><br><span class="line">        vector&lt;<span class="type">int</span>&gt; ans;</span><br><span class="line">        set&lt;<span class="type">int</span>&gt; s;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (n%i==<span class="number">0</span>&amp;&amp;s.<span class="built_in">find</span>(i)==s.<span class="built_in">end</span>())&#123;</span><br><span class="line">                ans.<span class="built_in">push_back</span>(i);</span><br><span class="line">                s.<span class="built_in">insert</span>(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ans.<span class="built_in">size</span>()&lt;<span class="number">4</span>)&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;No&quot;</span>&lt;&lt;endl;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">bool</span> flag=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;ans.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j=i<span class="number">+1</span>;j&lt;ans.<span class="built_in">size</span>();j++)&#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> k=j<span class="number">+1</span>;k&lt;ans.<span class="built_in">size</span>();k++)&#123;</span><br><span class="line">                    <span class="type">int</span> a=ans[i];</span><br><span class="line">                    <span class="type">int</span> b=ans[j];</span><br><span class="line">                    <span class="type">int</span> c=ans[k];</span><br><span class="line">                    <span class="type">int</span> sum=a+b+c;</span><br><span class="line">                    <span class="type">int</span> res=sum%n;</span><br><span class="line">                    <span class="type">int</span> d=res==<span class="number">0</span>?n:n-res;</span><br><span class="line">                    <span class="keyword">if</span> (s.<span class="built_in">find</span>(d)!=s.<span class="built_in">end</span>()&amp;&amp;d!=a&amp;&amp;d!=b&amp;&amp;d!=c)&#123;</span><br><span class="line">                        flag=<span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag==<span class="number">1</span>)&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;Yes&quot;</span>&lt;&lt;endl;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;No&quot;</span>&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这题其实挺难的，放在5k+1这个地方其实不太合理，至少的是5k+4的水平。</p><p>这题最难想的其实是如何去降低时间复杂度</p><p>我最开始想的是只枚举两个因子，剩下的两个因子用除法除出来，但是那样子其实怪麻烦的，因为我试了一下枚举三个也能过</p><p>枚举三个，然后计算出第四个，看第四个是不是满足条件的因子，如果是，那就重置flag为1，结束循环</p><h2 id="1097"><a href="#1097" class="headerlink" title="1097"></a>1097</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,k,x;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;k&gt;&gt;x;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">a</span>(n<span class="number">+1</span>,<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(n<span class="number">+1</span>));</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">            cin&gt;&gt;a[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> idx=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> cur=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (idx&lt;=n)&#123;</span><br><span class="line">        deque&lt;<span class="type">int</span>&gt; d;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            d.<span class="built_in">push_back</span>(a[idx][i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;cur;i++)&#123;</span><br><span class="line">            d.<span class="built_in">pop_back</span>();</span><br><span class="line">            d.<span class="built_in">push_front</span>(x);</span><br><span class="line">        &#125;</span><br><span class="line">        a[idx].<span class="built_in">clear</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            a[idx].<span class="built_in">push_back</span>(d.<span class="built_in">front</span>());</span><br><span class="line">            d.<span class="built_in">pop_front</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        idx+=<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (cur==k)&#123;</span><br><span class="line">            cur=<span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            cur++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; ans;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">            sum+=a[j][i];</span><br><span class="line">        &#125;</span><br><span class="line">        ans.<span class="built_in">push_back</span>(sum);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (i==n<span class="number">-1</span>)&#123;</span><br><span class="line">            cout&lt;&lt;ans[i];</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            cout&lt;&lt;ans[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>双端队列秒了</p><h2 id="1098"><a href="#1098" class="headerlink" title="1098"></a>1098</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">high</span><span class="params">(n<span class="number">+1</span>)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">loww</span><span class="params">(n<span class="number">+1</span>)</span></span>;</span><br><span class="line">    <span class="type">int</span> maxx=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> minn=<span class="number">1010</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;high[i];</span><br><span class="line">        minn=<span class="built_in">min</span>(high[i],minn);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;loww[i];</span><br><span class="line">        maxx=<span class="built_in">max</span>(loww[i],maxx);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (maxx&gt;=minn)&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;No&quot;</span>&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;maxx-minn<span class="number">+1</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(minn&gt;maxx)&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Yes&quot;</span>&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;minn-maxx;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>好题，比前面的百行大模拟好多了，更贴近于思维的培养而不是让你疯狂写代码，PAT史里淘金了这下。</p><p>观察就会发现，只要上界的最小值比下界的最大值大，那么就一定没办法修成管道，反之则一定可以，至于最大的和要削多少，一个是上下界差值，一个是上下界距离加一。</p><p>不懂的自己拿画图软件模拟一下就知道了。</p><h2 id="1099"><a href="#1099" class="headerlink" title="1099"></a>1099</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isprime</span><span class="params">(<span class="type">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n&lt;<span class="number">2</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (n==<span class="number">2</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">2</span>;i*i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (n%i==<span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">sexprime</span><span class="params">(<span class="type">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> a=n<span class="number">-6</span>;</span><br><span class="line">    <span class="type">int</span> b=n<span class="number">+6</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">isprime</span>(a)||<span class="built_in">isprime</span>(b))&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">isprime</span>(n))&#123;</span><br><span class="line">        <span class="type">int</span> a=n<span class="number">+6</span>;</span><br><span class="line">        <span class="type">int</span> b=n<span class="number">-6</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isprime</span>(a)&amp;&amp;<span class="built_in">isprime</span>(b))&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;Yes&quot;</span>&lt;&lt;endl;</span><br><span class="line">            cout&lt;&lt;b&lt;&lt;endl;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">isprime</span>(a)&amp;&amp;!<span class="built_in">isprime</span>(b))&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;Yes&quot;</span>&lt;&lt;endl;</span><br><span class="line">            cout&lt;&lt;a&lt;&lt;endl;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(!<span class="built_in">isprime</span>(a)&amp;&amp;<span class="built_in">isprime</span>(b))&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;Yes&quot;</span>&lt;&lt;endl;</span><br><span class="line">            cout&lt;&lt;b&lt;&lt;endl;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> ans;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=n<span class="number">+1</span>;;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">isprime</span>(i)&amp;&amp;<span class="built_in">sexprime</span>(i))&#123;</span><br><span class="line">                ans=i;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;No&quot;</span>&lt;&lt;endl;</span><br><span class="line">        cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">isprime</span>(n))&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;No&quot;</span>&lt;&lt;endl;</span><br><span class="line">        <span class="type">int</span> ans;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=n<span class="number">+1</span>;;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">isprime</span>(i)&amp;&amp;<span class="built_in">sexprime</span>(i))&#123;</span><br><span class="line">                ans=i;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1100"><a href="#1100" class="headerlink" title="1100"></a>1100</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">string id;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">fri</span>&#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">    string idcard;</span><br><span class="line">    <span class="type">int</span> year;</span><br><span class="line">    <span class="type">int</span> month;</span><br><span class="line">    <span class="type">int</span> day;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(fri a,fri b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a.year==b.year)&#123;</span><br><span class="line">        <span class="keyword">if</span> (a.month==a.month)&#123;</span><br><span class="line">            <span class="keyword">return</span> a.day&lt;b.day;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> a.month&lt;b.month;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a.year&lt;b.year;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="function">vector&lt;fri&gt; <span class="title">a</span><span class="params">(n<span class="number">+1</span>)</span></span>;</span><br><span class="line">    set&lt;string&gt; s;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;a[i].idcard;</span><br><span class="line">        s.<span class="built_in">insert</span>(a[i].idcard);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> m;</span><br><span class="line">    cin&gt;&gt;m;</span><br><span class="line">    vector&lt;fri&gt; ans;</span><br><span class="line">    <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        cin&gt;&gt;id;</span><br><span class="line">        <span class="keyword">if</span> (s.<span class="built_in">find</span>(id)!=s.<span class="built_in">end</span>())&#123;</span><br><span class="line">            sum++;</span><br><span class="line">        &#125;</span><br><span class="line">        ans.<span class="built_in">push_back</span>((fri)&#123;id,<span class="built_in">stoi</span>(id.<span class="built_in">substr</span>(<span class="number">6</span>,<span class="number">4</span>)),<span class="built_in">stoi</span>(id.<span class="built_in">substr</span>(<span class="number">10</span>,<span class="number">2</span>)),<span class="built_in">stoi</span>(id.<span class="built_in">substr</span>(<span class="number">12</span>,<span class="number">2</span>))&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (sum==<span class="number">0</span>)&#123;</span><br><span class="line">        cout&lt;&lt;<span class="number">0</span>&lt;&lt;endl;</span><br><span class="line">        <span class="built_in">sort</span>(ans.<span class="built_in">begin</span>(),ans.<span class="built_in">end</span>(),cmp);</span><br><span class="line">        cout&lt;&lt;ans[<span class="number">0</span>].idcard&lt;&lt;endl;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        vector&lt;fri&gt; sch;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;ans.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (s.<span class="built_in">find</span>(ans[i].idcard)!=s.<span class="built_in">end</span>())&#123;</span><br><span class="line">                sch.<span class="built_in">push_back</span>(ans[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">sort</span>(sch.<span class="built_in">begin</span>(),sch.<span class="built_in">end</span>(),cmp);</span><br><span class="line">        cout&lt;&lt;sum&lt;&lt;endl;</span><br><span class="line">        cout&lt;&lt;sch[<span class="number">0</span>].idcard&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我越写越觉得这种题没意义啊，锻炼代码能力来的，重要的是稳住以及迅速查找需要的容器。</p><h2 id="1101"><a href="#1101" class="headerlink" title="1101"></a>1101</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//#define int long long</span></span><br><span class="line"><span class="type">int</span> a,d;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">turn_num</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> d)</span></span>&#123;</span><br><span class="line">    deque&lt;<span class="type">int</span>&gt; de;</span><br><span class="line">    <span class="type">int</span> temp;</span><br><span class="line">    <span class="keyword">while</span> (a&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        temp=a%<span class="number">10</span>;</span><br><span class="line">        de.<span class="built_in">push_front</span>(temp);</span><br><span class="line">        a/=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (d--)&#123;</span><br><span class="line">        temp=de.<span class="built_in">back</span>();</span><br><span class="line">        de.<span class="built_in">pop_back</span>();</span><br><span class="line">        de.<span class="built_in">push_front</span>(temp);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> it:de)&#123;</span><br><span class="line">        res=res*<span class="number">10</span>+it;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;a&gt;&gt;d;</span><br><span class="line">    <span class="type">int</span> b=<span class="built_in">turn_num</span>(a,d);</span><br><span class="line">    <span class="type">double</span> ans=(<span class="type">double</span>)b/a;<span class="comment">//注意这里</span></span><br><span class="line">    <span class="comment">//cout&lt;&lt;b&lt;&lt;endl;</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2f&quot;</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1102"><a href="#1102" class="headerlink" title="1102"></a>1102</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">works</span>&#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">    string id;</span><br><span class="line">    <span class="type">int</span> price;</span><br><span class="line">    <span class="type">int</span> sell;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp1</span><span class="params">(works a,works b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.sell&gt;b.sell;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp2</span><span class="params">(works a,works b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.sell*a.price&gt;b.sell*b.price;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="function">vector&lt;works&gt; <span class="title">ans</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;ans[i].id&gt;&gt;ans[i].price&gt;&gt;ans[i].sell;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(ans.<span class="built_in">begin</span>(),ans.<span class="built_in">end</span>(),cmp1);</span><br><span class="line">    cout&lt;&lt;ans[<span class="number">0</span>].id&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;ans[<span class="number">0</span>].sell&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">sort</span>(ans.<span class="built_in">begin</span>(),ans.<span class="built_in">end</span>(),cmp2);</span><br><span class="line">    cout&lt;&lt;ans[<span class="number">0</span>].id&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;ans[<span class="number">0</span>].sell*ans[<span class="number">0</span>].price&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1103"><a href="#1103" class="headerlink" title="1103"></a>1103</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isquare</span><span class="params">(<span class="type">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n&lt;<span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="type">int</span> r=<span class="built_in">sqrt</span>(n);</span><br><span class="line">    <span class="keyword">return</span> r*r==n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> m,n;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;m&gt;&gt;n;</span><br><span class="line">    <span class="type">int</span> flag=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=m;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="type">int</span> a=i*i*i-(i<span class="number">-1</span>)*(i<span class="number">-1</span>)*(i<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isquare</span>(a))&#123;</span><br><span class="line">            <span class="type">int</span> root=<span class="built_in">sqrt</span>(a);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">2</span>;j&lt;=root;j++)&#123;</span><br><span class="line">                <span class="type">int</span> b=j*j+(j<span class="number">-1</span>)*(j<span class="number">-1</span>);</span><br><span class="line">                <span class="keyword">if</span> (b==root)&#123;</span><br><span class="line">                    cout&lt;&lt;i&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;j&lt;&lt;endl;</span><br><span class="line">                    flag=<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (flag==<span class="number">0</span>)&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;No Solution&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这一题重点在于平方数的判断，直接把那个函数背下来就好了</p><p>其他的就是去枚举答案，符合条件的输出就行，因为数据范围很小。</p><h2 id="1104"><a href="#1104" class="headerlink" title="1104"></a>1104</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">int</span> n,k,m;</span><br><span class="line">string num;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">node</span>&#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">    <span class="type">int</span> w;</span><br><span class="line">    <span class="type">int</span> ansnum;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a.w==b.w)&#123;</span><br><span class="line">        <span class="keyword">return</span> a.ansnum&lt;b.ansnum;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a.w&lt;b.w;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">gcd</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b==<span class="number">0</span>?a:<span class="built_in">gcd</span>(b,a%b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isprime</span><span class="params">(<span class="type">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n&lt;<span class="number">2</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (n==<span class="number">2</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">2</span>;i*i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (n%i==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">sum_num</span><span class="params">(<span class="type">int</span> a)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (a&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="type">int</span> temp=a%<span class="number">10</span>;</span><br><span class="line">        res+=temp;</span><br><span class="line">        a/=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line">vector&lt;node&gt; ans;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> step,<span class="type">int</span> sum)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (step==k<span class="number">-2</span>)&#123;</span><br><span class="line">        string s=num+<span class="string">&quot;99&quot;</span>;</span><br><span class="line">        <span class="type">int</span> a=<span class="built_in">stoll</span>(s);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">sum_num</span>(a)!=m) <span class="keyword">return</span>;</span><br><span class="line">        <span class="type">int</span> b=a<span class="number">+1</span>;</span><br><span class="line">        <span class="type">int</span> sum_b=<span class="built_in">sum_num</span>(b);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">gcd</span>(sum_b,m)&gt;<span class="number">2</span>&amp;&amp;<span class="built_in">isprime</span>(<span class="built_in">gcd</span>(sum_b,m)))&#123;</span><br><span class="line">            ans.<span class="built_in">push_back</span>((node)&#123;sum_b,a&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> tbegin=(step==<span class="number">0</span>)?<span class="number">1</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=tbegin;i&lt;=<span class="number">9</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (sum+i&gt;m<span class="number">-18</span>)&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            num.<span class="built_in">push_back</span>(<span class="string">&#x27;0&#x27;</span>+i);</span><br><span class="line">            <span class="built_in">dfs</span>(step<span class="number">+1</span>,sum+i);</span><br><span class="line">            num.<span class="built_in">pop_back</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="type">int</span> cur=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (n--)&#123;</span><br><span class="line">        cin&gt;&gt;k&gt;&gt;m;</span><br><span class="line">        <span class="type">int</span> flag=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">dfs</span>(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Case &quot;</span>&lt;&lt;cur&lt;&lt;endl;</span><br><span class="line">        cur++;</span><br><span class="line">        <span class="keyword">if</span> (ans.<span class="built_in">size</span>()==<span class="number">0</span>)&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;No Solution&quot;</span>&lt;&lt;endl;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">sort</span>(ans.<span class="built_in">begin</span>(),ans.<span class="built_in">end</span>(),cmp);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;ans.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">                cout&lt;&lt;ans[i].w&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;ans[i].ansnum&lt;&lt;endl;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ans.<span class="built_in">clear</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>PTA算法感最强的一题，涉及算法DFS，而且并非普通DFS。</p><p>目前来看，这一题的难度大于前面104题，等我做完我可以给个结论这题是不是最难的。</p><p>现在进入正文，如果你尚且对DFS&#x2F;BFS没有一点了解，现在应该立刻去补修相关知识，这很重要。</p><p>并且这一题最基本的点是你要懂的gcd函数，素数判断函数，求各位和函数怎么写，这个都不会等着爆0。</p><p>在我的认知中，DFS一般是用来求解和图论相关的问题的，我在内心把图论和DFS绑在了一起，导致了我在面对这种题目时没有第一时间想到DFS。</p><p>DFS的大名叫做深度优先搜索，什么是搜索，搜是一个动词，而索这个字告诉了你，进行这个行为需要你提供索引。</p><p>我们发现这个数据范围给的非常大，已经达到了10的十次方级别了，就算是O(n)的复杂度也是一样会超时的（热知识，一般而言最差时间达到10的七次方，那大概率会有测试点爆TLE）因此常规的枚举是绝对不可能用的。在面对这种超大数据范围时，DFS是一个很优秀的选择，通过与其关联的剪枝和回溯两个算法可以很显著的降低时间复杂度。</p><p>我们观察发现，求数一定要以9结尾，否则不可能与原数有一个大于2的最大公约数，且至少需要2个末尾9（题目样例和实际验证表明，单个末尾9通常难以满足条件，或者解不完整）。</p><p>DFS主函数的内部算法是通过step记录现在数字字符串已经有几位了，通过sum来记录现在各位数字的和。在最开始，我们需要判断，当step&#x3D;&#x3D;k-2时，即说明这个数字已经被填充好了，找到了第一个数字，可以进行判断，而判断的方法就和题面描述的一样，最后将满足条件的答案存入ans数组并且输出就可以了。</p><p>（这题用暴力枚举可以得到12分，也就是及格分，在这里陈越手下留情了，没有让暴力直接爆0）</p><p>下面我给出AI的一些补充</p><blockquote><p>非常好！这是一个很核心的问题。搜索算法（特别是DFS和BFS）是解决许多算法问题的“万能钥匙”，但不同题型使用搜索的意图和方式也不同。</p><p>以下是那些<strong>频繁且典型</strong>地使用搜索算法（DFS, BFS及其变种）的题型分类，并附上了它们的核心特征和经典例题：</p><hr><h3 id="1-路径与连通性问题"><a href="#1-路径与连通性问题" class="headerlink" title="1. 路径与连通性问题"></a>1. 路径与连通性问题</h3><p>这类问题通常在一个抽象的“图”结构（如网格、迷宫、关系网）中寻找路径或判断连通性。</p><ul><li><strong>题型特征</strong>：给定一个起点、一个或多个终点，以及一些障碍或规则，问能否到达、最短路径是什么、有多少种路径等。</li><li><strong>常用搜索</strong>：<strong>BFS</strong>（求最短、最小步数）、<strong>DFS</strong>（记录所有路径）。</li><li><strong>经典例题</strong>：<ul><li><strong>迷宫问题</strong>：从左上角到右下角，<code>1</code>代表墙，<code>0</code>代表路，求最短路径。</li><li><strong>岛屿数量</strong>（Leetcode 200）：网格中，<code>1</code>是陆地，<code>0</code>是水，计算岛屿的数量（连通块的个数，DFS&#x2F;BFS均可用于标记和计数）。</li><li><strong>单词接龙</strong>（Leetcode 127）：给定单词列表，每次变一个字母，求从beginWord到endWord的最短转换序列长度。这是将单词抽象为节点，构建图模型后用BFS求解的经典案例。</li></ul></li></ul><h3 id="2-排列、组合、选择问题"><a href="#2-排列、组合、选择问题" class="headerlink" title="2. 排列、组合、选择问题"></a>2. 排列、组合、选择问题</h3><p>这类问题需要枚举所有可能的组合情况，是DFS最经典的应用场景。</p><ul><li><strong>题型特征</strong>：题目中经常出现“所有可能”、“所有组合”、“全部情况”等字眼。需要系统性地遍历所有候选答案。</li><li><strong>常用搜索</strong>：<strong>回溯法（Backtracking）</strong>，这是DFS的一种，其特点是在递归前后进行“选择”和“撤销选择”。</li><li><strong>经典例题</strong>：<ul><li><strong>全排列</strong>（Leetcode 46）：给定一个不含重复数字的数组，返回其所有可能的排列。</li><li><strong>组合总和</strong>（Leetcode 39）：给定一个无重复元素的数组和一个目标数，找出所有可以使数字和为目标数的组合（数字可重复使用）。</li><li><strong>子集</strong>（Leetcode 78）：给定一组不含重复元素的整数数组，返回其所有可能的子集。</li><li><strong>N皇后</strong>（Leetcode 51）：如何将n个皇后放置在n×n的棋盘上，并且使皇后彼此之间不能相互攻击。需要枚举所有可能的摆放位置。</li></ul></li></ul><h3 id="3-棋盘、网格类游戏与状态搜索"><a href="#3-棋盘、网格类游戏与状态搜索" class="headerlink" title="3. 棋盘、网格类游戏与状态搜索"></a>3. 棋盘、网格类游戏与状态搜索</h3><p>这类问题可以看作是<strong>路径问题</strong>和<strong>排列问题</strong>的更复杂结合，状态由整个棋盘或系统的多个因素共同定义。</p><ul><li><strong>题型特征</strong>：问题局面会随着你的操作而改变，每一步操作都会让局面从一个“状态”转移到另一个“状态”。目标是找到从初始状态到目标状态的操作序列。</li><li><strong>常用搜索</strong>：<strong>BFS</strong>（求最少步数）、<strong>双向BFS</strong>（优化）、<strong>A*</strong>（启发式搜索）。</li><li><strong>经典例题</strong>：<ul><li><strong>滑动谜题</strong>（Leetcode 773）：在一个2x3的棋盘上，有5个块和一个空位，通过滑动块到空位来解开谜题，求最少步数。需要将整个棋盘的局面编码为一个“状态”进行BFS。</li><li><strong>华容道</strong>：类似滑动谜题，但更复杂。</li><li><strong>翻转游戏</strong>或<strong>点亮所有的灯</strong>：每次操作一个格子会影响其周围格子的状态。</li></ul></li></ul><h3 id="4-树形结构相关问题"><a href="#4-树形结构相关问题" class="headerlink" title="4. 树形结构相关问题"></a>4. 树形结构相关问题</h3><p>树是一种特殊的图，遍历树本身就是一种搜索。</p><ul><li><strong>题型特征</strong>：直接给出树结构（二叉树、N叉树），或者问题可以抽象为一棵树（如决策树）。</li><li><strong>常用搜索</strong>：<strong>DFS</strong>（前序、中序、后序遍历）、<strong>BFS</strong>（层序遍历）。</li><li><strong>经典例题</strong>：<ul><li><strong>二叉树的所有路径</strong>（Leetcode 257）：用DFS记录从根节点到叶子节点的所有路径。</li><li><strong>二叉树的最大深度</strong>（Leetcode 104）：可用DFS递归或BFS层序计数求解。</li><li><strong>二叉树的序列化与反序列化</strong>：利用DFS或BFS遍历来编码和解码树的结构。</li></ul></li></ul><h3 id="5-约束满足问题"><a href="#5-约束满足问题" class="headerlink" title="5. 约束满足问题"></a>5. 约束满足问题</h3><p>这类问题是搜索的高阶应用，需要满足多重约束条件。</p><ul><li><strong>题型特征</strong>：在尝试填充或安排事物时，必须满足一系列复杂的条件（约束）。</li><li><strong>常用搜索</strong>：<strong>回溯法</strong>，并通常会结合<strong>剪枝</strong>和<strong>启发式</strong>来极大优化效率。</li><li><strong>经典例题</strong>：<ul><li><strong>数独求解</strong>（Leetcode 37）：填充空格，使得每行、每列、每一个3x3子宫格都包含1-9且不重复。是回溯+剪枝的完美例子。</li><li><strong>N皇后问题</strong>（也属于此类）：约束是同一行、列、对角线上不能有两个皇后。</li></ul></li></ul><hr><h3 id="总结与思维模式"><a href="#总结与思维模式" class="headerlink" title="总结与思维模式"></a>总结与思维模式</h3><p>当你遇到一个新问题时，可以通过问自己以下问题来判断是否适用搜索算法：</p><ol><li><strong>是否可以建模为“图”？</strong> 问题是否有“节点”（状态、位置）和“边”（操作、转换方式）的概念？</li><li><strong>是否需要枚举？</strong> 问题是否要求找出所有可能的方案，而不是一个数学公式解？</li><li><strong>是否有明显的操作步骤？</strong> 每一步是否都有几种选择，从而形成一棵巨大的“选择树”？</li></ol><p>如果答案是肯定的，那么搜索算法很大概率就是解决问题的正确方向。<strong>DFS</strong> 更适合深入探索所有分支（如所有排列），而 <strong>BFS</strong> 更适合寻找最短路径或最近目标。<strong>回溯</strong> 是DFS在可撤销选择场景下的特化，而 <strong>剪枝</strong> 是优化任何搜索过程、避免无效探索的关键技术。</p><p>希望这个分类能帮助你建立清晰的解题思路！</p></blockquote><blockquote><p>好的，我们来深入探讨一下搜索算法（特别是<strong>回溯法 Backtracking</strong>）在<strong>排列、组合、选择</strong>类问题中的核心应用。这是深度优先搜索（DFS）最经典和强大的应用场景之一。</p><h3 id="核心思想：决策树与系统性枚举"><a href="#核心思想：决策树与系统性枚举" class="headerlink" title="核心思想：决策树与系统性枚举"></a>核心思想：决策树与系统性枚举</h3><p>解决这类问题的关键，在于将问题抽象为一棵<strong>决策树（或状态树）</strong>。</p><ul><li><strong>节点</strong>：代表你在解决问题过程中所处的<strong>状态</strong>（例如，已经选择了哪些数字）。</li><li><strong>分支</strong>：代表你可做的<strong>选择</strong>（例如，下一个数字可以选哪个）。</li><li><strong>叶子节点</strong>：代表一个<strong>完整解</strong>（例如，一个完整的排列或组合）。</li></ul><p>搜索算法（回溯法）的任务，就是<strong>从根节点开始，系统地、不重复也不遗漏地遍历这棵决策树的所有分支，以找到所有满足条件的叶子节点</strong>。</p><hr><h3 id="两大经典问题与模板"><a href="#两大经典问题与模板" class="headerlink" title="两大经典问题与模板"></a>两大经典问题与模板</h3><p>我们通过两个最基础的问题来理解回溯法的应用。</p><h4 id="1-排列问题-“顺序有关”"><a href="#1-排列问题-“顺序有关”" class="headerlink" title="1. 排列问题 - “顺序有关”"></a>1. 排列问题 - “顺序有关”</h4><p><strong>问题</strong>：给定一个不含重复数字的数组 <code>[1, 2, 3]</code>，返回其所有可能的排列。顺序不同，即为不同的解。</p><p><strong>解</strong>：<code>[1,2,3], [1,3,2], [2,1,3], [2,3,1], [3,1,2], [3,2,3]</code></p><p><strong>回溯思路</strong>：</p><ul><li><strong>选择</strong>：每一步，你都可以从<strong>所有未被使用的元素</strong>中选择一个。</li><li><strong>路径</strong>：记录当前已经做出了哪些选择（即当前排列）。</li><li><strong>状态</strong>：除了记录路径，还需要记录哪些元素已经被使用过了（通常用一个 <code>used</code>数组标记）。</li><li><strong>回溯</strong>：当探索到叶子节点（一个完整排列）后，需要<strong>撤销最后一步的选择</strong>，回到上一层状态，以进行下一个选择。</li></ul><p><strong>核心代码模板（C++）</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">vector&lt;vector&lt;int&gt;&gt; permute(vector&lt;int&gt;&amp; nums) &#123;</span><br><span class="line">    vector&lt;vector&lt;int&gt;&gt; result;</span><br><span class="line">    vector&lt;int&gt; path; // 当前路径（当前构造的排列）</span><br><span class="line">    vector&lt;bool&gt; used(nums.size(), false); // 标记元素是否被使用过</span><br><span class="line">    backtrack(nums, path, used, result);</span><br><span class="line">    return result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void backtrack(vector&lt;int&gt;&amp; nums, vector&lt;int&gt;&amp; path, vector&lt;bool&gt;&amp; used, vector&lt;vector&lt;int&gt;&gt;&amp; result) &#123;</span><br><span class="line">    // 终止条件：路径长度等于原数组长度，说明得到一个完整排列</span><br><span class="line">    if (path.size() == nums.size()) &#123;</span><br><span class="line">        result.push_back(path);</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    // 遍历所有选择</span><br><span class="line">    for (int i = 0; i &lt; nums.size(); i++) &#123;</span><br><span class="line">        if (used[i]) continue; // 如果这个数字已经用过，跳过</span><br><span class="line">        // 做选择</span><br><span class="line">        used[i] = true;</span><br><span class="line">        path.push_back(nums[i]);</span><br><span class="line">        // 进入下一层决策树</span><br><span class="line">        backtrack(nums, path, used, result);</span><br><span class="line">        // 撤销选择（回溯的核心）</span><br><span class="line">        used[i] = false;</span><br><span class="line">        path.pop_back();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-组合问题-“顺序无关”"><a href="#2-组合问题-“顺序无关”" class="headerlink" title="2. 组合问题 - “顺序无关”"></a>2. 组合问题 - “顺序无关”</h4><p><strong>问题</strong>：给定两个整数 <code>n = 4, k = 2</code>，返回 <code>1...n</code>中所有可能的 <code>k</code>个数的组合。</p><p><strong>解</strong>：<code>[1,2], [1,3], [1,4], [2,3], [2,4], [3,4]</code>(注意 <code>[2,1]</code>和 <code>[1,2]</code>是同一个组合)</p><p><strong>回溯思路</strong>：</p><ul><li><strong>选择</strong>：为了避免重复（<code>[1,2]</code>和 <code>[2,1]</code>），我们规定一种“顺序”。每一步，只能从<strong>上一个被选择元素之后</strong>的元素开始选择。这引入了 <code>startIndex</code>的概念。</li><li><strong>路径</strong>：记录当前已经选择了哪些数字。</li><li><strong>回溯</strong>：同样，在递归返回后需要撤销选择。</li></ul><p><strong>核心代码模板（C++）</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">vector&lt;vector&lt;int&gt;&gt; combine(int n, int k) &#123;</span><br><span class="line">    vector&lt;vector&lt;int&gt;&gt; result;</span><br><span class="line">    vector&lt;int&gt; path; // 当前路径（当前构造的组合）</span><br><span class="line">    backtrack(n, k, 1, path, result); // 从数字1开始</span><br><span class="line">    return result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void backtrack(int n, int k, int startIndex, vector&lt;int&gt;&amp; path, vector&lt;vector&lt;int&gt;&gt;&amp; result) &#123;</span><br><span class="line">    // 终止条件：路径长度等于k</span><br><span class="line">    if (path.size() == k) &#123;</span><br><span class="line">        result.push_back(path);</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    // 遍历选择列表：从startIndex开始，到n结束</span><br><span class="line">    for (int i = startIndex; i &lt;= n; i++) &#123;</span><br><span class="line">        // 做选择</span><br><span class="line">        path.push_back(i);</span><br><span class="line">        // 进入下一层决策树，下一个数字要从i+1开始选，避免重复</span><br><span class="line">        backtrack(n, k, i + 1, path, result);</span><br><span class="line">        // 撤销选择</span><br><span class="line">        path.pop_back();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="关键技巧与变种"><a href="#关键技巧与变种" class="headerlink" title="关键技巧与变种"></a>关键技巧与变种</h3><p>掌握了上述两个模板，你就解决了80%的此类问题。剩下的20%在于如何处理<strong>重复元素</strong>和进行<strong>剪枝优化</strong>。</p><h4 id="1-处理重复元素（去重）"><a href="#1-处理重复元素（去重）" class="headerlink" title="1. 处理重复元素（去重）"></a>1. 处理重复元素（去重）</h4><p>如果输入集合中有重复元素（如 <code>[1,2,2]</code>），直接套用模板会产生重复的解（如两个 <code>[1,2]</code>）。</p><ul><li><p><strong>方法</strong>：先对数组<strong>排序</strong>，让相同的元素紧挨在一起。然后在回溯的循环中增加一个判断：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">for (int i = startIndex; i &lt; nums.size(); i++) &#123;</span><br><span class="line">    // 跳过同一树层上使用过的相同元素</span><br><span class="line">    if (i &gt; startIndex &amp;&amp; nums[i] == nums[i-1]) &#123;</span><br><span class="line">        continue;</span><br><span class="line">    &#125;</span><br><span class="line">    // ... 做选择、递归、撤销选择</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>理解</strong>：<code>i &gt; startIndex</code>意味着当前不是第一个可选的元素。<code>nums[i] == nums[i-1]</code>意味着当前元素和上一个相同。如果上一个相同的元素<strong>没有被使用</strong>（因为递归返回后已经被撤销了），说明在同一层已经尝试过这个数字了，必须跳过，否则就会产生重复组合。</li></ul></li></ul><h4 id="2-剪枝优化"><a href="#2-剪枝优化" class="headerlink" title="2. 剪枝优化"></a>2. 剪枝优化</h4><p>这是提升回溯算法效率的关键。如果已经能确定从当前节点走下去不可能得到解，就应该提前终止搜索。</p><ul><li><p><strong>组合问题剪枝</strong>：在循环条件上做文章。</p><p>例如在组合问题中，如果 <code>n=5, k=3</code>，当前路径 <code>path.size() = 1</code>（已选1个），<code>startIndex=4</code>。</p><p>那么即使把 <code>4</code>和 <code>5</code>都选上，总数也才 <code>1 + 2 = 3</code>，刚好满足。但如果 <code>startIndex=5</code>，那么即使把 <code>5</code>选上，总数也才 <code>1 + 1 = 2 &lt; 3</code>，不可能凑够k个数，这条分支就没必要走了。</p><ul><li><strong>修改循环条件</strong>：将 <code>for (int i = startIndex; i &lt;= n; i++)</code>改为 <code>for (int i = startIndex; i &lt;= n - (k - path.size()) + 1; i++)</code>。这个计算确保了后续至少还有 <code>(k - path.size())</code>个数字可供选择。</li></ul></li></ul><h3 id="总结：一个通用的回溯模板"><a href="#总结：一个通用的回溯模板" class="headerlink" title="总结：一个通用的回溯模板"></a>总结：一个通用的回溯模板</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">void backtrack(参数) &#123;</span><br><span class="line">    if (终止条件) &#123;</span><br><span class="line">        存放结果;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    for (选择：本层集合中的元素) &#123; // 注意可能伴随剪枝操作 (i &lt;= n - ...)</span><br><span class="line">        if (一些合法性判断，比如去重、是否已使用等) &#123;</span><br><span class="line">            continue;</span><br><span class="line">        &#125;</span><br><span class="line">        处理节点;</span><br><span class="line">        backtrack(路径，选择列表); // 递归</span><br><span class="line">        回溯，撤销处理结果;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>核心四步曲</strong>：</p><ol><li><strong>确认递归参数与终止条件</strong>：什么时候算得到一个解？</li><li><strong>遍历本层的所有选择</strong>：for循环。</li><li><strong>处理节点</strong>：做出一个选择，更新状态。</li><li><strong>递归</strong>：进入下一层决策树。</li><li><strong>回溯</strong>：撤销第3步的操作，这是最关键的一步，让状态恢复到进行下一个选择之前。</li></ol><p>N皇后、子集、分割回文串等问题，都是这个框架的变形。多练习几道题，你就能深刻体会到这个“模板”的强大之处。</p></blockquote><h2 id="1105"><a href="#1105" class="headerlink" title="1105"></a>1105</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MAXN = <span class="number">100000</span>; <span class="comment">// 地址最大范围</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span> &#123;</span><br><span class="line">    <span class="type">int</span> data, next;</span><br><span class="line">&#125; nodes[MAXN]; <span class="comment">// 静态链表，索引代表地址</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> head1, head2, n;</span><br><span class="line">    cin &gt;&gt; head1 &gt;&gt; head2 &gt;&gt; n;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 读取所有结点</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="type">int</span> addr, data, next;</span><br><span class="line">        cin &gt;&gt; addr &gt;&gt; data &gt;&gt; next;</span><br><span class="line">        nodes[addr] = &#123;data, next&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 构建链表L1和L2的地址序列</span></span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; L1, L2;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> p = head1; p != <span class="number">-1</span>; p = nodes[p].next) </span><br><span class="line">        L<span class="number">1.</span><span class="built_in">push_back</span>(p);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> p = head2; p != <span class="number">-1</span>; p = nodes[p].next) </span><br><span class="line">        L<span class="number">2.</span><span class="built_in">push_back</span>(p);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 确保L1是长链表</span></span><br><span class="line">    <span class="keyword">if</span> (L<span class="number">1.</span><span class="built_in">size</span>() &lt; L<span class="number">2.</span><span class="built_in">size</span>()) </span><br><span class="line">        <span class="built_in">swap</span>(L1, L2);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 逆序短链表L2</span></span><br><span class="line">    <span class="built_in">reverse</span>(L<span class="number">2.</span><span class="built_in">begin</span>(), L<span class="number">2.</span><span class="built_in">end</span>());</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 合并：每两个L1结点插入一个L2结点</span></span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; ans;</span><br><span class="line">    <span class="type">int</span> j = <span class="number">0</span>; <span class="comment">// L2的索引</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; L<span class="number">1.</span><span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">        ans.<span class="built_in">push_back</span>(L1[i]);</span><br><span class="line">        <span class="comment">// 当已插入L1的结点数为奇数（i从0开始，i=1代表第二个结点）且L2还有结点</span></span><br><span class="line">        <span class="keyword">if</span> ((i + <span class="number">1</span>) % <span class="number">2</span> == <span class="number">0</span> &amp;&amp; j &lt; L<span class="number">2.</span><span class="built_in">size</span>()) &#123; </span><br><span class="line">            ans.<span class="built_in">push_back</span>(L2[j++]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 输出结果</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; ans.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i == ans.<span class="built_in">size</span>() - <span class="number">1</span>) </span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%05d %d -1\n&quot;</span>, ans[i], nodes[ans[i]].data);</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%05d %d %05d\n&quot;</span>, ans[i], nodes[ans[i]].data, ans[i + <span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（有人被样例误导了看反两条链表结果找bug快一个小时没找出来，这样例属实太过神人了）</p><p>（看反两条链表你知道能过多少个测试点吗，能过4个拿到22分，这就是我找bug没往这里找的原因，我一直以为是我链表的插入逻辑写错了，气笑了）</p><h2 id="1106"><a href="#1106" class="headerlink" title="1106"></a>1106</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">ans</span><span class="params">(n<span class="number">+2</span>)</span></span>;</span><br><span class="line">    ans[<span class="number">0</span>]=<span class="number">2</span>,ans[<span class="number">1</span>]=<span class="number">0</span>,ans[<span class="number">2</span>]=<span class="number">1</span>,ans[<span class="number">3</span>]=<span class="number">9</span>;</span><br><span class="line">    <span class="type">int</span> pos=<span class="number">4</span>;</span><br><span class="line">    <span class="keyword">while</span> (pos&lt;=n)&#123;</span><br><span class="line">        ans[pos]=(ans[pos<span class="number">-1</span>]+ans[pos<span class="number">-2</span>]+ans[pos<span class="number">-3</span>]+ans[pos<span class="number">-4</span>])%<span class="number">10</span>;</span><br><span class="line">        pos++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        cout&lt;&lt;ans[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1107"><a href="#1107" class="headerlink" title="1107"></a>1107</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a&gt;b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; ans;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">b</span><span class="params">(m)</span></span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>;j&lt;m;j++)&#123;</span><br><span class="line">            cin&gt;&gt;b[j];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">sort</span>(b.<span class="built_in">begin</span>(),b.<span class="built_in">end</span>(),cmp);</span><br><span class="line">        ans.<span class="built_in">push_back</span>(b[<span class="number">0</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;ans.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (i==ans.<span class="built_in">size</span>()<span class="number">-1</span>) cout&lt;&lt;ans[i]&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            cout&lt;&lt;ans[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(ans.<span class="built_in">begin</span>(),ans.<span class="built_in">end</span>(),cmp);</span><br><span class="line">    cout&lt;&lt;ans[<span class="number">0</span>]&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1108"><a href="#1108" class="headerlink" title="1108"></a>1108</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">string s;</span><br><span class="line">string ans=<span class="string">&quot;String&quot;</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">getline</span>(cin,s);</span><br><span class="line">    unordered_map&lt;<span class="type">char</span>,<span class="type">int</span>&gt; m;</span><br><span class="line">    <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">char</span> c:s)&#123;</span><br><span class="line">        <span class="keyword">if</span> (c==<span class="string">&#x27;S&#x27;</span>||c==<span class="string">&#x27;t&#x27;</span>||c==<span class="string">&#x27;r&#x27;</span>||c==<span class="string">&#x27;i&#x27;</span>||c==<span class="string">&#x27;n&#x27;</span>||c==<span class="string">&#x27;g&#x27;</span>)&#123;</span><br><span class="line">            m[c]++;</span><br><span class="line">            sum++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    string res;</span><br><span class="line">    <span class="keyword">while</span> (sum&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">char</span> c:ans)&#123;</span><br><span class="line">            <span class="keyword">if</span> (m[c]&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                res+=c;</span><br><span class="line">                m[c]--;</span><br><span class="line">                sum--;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;res&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这题和1043完全一样啊，做法是完全相同的。</p><h2 id="1109"><a href="#1109" class="headerlink" title="1109"></a>1109</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">string ans;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    unordered_map&lt;<span class="type">char</span>,vector&lt;vector&lt;<span class="type">char</span>&gt;&gt;&gt; image;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;i++)&#123;</span><br><span class="line">        <span class="type">char</span> c=<span class="string">&#x27;A&#x27;</span>+i;</span><br><span class="line">        image[c]=vector&lt;vector&lt;<span class="type">char</span>&gt;&gt;(<span class="number">7</span>,<span class="built_in">vector</span>&lt;<span class="type">char</span>&gt;(<span class="number">5</span>));</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">7</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k=<span class="number">0</span>;k&lt;<span class="number">5</span>;k++)&#123;</span><br><span class="line">                cin&gt;&gt;image[c][j][k];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cin.<span class="built_in">ignore</span>();</span><br><span class="line">    <span class="built_in">getline</span>(cin,ans);</span><br><span class="line">    string word;</span><br><span class="line">    vector&lt;string&gt; words;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;ans.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (ans[i]&gt;=<span class="string">&#x27;A&#x27;</span>&amp;&amp;ans[i]&lt;=<span class="string">&#x27;Z&#x27;</span>)&#123;</span><br><span class="line">            word+=ans[i];</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (!word.<span class="built_in">empty</span>())&#123;</span><br><span class="line">                words.<span class="built_in">push_back</span>(word);</span><br><span class="line">                word.<span class="built_in">clear</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!word.<span class="built_in">empty</span>())&#123;</span><br><span class="line">        words.<span class="built_in">push_back</span>(word);</span><br><span class="line">        word.<span class="built_in">clear</span>();</span><br><span class="line">    &#125;<span class="comment">//模板，分割字符串用的。</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;words.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> r=<span class="number">0</span>;r&lt;<span class="number">7</span>;r++)&#123;<span class="comment">//这两个循环顺序不能换</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>;j&lt;words[i].<span class="built_in">size</span>();j++)&#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> c=<span class="number">0</span>;c&lt;<span class="number">5</span>;c++)&#123;</span><br><span class="line">                    cout&lt;&lt;image[words[i][j]][r][c];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (j!=words[i].<span class="built_in">size</span>()<span class="number">-1</span>) cout&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            cout&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (i!=words.<span class="built_in">size</span>()<span class="number">-1</span>) cout&lt;&lt;endl; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>大胆尝试在unordered_map里面内嵌一个二维数组吧</p><h2 id="1110"><a href="#1110" class="headerlink" title="1110"></a>1110</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">node</span>&#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">    <span class="type">int</span> add;</span><br><span class="line">    <span class="type">int</span> data;</span><br><span class="line">    <span class="type">int</span> next;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    vector&lt;node&gt; listnode;</span><br><span class="line">    unordered_map&lt;<span class="type">int</span>,node&gt; m;</span><br><span class="line">    <span class="type">int</span> tbegin,n,k;</span><br><span class="line">    cin&gt;&gt;tbegin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        node l;</span><br><span class="line">        cin&gt;&gt;l.add&gt;&gt;l.data&gt;&gt;l.next;</span><br><span class="line">        m[l.add]=l;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (tbegin!=<span class="number">-1</span>)&#123;</span><br><span class="line">        listnode.<span class="built_in">push_back</span>(m[tbegin]);</span><br><span class="line">        tbegin=m[tbegin].next;</span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;node&gt; ans;</span><br><span class="line">    <span class="type">int</span> pos=listnode.<span class="built_in">size</span>();</span><br><span class="line">    <span class="type">int</span> last=pos%k;</span><br><span class="line">    stack&lt;node&gt; s;</span><br><span class="line">    pos--;</span><br><span class="line">    <span class="keyword">if</span> (last!=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">while</span> (last--)&#123;</span><br><span class="line">            s.<span class="built_in">push</span>(listnode[pos]);</span><br><span class="line">            pos--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (!s.<span class="built_in">empty</span>())&#123;</span><br><span class="line">            ans.<span class="built_in">push_back</span>(s.<span class="built_in">top</span>());</span><br><span class="line">            s.<span class="built_in">pop</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (pos&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">        s.<span class="built_in">push</span>(listnode[pos]);</span><br><span class="line">        pos--;</span><br><span class="line">        <span class="keyword">if</span> (s.<span class="built_in">size</span>()==k)&#123;</span><br><span class="line">            <span class="keyword">while</span> (!s.<span class="built_in">empty</span>())&#123;</span><br><span class="line">                ans.<span class="built_in">push_back</span>(s.<span class="built_in">top</span>());</span><br><span class="line">                s.<span class="built_in">pop</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;ans.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (i==ans.<span class="built_in">size</span>()<span class="number">-1</span>) ans[i].next=<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">else</span> ans[i].next=ans[i<span class="number">+1</span>].add;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;ans.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (i==ans.<span class="built_in">size</span>()<span class="number">-1</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%05d %d %d\n&quot;</span>,ans[i].add,ans[i].data,ans[i].next);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%05d %d %05d\n&quot;</span>,ans[i].add,ans[i].data,ans[i].next);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>链表题，其实这类题目都是同一个模板和套路，目测应该整不出什么花活</p><h2 id="1111"><a href="#1111" class="headerlink" title="1111"></a>1111</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    string month,day,year;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    unordered_map&lt;string,string&gt; m;</span><br><span class="line">    m.<span class="built_in">emplace</span>(<span class="string">&quot;Jan&quot;</span>,<span class="string">&quot;01&quot;</span>);</span><br><span class="line">    m.<span class="built_in">emplace</span>(<span class="string">&quot;Feb&quot;</span>,<span class="string">&quot;02&quot;</span>);</span><br><span class="line">    m.<span class="built_in">emplace</span>(<span class="string">&quot;Mar&quot;</span>,<span class="string">&quot;03&quot;</span>);</span><br><span class="line">    m.<span class="built_in">emplace</span>(<span class="string">&quot;Apr&quot;</span>,<span class="string">&quot;04&quot;</span>);</span><br><span class="line">    m.<span class="built_in">emplace</span>(<span class="string">&quot;May&quot;</span>,<span class="string">&quot;05&quot;</span>);</span><br><span class="line">    m.<span class="built_in">emplace</span>(<span class="string">&quot;Jun&quot;</span>,<span class="string">&quot;06&quot;</span>);</span><br><span class="line">    m.<span class="built_in">emplace</span>(<span class="string">&quot;Jul&quot;</span>,<span class="string">&quot;07&quot;</span>);</span><br><span class="line">    m.<span class="built_in">emplace</span>(<span class="string">&quot;Aug&quot;</span>,<span class="string">&quot;08&quot;</span>);</span><br><span class="line">    m.<span class="built_in">emplace</span>(<span class="string">&quot;Sep&quot;</span>,<span class="string">&quot;09&quot;</span>);</span><br><span class="line">    m.<span class="built_in">emplace</span>(<span class="string">&quot;Oct&quot;</span>,<span class="string">&quot;10&quot;</span>);</span><br><span class="line">    m.<span class="built_in">emplace</span>(<span class="string">&quot;Nov&quot;</span>,<span class="string">&quot;11&quot;</span>);</span><br><span class="line">    m.<span class="built_in">emplace</span>(<span class="string">&quot;Dec&quot;</span>,<span class="string">&quot;12&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;month&gt;&gt;day&gt;&gt;year;</span><br><span class="line">        <span class="keyword">if</span> (!day.<span class="built_in">empty</span>()&amp;&amp;day.<span class="built_in">back</span>()==<span class="string">&#x27;,&#x27;</span>)&#123;</span><br><span class="line">            day.<span class="built_in">pop_back</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (day.<span class="built_in">size</span>()&lt;<span class="number">2</span>)&#123;</span><br><span class="line">            day=<span class="string">&quot;0&quot;</span>+day;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (year.<span class="built_in">size</span>()&lt;<span class="number">4</span>)&#123;</span><br><span class="line">            year=<span class="string">&quot;0&quot;</span>+year;</span><br><span class="line">        &#125;</span><br><span class="line">        string s;</span><br><span class="line">        s+=year;</span><br><span class="line">        s+=m[month];</span><br><span class="line">        s+=day;</span><br><span class="line">        string temp=s;</span><br><span class="line">        <span class="built_in">reverse</span>(temp.<span class="built_in">begin</span>(),temp.<span class="built_in">end</span>());</span><br><span class="line">        <span class="keyword">if</span> (temp==s)&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;Y&quot;</span>&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;s&lt;&lt;endl;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;N&quot;</span>&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;s&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>什么叫做读入逗号？</p><h2 id="1112"><a href="#1112" class="headerlink" title="1112"></a>1112</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,t;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">node</span>&#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">    <span class="type">int</span> tbegin,tend;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;t;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">num</span><span class="params">(n<span class="number">+2</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;num[i];</span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;node&gt; ans;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;)&#123;</span><br><span class="line">        <span class="keyword">if</span> (num[i]&gt;t)&#123;</span><br><span class="line">            node a;</span><br><span class="line">            a.tbegin=i;</span><br><span class="line">            <span class="keyword">while</span> (i&lt;n)&#123;</span><br><span class="line">                <span class="keyword">if</span> (num[i]&lt;=t)&#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    i++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            a.tend=i<span class="number">-1</span>;</span><br><span class="line">            ans.<span class="built_in">push_back</span>(a);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (ans.<span class="built_in">size</span>()!=<span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;ans.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;[%d, %d]\n&quot;</span>,ans[i].tbegin,ans[i].tend);</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="type">int</span> maxx=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            maxx=<span class="built_in">max</span>(maxx,num[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;maxx&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1113"><a href="#1113" class="headerlink" title="1113"></a>1113</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">string chuan=<span class="string">&quot;0123456789abcdefghijklmnopqrst&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">char_to_val</span><span class="params">(<span class="type">char</span> c)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (c&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; c&lt;=<span class="string">&#x27;9&#x27;</span>) <span class="keyword">return</span> c-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> c-<span class="string">&#x27;a&#x27;</span><span class="number">+10</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">string <span class="title">addition</span><span class="params">(string a,string b)</span></span>&#123;</span><br><span class="line">    string res;</span><br><span class="line">    <span class="keyword">while</span> (a.<span class="built_in">size</span>()&lt;b.<span class="built_in">size</span>()) a=<span class="string">&#x27;0&#x27;</span>+a;</span><br><span class="line">    <span class="keyword">while</span> (b.<span class="built_in">size</span>()&lt;a.<span class="built_in">size</span>()) b=<span class="string">&#x27;0&#x27;</span>+b;</span><br><span class="line">    <span class="type">int</span> n=a.<span class="built_in">size</span>();</span><br><span class="line">    <span class="type">int</span> p=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">        <span class="type">int</span> x=<span class="built_in">char_to_val</span>(a[i]);</span><br><span class="line">        <span class="type">int</span> y=<span class="built_in">char_to_val</span>(b[i]);</span><br><span class="line">        <span class="type">int</span> temp=(x+y+p)%<span class="number">30</span>;</span><br><span class="line">        p=(x+y+p)/<span class="number">30</span>;</span><br><span class="line">        res=chuan[temp]+res;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (p!=<span class="number">0</span>) res=chuan[p]+res;</span><br><span class="line">    <span class="type">int</span> pos=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (pos&lt;res.<span class="built_in">size</span>() &amp;&amp; res[pos]==<span class="string">&#x27;0&#x27;</span>) pos++;</span><br><span class="line">    <span class="keyword">if</span> (pos==res.<span class="built_in">size</span>()) <span class="keyword">return</span> <span class="string">&quot;0&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="built_in">substr</span>(pos);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    string n1,n2;</span><br><span class="line">    cin&gt;&gt;n1&gt;&gt;n2;</span><br><span class="line">    cout&lt;&lt;<span class="built_in">addition</span>(n1,n2)&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>你要知道，在非10进制的加减法，可能使用高精度计算远远比你进制转化了再转化回去简单，因为高精度计算的进制是可以通过直接修改参数来实现。</p><p>上面已经写过那么多题高精度了，这下应该得会吧。</p><h2 id="1114"><a href="#1114" class="headerlink" title="1114"></a>1114</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isprime</span><span class="params">(<span class="type">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n&lt;<span class="number">2</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (n==<span class="number">2</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">2</span>;i*i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (n%i==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">string s;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;s;</span><br><span class="line">    <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;s.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        string num;</span><br><span class="line">        num=s.<span class="built_in">substr</span>(i);</span><br><span class="line">        <span class="type">int</span> x=<span class="built_in">stoi</span>(num);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isprime</span>(x))&#123;</span><br><span class="line">            cout&lt;&lt;num&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;<span class="string">&quot;Yes&quot;</span>&lt;&lt;endl;</span><br><span class="line">            sum++;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            cout&lt;&lt;num&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;<span class="string">&quot;No&quot;</span>&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (sum==s.<span class="built_in">size</span>())&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;All Prime!&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1115"><a href="#1115" class="headerlink" title="1115"></a>1115</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MAX_SIZE=<span class="number">200001</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> x,y;</span><br><span class="line">    cin&gt;&gt;x&gt;&gt;y;</span><br><span class="line">    <span class="type">int</span> n,m;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;<span class="built_in">g</span>(n,<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(m));</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;m;j++)&#123;</span><br><span class="line">            cin&gt;&gt;g[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> used[MAX_SIZE]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">int</span> loser[<span class="number">11</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;existed;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;winner;</span><br><span class="line"></span><br><span class="line">    used[x]=<span class="number">1</span>;</span><br><span class="line">    used[y]=<span class="number">1</span>;</span><br><span class="line">    existed.<span class="built_in">push_back</span>(x);</span><br><span class="line">    existed.<span class="built_in">push_back</span>(y);</span><br><span class="line">    <span class="type">int</span> life=n;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        vector&lt;<span class="type">int</span>&gt;round_outs;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">            <span class="type">int</span> id=j<span class="number">+1</span>;</span><br><span class="line">            <span class="keyword">if</span>(loser[id]==<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">int</span> num=g[j][i];</span><br><span class="line">            <span class="keyword">if</span>(used[num]==<span class="number">1</span>)&#123;</span><br><span class="line">                round_outs.<span class="built_in">push_back</span>(id);</span><br><span class="line">                loser[id]=<span class="number">1</span>;</span><br><span class="line">                life--;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">bool</span> flag=<span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">auto</span> a:existed)&#123;</span><br><span class="line">                <span class="keyword">if</span>(a+num&lt;MAX_SIZE&amp;&amp;used[a+num]==<span class="number">1</span>)&#123;</span><br><span class="line">                    flag=<span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(a&gt;num&amp;&amp;used[a-num]==<span class="number">1</span>)&#123;</span><br><span class="line">                    flag=<span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">                used[num]=<span class="number">1</span>;</span><br><span class="line">                existed.<span class="built_in">push_back</span>(num);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                round_outs.<span class="built_in">push_back</span>(id);</span><br><span class="line">                loser[id]=<span class="number">1</span>;</span><br><span class="line">                life--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!round_outs.<span class="built_in">empty</span>())&#123;</span><br><span class="line">            <span class="built_in">sort</span>(round_outs.<span class="built_in">begin</span>(),round_outs.<span class="built_in">end</span>());</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">auto</span> id:round_outs)&#123;</span><br><span class="line">                cout&lt;&lt;<span class="string">&quot;Round #&quot;</span>&lt;&lt;i<span class="number">+1</span>&lt;&lt;<span class="string">&quot;: &quot;</span>&lt;&lt;id&lt;&lt;<span class="string">&quot; is out.&quot;</span>&lt;&lt;endl;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(life==<span class="number">0</span>)&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;No winner.&quot;</span>&lt;&lt;endl;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(life&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(loser[i]==<span class="number">0</span>)&#123;</span><br><span class="line">                winner.<span class="built_in">push_back</span>(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Winner(s): &quot;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">size_t</span> i=<span class="number">0</span>;i&lt;winner.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i==winner.<span class="built_in">size</span>()<span class="number">-1</span>)&#123;</span><br><span class="line">                cout&lt;&lt;winner[i];</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                cout&lt;&lt;winner[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1116"><a href="#1116" class="headerlink" title="1116"></a>1116</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(string a,string b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a.<span class="built_in">size</span>()!=b.<span class="built_in">size</span>()) <span class="keyword">return</span> a.<span class="built_in">size</span>()&gt;b.<span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">return</span> a&gt;=b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">string <span class="title">subtraction</span><span class="params">(string a,string b)</span></span>&#123;</span><br><span class="line">    string res,ans;</span><br><span class="line">    <span class="type">bool</span> flag=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">cmp</span>(a,b))&#123;</span><br><span class="line">        <span class="built_in">swap</span>(a,b);</span><br><span class="line">        flag=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (b.<span class="built_in">size</span>()&lt;a.<span class="built_in">size</span>())&#123;</span><br><span class="line">        b=<span class="string">&#x27;0&#x27;</span>+b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> n=a.<span class="built_in">size</span>();</span><br><span class="line">    <span class="type">int</span> p=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">        <span class="type">int</span> x=(a[i]-<span class="string">&#x27;0&#x27;</span>)-p;</span><br><span class="line">        <span class="type">int</span> y=(b[i]-<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (x&gt;=y)&#123;</span><br><span class="line">            <span class="type">int</span> temp=(x-y);</span><br><span class="line">            res+=(<span class="type">char</span>)(<span class="string">&#x27;0&#x27;</span>+temp);</span><br><span class="line">            p=<span class="number">0</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="type">int</span> temp=(<span class="number">10</span>+x-y);</span><br><span class="line">            res+=(<span class="type">char</span>)(<span class="string">&#x27;0&#x27;</span>+temp);</span><br><span class="line">            p=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">reverse</span>(res.<span class="built_in">begin</span>(),res.<span class="built_in">end</span>());</span><br><span class="line">    <span class="type">int</span> pos=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (pos&lt;res.<span class="built_in">size</span>()&amp;&amp;res[pos]==<span class="string">&#x27;0&#x27;</span>)&#123;</span><br><span class="line">        pos++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (pos==res.<span class="built_in">size</span>()) <span class="keyword">return</span> <span class="string">&quot;0&quot;</span>;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        ans=res.<span class="built_in">substr</span>(pos);</span><br><span class="line">        <span class="keyword">if</span> (flag) ans=<span class="string">&#x27;-&#x27;</span>+ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    string s;</span><br><span class="line">    cin&gt;&gt;s;</span><br><span class="line">    <span class="type">int</span> n=s.<span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">if</span> (n%<span class="number">2</span>==<span class="number">1</span>)&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Error: &quot;</span>&lt;&lt;n&lt;&lt;<span class="string">&quot; digit(s)&quot;</span>&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    string a=s.<span class="built_in">substr</span>(<span class="number">0</span>,n/<span class="number">2</span>);</span><br><span class="line">    string b=s.<span class="built_in">substr</span>(n/<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">subtraction</span>(b,a)==<span class="string">&quot;2&quot;</span>)&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Yes: &quot;</span>&lt;&lt;b&lt;&lt;<span class="string">&quot; - &quot;</span>&lt;&lt;a&lt;&lt;<span class="string">&quot; = 2&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;No: &quot;</span>&lt;&lt;b&lt;&lt;<span class="string">&quot; - &quot;</span>&lt;&lt;a&lt;&lt;<span class="string">&quot; != 2&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其实这一题用不着这么麻烦，因为这题陈越手下留情了，尾数不会比7大。</p><p>但是这依然是一题练习高精度减法的好题。如果你对高精度减法不是很熟悉，那可以正好趁这一题练习一下，思路和前面的高精度加法其实大差不差。</p><p>多学一点总不坏不是吗，如果考出来了你不就比别人多AC一题？</p><h2 id="1117"><a href="#1117" class="headerlink" title="1117"></a>1117</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">sumnum</span><span class="params">(<span class="type">int</span> a)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (a&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="type">int</span> temp=a%<span class="number">10</span>;</span><br><span class="line">        res+=temp;</span><br><span class="line">        a/=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">sq</span><span class="params">(<span class="type">int</span> a)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (a&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="type">int</span> t=a%<span class="number">10</span>;</span><br><span class="line">        res=res*(t*t*t);</span><br><span class="line">        a/=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> n1,n2;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n1&gt;&gt;n2;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; ans;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=n1;i&lt;=n2;i++)&#123;</span><br><span class="line">        ans.<span class="built_in">push_back</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;ans.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (ans[i]&lt;<span class="number">10</span>&amp;&amp;ans[i]&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">                sum++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (sum==ans.<span class="built_in">size</span>())&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;ans.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">                <span class="type">int</span> x=<span class="built_in">sq</span>(ans[i]);</span><br><span class="line">                ans[i]=<span class="built_in">sumnum</span>(x);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    unordered_map&lt;<span class="type">int</span>,<span class="type">int</span>&gt; s;</span><br><span class="line">    set&lt;<span class="type">int</span>&gt; keyy;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;ans.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        s[ans[i]]++;</span><br><span class="line">        keyy.<span class="built_in">insert</span>(ans[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; king;</span><br><span class="line">    <span class="type">int</span> maxx=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> it:keyy)&#123;</span><br><span class="line">        maxx=<span class="built_in">max</span>(maxx,s[it]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> it:keyy)&#123;</span><br><span class="line">        <span class="keyword">if</span> (s[it]==maxx)&#123;</span><br><span class="line">            king.<span class="built_in">push_back</span>(it);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(king.<span class="built_in">begin</span>(),king.<span class="built_in">end</span>());</span><br><span class="line">    cout&lt;&lt;maxx&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;king.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (i==king.<span class="built_in">size</span>()<span class="number">-1</span>)&#123;</span><br><span class="line">            cout&lt;&lt;king[i];</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            cout&lt;&lt;king[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1118"><a href="#1118" class="headerlink" title="1118"></a>1118</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">string s;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    unordered_map&lt;string,<span class="type">int</span>&gt; n;</span><br><span class="line">    n.<span class="built_in">emplace</span>(<span class="string">&quot;yi&quot;</span>,<span class="number">1</span>),n.<span class="built_in">emplace</span>(<span class="string">&quot;er&quot;</span>,<span class="number">2</span>),n.<span class="built_in">emplace</span>(<span class="string">&quot;san&quot;</span>,<span class="number">3</span>),</span><br><span class="line">    n.<span class="built_in">emplace</span>(<span class="string">&quot;si&quot;</span>,<span class="number">4</span>),n.<span class="built_in">emplace</span>(<span class="string">&quot;wu&quot;</span>,<span class="number">5</span>),n.<span class="built_in">emplace</span>(<span class="string">&quot;liu&quot;</span>,<span class="number">6</span>),</span><br><span class="line">    n.<span class="built_in">emplace</span>(<span class="string">&quot;qi&quot;</span>,<span class="number">7</span>),n.<span class="built_in">emplace</span>(<span class="string">&quot;ba&quot;</span>,<span class="number">8</span>),n.<span class="built_in">emplace</span>(<span class="string">&quot;jiu&quot;</span>,<span class="number">9</span>),</span><br><span class="line">    n.<span class="built_in">emplace</span>(<span class="string">&quot;ling&quot;</span>,<span class="number">0</span>);</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; ans;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">11</span>;i++)&#123;</span><br><span class="line">        <span class="built_in">getline</span>(cin,s);</span><br><span class="line">        <span class="keyword">if</span> (s.<span class="built_in">size</span>()==<span class="number">1</span>&amp;&amp;<span class="built_in">isdigit</span>(s[<span class="number">0</span>]))&#123;</span><br><span class="line">            ans.<span class="built_in">push_back</span>(<span class="built_in">stoi</span>(s));</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (s.<span class="built_in">size</span>()&gt;=<span class="number">4</span>&amp;&amp;<span class="built_in">isalpha</span>(s[<span class="number">0</span>]))&#123;</span><br><span class="line">            string t=s.<span class="built_in">substr</span>(<span class="number">0</span>,<span class="number">4</span>);</span><br><span class="line">            <span class="keyword">if</span> (t==<span class="string">&quot;sqrt&quot;</span>)&#123;</span><br><span class="line">                <span class="type">int</span> x=<span class="built_in">sqrt</span>(<span class="built_in">stoi</span>(s.<span class="built_in">substr</span>(<span class="number">4</span>)));</span><br><span class="line">                ans.<span class="built_in">push_back</span>(x);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(t==<span class="string">&quot;ling&quot;</span>)&#123;</span><br><span class="line">                ans.<span class="built_in">push_back</span>(n[s]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(s.<span class="built_in">size</span>()==<span class="number">2</span>&amp;&amp;<span class="built_in">isalpha</span>(s[<span class="number">0</span>]))&#123;</span><br><span class="line">            ans.<span class="built_in">push_back</span>(n[s]);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(s.<span class="built_in">size</span>()==<span class="number">3</span>&amp;&amp;<span class="built_in">isalpha</span>(s[<span class="number">0</span>]))&#123;</span><br><span class="line">            ans.<span class="built_in">push_back</span>(n[s]);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">isdigit</span>(s[<span class="number">0</span>]))&#123;</span><br><span class="line">            vector&lt;<span class="type">int</span>&gt; nums;</span><br><span class="line">            string m;</span><br><span class="line">            string f;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;s.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (s[i]==<span class="string">&#x27;+&#x27;</span>||s[i]==<span class="string">&#x27;-&#x27;</span>||s[i]==<span class="string">&#x27;*&#x27;</span>||s[i]==<span class="string">&#x27;/&#x27;</span>||s[i]==<span class="string">&#x27;%&#x27;</span>||s[i]==<span class="string">&#x27;^&#x27;</span>)&#123;</span><br><span class="line">                    f=s[i];</span><br><span class="line">                    <span class="type">int</span> y=<span class="built_in">stoi</span>(m);</span><br><span class="line">                    nums.<span class="built_in">push_back</span>(y);</span><br><span class="line">                    m.<span class="built_in">clear</span>();</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    m+=s[i];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (!m.<span class="built_in">empty</span>())&#123;</span><br><span class="line">                <span class="type">int</span> t=<span class="built_in">stoi</span>(m);</span><br><span class="line">                nums.<span class="built_in">push_back</span>(t);</span><br><span class="line">                m.<span class="built_in">clear</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (f==<span class="string">&quot;+&quot;</span>)&#123;</span><br><span class="line">                ans.<span class="built_in">push_back</span>(nums[<span class="number">0</span>]+nums[<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (f==<span class="string">&quot;-&quot;</span>)&#123;</span><br><span class="line">                ans.<span class="built_in">push_back</span>(nums[<span class="number">0</span>]-nums[<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (f==<span class="string">&quot;*&quot;</span>)&#123;</span><br><span class="line">                ans.<span class="built_in">push_back</span>(nums[<span class="number">0</span>]*nums[<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (f==<span class="string">&quot;/&quot;</span>)&#123;</span><br><span class="line">                ans.<span class="built_in">push_back</span>(nums[<span class="number">0</span>]/nums[<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (f==<span class="string">&quot;%&quot;</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span> (nums[<span class="number">1</span>]==<span class="number">0</span>) ans.<span class="built_in">push_back</span>(<span class="number">0</span>); </span><br><span class="line">                <span class="keyword">else</span> ans.<span class="built_in">push_back</span>(nums[<span class="number">0</span>] % nums[<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (f==<span class="string">&quot;^&quot;</span>)&#123;</span><br><span class="line">                ans.<span class="built_in">push_back</span>(<span class="built_in">pow</span>(nums[<span class="number">0</span>],nums[<span class="number">1</span>]));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;ans.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        cout&lt;&lt;ans[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1119"><a href="#1119" class="headerlink" title="1119"></a>1119</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">panda</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;panda[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">ans</span><span class="params">(n,<span class="number">200</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (panda[i]&gt;panda[i<span class="number">-1</span>])&#123;</span><br><span class="line">            ans[i]=ans[i<span class="number">-1</span>]<span class="number">+100</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(panda[i]==panda[i<span class="number">-1</span>])&#123;</span><br><span class="line">            ans[i]=ans[i<span class="number">-1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=n<span class="number">-2</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">        <span class="keyword">if</span> (panda[i]&gt;panda[i<span class="number">+1</span>])&#123;</span><br><span class="line">            ans[i]=<span class="built_in">max</span>(ans[i],ans[i<span class="number">+1</span>]<span class="number">+100</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(panda[i]==panda[i<span class="number">+1</span>])&#123;</span><br><span class="line">            ans[i]=<span class="built_in">max</span>(ans[i],ans[i<span class="number">+1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        sum+=ans[i];</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;sum&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>贪心，建议和lc135一起做。</p><h2 id="1120"><a href="#1120" class="headerlink" title="1120"></a>1120</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n<span class="number">+1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">sum</span><span class="params">(n<span class="number">+1</span>)</span></span>;</span><br><span class="line">    sum[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">partial_sum</span>(a.<span class="built_in">begin</span>()<span class="number">+1</span>,a.<span class="built_in">end</span>(),sum.<span class="built_in">begin</span>()<span class="number">+1</span>);</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j=i<span class="number">+1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">            <span class="type">int</span> x=sum[j]-sum[i];</span><br><span class="line">            <span class="keyword">if</span> (x&lt;=m)&#123;</span><br><span class="line">                ans++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>非常公式的前缀和模板题</p><h2 id="1121"><a href="#1121" class="headerlink" title="1121"></a>1121</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">can</span><span class="params">(string a)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n=a.<span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;=a.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        string x=a.<span class="built_in">substr</span>(<span class="number">0</span>,i);</span><br><span class="line">        <span class="type">int</span> y=<span class="built_in">stoi</span>(x);</span><br><span class="line">        <span class="keyword">if</span> (y%i!=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> k;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;k;</span><br><span class="line">    <span class="function">vector&lt;string&gt; <span class="title">a</span><span class="params">(k)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;k;i++)&#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;k;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">can</span>(a[i]))&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;Yes&quot;</span>&lt;&lt;endl;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;No&quot;</span>&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1122"><a href="#1122" class="headerlink" title="1122"></a>1122</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    unordered_map&lt;<span class="type">int</span>,<span class="type">int</span>&gt; hash1;</span><br><span class="line">    set&lt;<span class="type">int</span>&gt; keyy;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i]%<span class="number">2</span>==<span class="number">1</span>)&#123;</span><br><span class="line">            keyy.<span class="built_in">insert</span>(a[i]);</span><br><span class="line">            hash1[a[i]]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> ans;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> it:keyy)&#123;</span><br><span class="line">        <span class="keyword">if</span> (hash1[it]%<span class="number">2</span>==<span class="number">1</span>)&#123;</span><br><span class="line">            ans=it;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1123"><a href="#1123" class="headerlink" title="1123"></a>1123</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理进位：s为数字字符串（已去除负号），n为保留的最后一位下标，c为进位标志</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">processCarry</span><span class="params">(string &amp;s, <span class="type">int</span> n, <span class="type">bool</span> needCarry)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!needCarry) &#123;</span><br><span class="line">        s = s.<span class="built_in">substr</span>(<span class="number">0</span>, n + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> pos = n;</span><br><span class="line">    <span class="keyword">while</span> (pos &gt;= <span class="number">0</span> &amp;&amp; needCarry) &#123;</span><br><span class="line">        <span class="keyword">if</span> (s[pos] == <span class="string">&#x27;.&#x27;</span>) &#123;</span><br><span class="line">            pos--;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (s[pos] == <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">            s[pos] = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">            needCarry = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            s[pos]++;</span><br><span class="line">            needCarry = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        pos--;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (needCarry) &#123;</span><br><span class="line">        s = <span class="string">&quot;1&quot;</span> + s;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    s = s.<span class="built_in">substr</span>(<span class="number">0</span>, n + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断是否为实际零值</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isActualZero</span><span class="params">(<span class="type">const</span> string &amp;s)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">char</span> c : s) &#123;</span><br><span class="line">        <span class="keyword">if</span> (c != <span class="string">&#x27;.&#x27;</span> &amp;&amp; c != <span class="string">&#x27;0&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> N, D;</span><br><span class="line">    cin &gt;&gt; N &gt;&gt; D;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">        <span class="type">int</span> command;</span><br><span class="line">        string numStr;</span><br><span class="line">        cin &gt;&gt; command &gt;&gt; numStr;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 处理负号</span></span><br><span class="line">        <span class="type">bool</span> isNegative = (numStr[<span class="number">0</span>] == <span class="string">&#x27;-&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (isNegative) &#123;</span><br><span class="line">            numStr = numStr.<span class="built_in">substr</span>(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 查找小数点位置</span></span><br><span class="line">        <span class="type">size_t</span> dotPos = numStr.<span class="built_in">find</span>(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (dotPos == string::npos) &#123;</span><br><span class="line">            dotPos = numStr.<span class="built_in">length</span>();</span><br><span class="line">            numStr += <span class="string">&quot;.&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 确保有足够的小数位</span></span><br><span class="line">        <span class="type">int</span> requiredLength = dotPos + D + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (numStr.<span class="built_in">length</span>() &lt; requiredLength) &#123;</span><br><span class="line">            numStr.<span class="built_in">append</span>(requiredLength - numStr.<span class="built_in">length</span>(), <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 确定检查位置</span></span><br><span class="line">        <span class="type">int</span> checkPos = dotPos + D + <span class="number">1</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 根据指令处理</span></span><br><span class="line">        <span class="type">bool</span> needCarry = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (command == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="comment">// 四舍五入</span></span><br><span class="line">            needCarry = (numStr[checkPos] &gt;= <span class="string">&#x27;5&#x27;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (command == <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="comment">// 截断</span></span><br><span class="line">            needCarry = <span class="literal">false</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (command == <span class="number">3</span>) &#123;</span><br><span class="line">            <span class="comment">// 四舍六入五成双</span></span><br><span class="line">            <span class="keyword">if</span> (numStr[checkPos] &gt; <span class="string">&#x27;5&#x27;</span>) &#123;</span><br><span class="line">                needCarry = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (numStr[checkPos] == <span class="string">&#x27;5&#x27;</span>) &#123;</span><br><span class="line">                <span class="comment">// 检查5后面是否有非零数字</span></span><br><span class="line">                <span class="type">bool</span> hasNonZeroAfter = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> j = checkPos + <span class="number">1</span>; j &lt; numStr.<span class="built_in">length</span>(); j++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (numStr[j] != <span class="string">&#x27;0&#x27;</span>) &#123;</span><br><span class="line">                        hasNonZeroAfter = <span class="literal">true</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span> (hasNonZeroAfter) &#123;</span><br><span class="line">                    needCarry = <span class="literal">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">// 5后全为0，根据保留位最后一位决定</span></span><br><span class="line">                    needCarry = ((numStr[dotPos + D] - <span class="string">&#x27;0&#x27;</span>) % <span class="number">2</span> != <span class="number">0</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 处理进位</span></span><br><span class="line">        <span class="built_in">processCarry</span>(numStr, dotPos + D, needCarry);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 处理输出</span></span><br><span class="line">        <span class="keyword">if</span> (isNegative &amp;&amp; !<span class="built_in">isActualZero</span>(numStr)) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;-&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 确保输出D位小数</span></span><br><span class="line">        <span class="type">size_t</span> currentDotPos = numStr.<span class="built_in">find</span>(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (currentDotPos == string::npos) &#123;</span><br><span class="line">            cout &lt;&lt; numStr;</span><br><span class="line">            <span class="keyword">if</span> (D &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;.&quot;</span>;</span><br><span class="line">                cout &lt;&lt; <span class="built_in">string</span>(D, <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            string integerPart = numStr.<span class="built_in">substr</span>(<span class="number">0</span>, currentDotPos);</span><br><span class="line">            string decimalPart = numStr.<span class="built_in">substr</span>(currentDotPos + <span class="number">1</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (decimalPart.<span class="built_in">length</span>() &lt; D) &#123;</span><br><span class="line">                decimalPart.<span class="built_in">append</span>(D - decimalPart.<span class="built_in">length</span>(), <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (decimalPart.<span class="built_in">length</span>() &gt; D) &#123;</span><br><span class="line">                decimalPart = decimalPart.<span class="built_in">substr</span>(<span class="number">0</span>, D);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            cout &lt;&lt; integerPart &lt;&lt; <span class="string">&quot;.&quot;</span> &lt;&lt; decimalPart;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;<span class="comment">//这样的题目是毫无意义的，已经脱离了算法竞赛想要考察的初衷</span></span><br></pre></td></tr></table></figure><p>看我最后一行吧，我感觉这种题可以跳了。</p><h2 id="1124"><a href="#1124" class="headerlink" title="1124"></a>1124</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; a;</span><br><span class="line">    a.<span class="built_in">push_back</span>(<span class="number">0</span>);</span><br><span class="line">    a.<span class="built_in">push_back</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="type">int</span> pos=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (x&lt;=<span class="number">1e8</span>)&#123;</span><br><span class="line">        x=a[pos]+a[pos<span class="number">+1</span>];</span><br><span class="line">        a.<span class="built_in">push_back</span>(x);</span><br><span class="line">        pos++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (n&lt;=<span class="number">0</span>) cout&lt;&lt;<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(n==<span class="number">1</span>) cout&lt;&lt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;a.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (n==a[i])&#123;</span><br><span class="line">                cout&lt;&lt;a[i]&lt;&lt;endl;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(n&gt;a[i<span class="number">-1</span>]&amp;&amp;n&lt;a[i])&#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">abs</span>(n-a[i<span class="number">-1</span>])&gt;<span class="built_in">abs</span>(n-a[i])) cout&lt;&lt;a[i];</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">abs</span>(n-a[i<span class="number">-1</span>])&lt;<span class="built_in">abs</span>(n-a[i])) cout&lt;&lt;a[i<span class="number">-1</span>];</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">abs</span>(n-a[i<span class="number">-1</span>])==<span class="built_in">abs</span>(n-a[i])) cout&lt;&lt;a[i<span class="number">-1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1125"><a href="#1125" class="headerlink" title="1125"></a>1125</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">string a,b;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(cin&gt;&gt;a)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    cin&gt;&gt;b;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> n = (<span class="type">int</span>)a.<span class="built_in">size</span>();</span><br><span class="line">    <span class="type">int</span> m = (<span class="type">int</span>)b.<span class="built_in">size</span>();</span><br><span class="line">    <span class="type">int</span> bestLen = INT_MAX;</span><br><span class="line">    <span class="type">int</span> bestL = <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 遍历 S 中每个可能作为 P 第一个字符匹配起点的位置</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] != b[<span class="number">0</span>]) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="type">int</span> p = i;</span><br><span class="line">        <span class="type">int</span> k = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 向右扫描，找到一个可以匹配完整 P 的结束位置</span></span><br><span class="line">        <span class="keyword">while</span> (p &lt; n &amp;&amp; k &lt; m)&#123;</span><br><span class="line">            <span class="keyword">if</span> (a[p] == b[k]) ++k;</span><br><span class="line">            ++p;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (k &lt; m) <span class="keyword">break</span>; <span class="comment">// 从此 i 开始向右都找不到完整的 P，后续 i 更大也不可能（可选的微优化）</span></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> end = p - <span class="number">1</span>;       <span class="comment">// 最后匹配到的字符索引</span></span><br><span class="line">        <span class="type">int</span> q = end;</span><br><span class="line">        <span class="type">int</span> t = m - <span class="number">1</span>;</span><br><span class="line">        <span class="comment">// 从 end 向左收缩，找到包含 P 的最短起点</span></span><br><span class="line">        <span class="keyword">while</span> (q &gt;= i)&#123;</span><br><span class="line">            <span class="keyword">if</span> (a[q] == b[t]) --t;</span><br><span class="line">            <span class="keyword">if</span> (t &lt; <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">            --q;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> start = q; <span class="comment">// q 指向匹配到 b[0] 的位置</span></span><br><span class="line">        <span class="type">int</span> len = end - start + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (len &lt; bestLen || (len == bestLen &amp;&amp; start &lt; bestL))&#123;</span><br><span class="line">            bestLen = len;</span><br><span class="line">            bestL = start;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 按题意 P 保证是 S 的一个非空子列，所以必有解</span></span><br><span class="line">    <span class="keyword">if</span> (bestL != <span class="number">-1</span>) cout &lt;&lt; a.<span class="built_in">substr</span>(bestL, bestLen) &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    <span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>125题里最难的那一题，这一题的难度目测在洛谷可以标到绿，也就是这可能是转专业考试最难的那一题了，这也不是一般的双指针，我直接坠机于此。</p><blockquote><p>好的，我帮你整理一份完整的题解思路，按照洛谷&#x2F;题解的风格写，便于直接放到题解区使用：</p><hr><h2 id="题意理解"><a href="#题意理解" class="headerlink" title="题意理解"></a>题意理解</h2><p>给定字符串 <strong>S</strong> 和字符串 <strong>P</strong>，保证 <strong>P</strong> 是 <strong>S</strong> 的一个<strong>子列</strong>（即可以通过删除 S 中某些字符得到 P）。<br> 要求在 S 中找出 <strong>最短的子串</strong>，使得该子串包含 P 作为子列；若有多个最短子串，输出起始位置最靠左的那个。</p><hr><h2 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h2><p>这道题和常见的“最小覆盖子串”不同，<strong>要求的是子列而不是字符频次</strong>。<br> 直观做法是：</p><ol><li><strong>枚举子串起点</strong>，然后向右找到第一个能完整匹配 P 的子串末尾。</li><li><strong>从右端回溯收缩左端</strong>，使子串长度尽量短。</li><li>记录最短的答案，最后输出。</li></ol><p>这样可以保证我们得到的子串长度最短，且如果有多个最短子串，取起点最小的。</p><hr><h2 id="算法步骤"><a href="#算法步骤" class="headerlink" title="算法步骤"></a>算法步骤</h2><p>假设字符串 <code>S</code> 长度为 <code>n</code>，字符串 <code>P</code> 长度为 <code>m</code>：</p><h3 id="Step-1-遍历可能的起点"><a href="#Step-1-遍历可能的起点" class="headerlink" title="Step 1: 遍历可能的起点"></a>Step 1: 遍历可能的起点</h3><p>从 <code>S</code> 的每个下标 <code>i</code> 开始，只有当 <code>S[i] == P[0]</code> 时才有可能成为起点，继续执行后续步骤。</p><h3 id="Step-2-正向匹配找到右端"><a href="#Step-2-正向匹配找到右端" class="headerlink" title="Step 2: 正向匹配找到右端"></a>Step 2: 正向匹配找到右端</h3><p>从 <code>i</code> 向右扫，依次匹配 <code>P</code> 的字符，当全部匹配完成时记录此时的下标 <code>end</code>，此时 <code>S[i..end]</code> 是一个<strong>包含 P 的子串</strong>。</p><blockquote><p>如果扫到结尾都没能匹配完整 P，说明以 <code>i</code> 开始无解，可以结束循环（后面的起点更靠右，也不可能匹配到更短的子串）。</p></blockquote><h3 id="Step-3-逆向收缩左端"><a href="#Step-3-逆向收缩左端" class="headerlink" title="Step 3: 逆向收缩左端"></a>Step 3: 逆向收缩左端</h3><p>从 <code>end</code> 开始，向左扫并倒序匹配 P 的字符，直到匹配到 <code>P[0]</code>，此时的下标 <code>start</code> 即是这个右端对应的<strong>最优左端</strong>。<br> 这样得到的 <code>S[start..end]</code> 就是以该右端为终点的最短子串。</p><h3 id="Step-4-更新答案"><a href="#Step-4-更新答案" class="headerlink" title="Step 4: 更新答案"></a>Step 4: 更新答案</h3><p>比较当前子串长度是否比之前更短，如果更短，或者长度相同但起点更靠左，就更新答案。</p><hr><h2 id="复杂度分析"><a href="#复杂度分析" class="headerlink" title="复杂度分析"></a>复杂度分析</h2><ul><li>每次外层循环正向匹配 O(n)，逆向收缩 O(n)，最坏情况是 O(n*m)。</li><li>对于本题数据规模（一般 n, m ≤ 10^4），完全可以接受。</li></ul><hr><h2 id="示例推演"><a href="#示例推演" class="headerlink" title="示例推演"></a>示例推演</h2><p>以 <code>S = &quot;abcdebdde&quot;, P = &quot;bde&quot;</code> 为例：</p><table><thead><tr><th>起点 i</th><th>正向匹配得到 end</th><th>匹配到的子串</th><th>逆向收缩后 start</th><th>最短子串</th></tr></thead><tbody><tr><td>i&#x3D;1 (S[1]&#x3D;’b’)</td><td>end&#x3D;8</td><td><code>bcdebdde</code></td><td>start&#x3D;4</td><td><code>bdde</code></td></tr><tr><td>i&#x3D;4 (S[4]&#x3D;’b’)</td><td>end&#x3D;8</td><td><code>bdde</code></td><td>start&#x3D;4</td><td><code>bdde</code></td></tr></tbody></table><p>最终答案为 <strong>“bdde”</strong>，长度最短且起点最左。</p><hr><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">string a,b;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line"></span><br><span class="line">    cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line">    <span class="type">int</span> n = a.<span class="built_in">size</span>(), m = b.<span class="built_in">size</span>();</span><br><span class="line">    <span class="type">int</span> bestLen = INT_MAX, bestL = <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] != b[<span class="number">0</span>]) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="type">int</span> p = i, k = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (p&lt;n &amp;&amp; k&lt;m)&#123;</span><br><span class="line">            <span class="keyword">if</span> (a[p] == b[k]) k++;</span><br><span class="line">            p++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (k &lt; m) <span class="keyword">break</span>; <span class="comment">// 从此 i 往后也匹配不到完整 P 了</span></span><br><span class="line">        <span class="type">int</span> end = p<span class="number">-1</span>;</span><br><span class="line">        <span class="type">int</span> q = end, t = m<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span> (q&gt;=i)&#123;</span><br><span class="line">            <span class="keyword">if</span> (a[q] == b[t]) t--;</span><br><span class="line">            <span class="keyword">if</span> (t&lt;<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">            q--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> start = q;</span><br><span class="line">        <span class="type">int</span> len = end - start + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (len &lt; bestLen || (len==bestLen &amp;&amp; start&lt;bestL))&#123;</span><br><span class="line">            bestLen = len;</span><br><span class="line">            bestL = start;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; a.<span class="built_in">substr</span>(bestL, bestLen) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li><strong>核心思路：</strong> 正向扩展保证包含 P，逆向收缩保证最短。</li><li><strong>关键细节：</strong><ol><li>每次只枚举可能的起点（匹配 <code>P[0]</code>）。</li><li>找到一个满足条件的右端后，要逆向收缩得到最短子串。</li><li>保留最短且起点最小的答案。</li></ol></li></ul><p>这种做法简单易写，不需要复杂的数据结构，也能轻松通过测试。</p><hr><p>要不要我帮你画一张<strong>双指针正反扫描的图解</strong>（标出 i, p, q, start, end 的移动过程）？这样题解会更直观，很多人看一眼就懂。</p></blockquote><h2 id="赛后总结："><a href="#赛后总结：" class="headerlink" title="赛后总结："></a>赛后总结：</h2><p>到此为止，PAT 乙级就正式结束，这一套题目我写了三周，在2025.9.30日正式完结。</p><p>你会发现，里面很多题目我使用了AI写的代码，有些时候是我写不出来求助AI了，有些时候是我写的代码实在太过丑陋，没法见人，就让AI改了改</p><p>这套题目并没有往届学长学姐说的那么神乎其神，相反，这套题目的无效题非常多，例如那种百行大模拟，我这里要点名批评B1123，简直是有点毛病。</p><p>缺点说完了，现在来说说优点，首先这一套题目属于是那种模拟大集训，只有少部分算法，而模拟依旧在考试中占大头（24年机考达到了5&#x2F;10的比例，23年5&#x2F;8……）这套题如果真的花时间去写了，并且一题一题订正到AC是可以很好的锻炼代码能力的，并且里面有很多坑可以踩（但是不是所有坑都是好坑，有些坑有点不明所以），很多模板可以训练，写完是绝对赚到的，当然前提是你一题一题订正了。</p><p>当然，如果你要求稳，只刷这个是肯定不够的，24年开始，算法的比例在上升了。</p><p>对于我个人而言，我在暑假看完了深入浅出，并且写了里面的练习题，但暑假的最后我开摆了两个礼拜，导致有点手生，这一套就帮我找回手感了，接下来肯定就是进行算法冲刺了。</p><p>​                                                                                                                                                                                                     ——by Schariac125</p><p>​                                                                                                                                   2025年9月30日写于福州大学旗山校区</p>]]></content>
      
      
      <categories>
          
          <category> 程序设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++,算法 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
